ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32h7xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB143:
  28              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @file    stm32h7xx_hal.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @verbatim
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @endverbatim
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @attention
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #include "stm32h7xx_hal.h"
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup STM32H7xx_HAL_Driver
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL  HAL
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @brief STM32H7xx HAL Driver version number V1.9.0
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_MAIN   (0x01UL) /*!< [31:24] main version */
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB1   (0x09UL) /*!< [23:16] sub1 version */
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB2   (0x00UL) /*!< [15:8]  sub2 version */
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_RC     (0x00UL) /*!< [7:0]  release candidate */
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION         ((__STM32H7xx_HAL_VERSION_MAIN << 24)\
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB1 << 16)\
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB2 << 8 )\
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_RC))
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     (uint32_t)10   /* 10 ms  */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __IO uint32_t uwTick;
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Private_Functions  HAL Private Functions
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group1 Initialization and de-initialization Functions
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****               ##### Initialization and de-initialization functions #####
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           and the backup domain when enabled.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) De-Initializes common part of the HAL.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           Tick interrupt priority.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              handled in milliseconds basis.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             ISR process will be blocked.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         HAL function), it performs the following:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           "stm32h7xx_hal_msp.c" to do the global low level hardware initialization
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         to have correct HAL operation.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t common_system_clock;
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    /* Configure Cortex-M4 Instruction cache through ART accelerator */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE &&  CORE_CM4 */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Set Interrupt Group Priority */
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemCoreClock global variable */
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_D1CPRE)
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemD2Clock global variable */
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_HPRE)
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = SystemD2Clock;
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = common_system_clock;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Init the low level hardware */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspInit();
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This function is optional.
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 5


 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_FORCE_RESET();
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_FORCE_RESET();
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_FORCE_RESET();
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_FORCE_RESET();
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* De-Init the low level hardware */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspDeInit();
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Initializes the MSP.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspInit(void)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  29              		.loc 1 229 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE143:
  38 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	2
  40              		.weak	HAL_MspDeInit
  41              		.thumb
  42              		.thumb_func
  44              	HAL_MspDeInit:
  45              	.LFB144:
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  DeInitializes the MSP.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspDeInit(void)
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  46              		.loc 1 240 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 6


  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE144:
  55 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	2
  57              		.global	HAL_DeInit
  58              		.thumb
  59              		.thumb_func
  61              	HAL_DeInit:
  62              	.LFB142:
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  63              		.loc 1 188 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 188 0
  68 0000 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  73              		.loc 1 190 0
  74 0002 194B     		ldr	r3, .L5
  75 0004 194A     		ldr	r2, .L5+4
  76 0006 DA67     		str	r2, [r3, #124]
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  77              		.loc 1 191 0
  78 0008 0024     		movs	r4, #0
  79 000a DC67     		str	r4, [r3, #124]
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  80              		.loc 1 193 0
  81 000c 184A     		ldr	r2, .L5+8
  82 000e C3F88020 		str	r2, [r3, #128]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  83              		.loc 1 194 0
  84 0012 C3F88040 		str	r4, [r3, #128]
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  85              		.loc 1 196 0
  86 0016 40F27122 		movw	r2, #625
  87 001a C3F88420 		str	r2, [r3, #132]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  88              		.loc 1 197 0
  89 001e C3F88440 		str	r4, [r3, #132]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
  90              		.loc 1 199 0
  91 0022 144A     		ldr	r2, .L5+12
  92 0024 C3F88820 		str	r2, [r3, #136]
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  93              		.loc 1 200 0
  94 0028 C3F88840 		str	r4, [r3, #136]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  95              		.loc 1 202 0
  96 002c 1822     		movs	r2, #24
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 7


  97 002e C3F88C20 		str	r2, [r3, #140]
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  98              		.loc 1 203 0
  99 0032 C3F88C40 		str	r4, [r3, #140]
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 100              		.loc 1 205 0
 101 0036 104A     		ldr	r2, .L5+16
 102 0038 C3F89020 		str	r2, [r3, #144]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 103              		.loc 1 206 0
 104 003c C3F89040 		str	r4, [r3, #144]
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 105              		.loc 1 208 0
 106 0040 4FF49B72 		mov	r2, #310
 107 0044 C3F89420 		str	r2, [r3, #148]
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 108              		.loc 1 209 0
 109 0048 C3F89440 		str	r4, [r3, #148]
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 110              		.loc 1 211 0
 111 004c 0B4A     		ldr	r2, .L5+20
 112 004e C3F89820 		str	r2, [r3, #152]
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 113              		.loc 1 212 0
 114 0052 C3F89840 		str	r4, [r3, #152]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 115              		.loc 1 214 0
 116 0056 0A4A     		ldr	r2, .L5+24
 117 0058 C3F89C20 		str	r2, [r3, #156]
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118              		.loc 1 215 0
 119 005c C3F89C40 		str	r4, [r3, #156]
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 120              		.loc 1 218 0
 121 0060 FFF7FEFF 		bl	HAL_MspDeInit
 122              	.LVL0:
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 123              		.loc 1 222 0
 124 0064 2046     		mov	r0, r4
 125 0066 10BD     		pop	{r4, pc}
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 0068 00440258 		.word	1476543488
 130 006c 31500100 		.word	86065
 131 0070 23C0000A 		.word	167821347
 132 0074 FF072803 		.word	52955135
 133 0078 FFC3FFE8 		.word	-385891329
 134 007c 3330D731 		.word	836186163
 135 0080 AADE2000 		.word	2154154
 136              		.cfi_endproc
 137              	.LFE142:
 139              		.section	.text.HAL_InitTick,"ax",%progbits
 140              		.align	2
 141              		.weak	HAL_InitTick
 142              		.thumb
 143              		.thumb_func
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 8


 145              	HAL_InitTick:
 146              	.LFB145:
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function configures the source of the time base.
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        Tick interrupt priority.
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementation  in user file.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 147              		.loc 1 263 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL1:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if((uint32_t)uwTickFreq == 0UL)
 152              		.loc 1 265 0
 153 0000 104B     		ldr	r3, .L13
 154 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 155 0004 C3B1     		cbz	r3, .L9
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 156              		.loc 1 263 0
 157 0006 10B5     		push	{r4, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0008 0446     		mov	r4, r0
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 163              		.loc 1 271 0
 164 000a 4FF47A70 		mov	r0, #1000
 165              	.LVL2:
 166 000e B0FBF3F3 		udiv	r3, r0, r3
 167 0012 0D4A     		ldr	r2, .L13+4
 168 0014 1068     		ldr	r0, [r2]
 169 0016 B0FBF3F0 		udiv	r0, r0, r3
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 9


 170 001a FFF7FEFF 		bl	HAL_SYSTICK_Config
 171              	.LVL3:
 172 001e 68B9     		cbnz	r0, .L10
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 173              		.loc 1 277 0
 174 0020 0F2C     		cmp	r4, #15
 175 0022 0DD8     		bhi	.L11
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 176              		.loc 1 279 0
 177 0024 0022     		movs	r2, #0
 178 0026 2146     		mov	r1, r4
 179 0028 4FF0FF30 		mov	r0, #-1
 180 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 181              	.LVL4:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 182              		.loc 1 280 0
 183 0030 064B     		ldr	r3, .L13+8
 184 0032 1C60     		str	r4, [r3]
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 185              		.loc 1 288 0
 186 0034 0020     		movs	r0, #0
 187 0036 10BD     		pop	{r4, pc}
 188              	.LVL5:
 189              	.L9:
 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 0
 192              		.cfi_restore 4
 193              		.cfi_restore 14
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 194              		.loc 1 267 0
 195 0038 0120     		movs	r0, #1
 196              	.LVL6:
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 197              		.loc 1 289 0
 198 003a 7047     		bx	lr
 199              	.LVL7:
 200              	.L10:
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 205              		.loc 1 273 0
 206 003c 0120     		movs	r0, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 10


 207 003e 10BD     		pop	{r4, pc}
 208              	.LVL8:
 209              	.L11:
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 210              		.loc 1 284 0
 211 0040 0120     		movs	r0, #1
 212              		.loc 1 289 0
 213 0042 10BD     		pop	{r4, pc}
 214              	.LVL9:
 215              	.L14:
 216              		.align	2
 217              	.L13:
 218 0044 00000000 		.word	.LANCHOR0
 219 0048 00000000 		.word	SystemCoreClock
 220 004c 00000000 		.word	.LANCHOR1
 221              		.cfi_endproc
 222              	.LFE145:
 224              		.section	.text.HAL_Init,"ax",%progbits
 225              		.align	2
 226              		.global	HAL_Init
 227              		.thumb
 228              		.thumb_func
 230              	HAL_Init:
 231              	.LFB141:
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 232              		.loc 1 135 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 10B5     		push	{r4, lr}
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 241              		.loc 1 147 0
 242 0002 0320     		movs	r0, #3
 243 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 244              	.LVL10:
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 245              		.loc 1 151 0
 246 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 247              	.LVL11:
 248 000c 0F49     		ldr	r1, .L19
 249 000e 8B69     		ldr	r3, [r1, #24]
 250 0010 C3F30323 		ubfx	r3, r3, #8, #4
 251 0014 0E4A     		ldr	r2, .L19+4
 252 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 253 0018 03F01F03 		and	r3, r3, #31
 254 001c D840     		lsrs	r0, r0, r3
 255              	.LVL12:
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 256              		.loc 1 158 0
 257 001e 8B69     		ldr	r3, [r1, #24]
 258 0020 03F00F03 		and	r3, r3, #15
 259 0024 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 260 0026 03F01F03 		and	r3, r3, #31
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 11


 261 002a 20FA03F3 		lsr	r3, r0, r3
 262 002e 094A     		ldr	r2, .L19+8
 263 0030 1360     		str	r3, [r2]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 264              		.loc 1 166 0
 265 0032 094B     		ldr	r3, .L19+12
 266 0034 1860     		str	r0, [r3]
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 267              		.loc 1 170 0
 268 0036 0020     		movs	r0, #0
 269              	.LVL13:
 270 0038 FFF7FEFF 		bl	HAL_InitTick
 271              	.LVL14:
 272 003c 18B9     		cbnz	r0, .L17
 273 003e 0446     		mov	r4, r0
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 274              		.loc 1 176 0
 275 0040 FFF7FEFF 		bl	HAL_MspInit
 276              	.LVL15:
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 277              		.loc 1 179 0
 278 0044 00E0     		b	.L16
 279              	.L17:
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 280              		.loc 1 172 0
 281 0046 0124     		movs	r4, #1
 282              	.L16:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 283              		.loc 1 180 0
 284 0048 2046     		mov	r0, r4
 285 004a 10BD     		pop	{r4, pc}
 286              	.L20:
 287              		.align	2
 288              	.L19:
 289 004c 00440258 		.word	1476543488
 290 0050 00000000 		.word	D1CorePrescTable
 291 0054 00000000 		.word	SystemD2Clock
 292 0058 00000000 		.word	SystemCoreClock
 293              		.cfi_endproc
 294              	.LFE141:
 296              		.section	.text.HAL_IncTick,"ax",%progbits
 297              		.align	2
 298              		.weak	HAL_IncTick
 299              		.thumb
 300              		.thumb_func
 302              	HAL_IncTick:
 303              	.LFB146:
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Group2 HAL Control functions
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    HAL Control functions
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 12


 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                       ##### HAL Control functions #####
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a tick value in millisecond
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Suspend the time base source interrupt
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Resume the time base source interrupt
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the HAL API driver version
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device identifier
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device revision identifier
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        used as application time base.
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       in Systick ISR.
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *      implementations in user file.
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_IncTick(void)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 304              		.loc 1 328 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 309              		.loc 1 329 0
 310 0000 034B     		ldr	r3, .L22
 311 0002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 312 0004 034A     		ldr	r2, .L22+4
 313 0006 1368     		ldr	r3, [r2]
 314 0008 0B44     		add	r3, r3, r1
 315 000a 1360     		str	r3, [r2]
 316 000c 7047     		bx	lr
 317              	.L23:
 318 000e 00BF     		.align	2
 319              	.L22:
 320 0010 00000000 		.word	.LANCHOR0
 321 0014 00000000 		.word	uwTick
 322              		.cfi_endproc
 323              	.LFE146:
 325              		.section	.text.HAL_GetTick,"ax",%progbits
 326              		.align	2
 327              		.weak	HAL_GetTick
 328              		.thumb
 329              		.thumb_func
 331              	HAL_GetTick:
 332              	.LFB147:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 13


 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick value
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 333              		.loc 1 339 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTick;
 338              		.loc 1 340 0
 339 0000 014B     		ldr	r3, .L25
 340 0002 1868     		ldr	r0, [r3]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 341              		.loc 1 341 0
 342 0004 7047     		bx	lr
 343              	.L26:
 344 0006 00BF     		.align	2
 345              	.L25:
 346 0008 00000000 		.word	uwTick
 347              		.cfi_endproc
 348              	.LFE147:
 350              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 351              		.align	2
 352              		.global	HAL_GetTickPrio
 353              		.thumb
 354              		.thumb_func
 356              	HAL_GetTickPrio:
 357              	.LFB148:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function returns a tick priority.
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick priority
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 358              		.loc 1 348 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickPrio;
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 363              		.loc 1 350 0
 364 0000 014B     		ldr	r3, .L28
 365 0002 1868     		ldr	r0, [r3]
 366 0004 7047     		bx	lr
 367              	.L29:
 368 0006 00BF     		.align	2
 369              	.L28:
 370 0008 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 14


 371              		.cfi_endproc
 372              	.LFE148:
 374              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 375              		.align	2
 376              		.global	HAL_SetTickFreq
 377              		.thumb
 378              		.thumb_func
 380              	HAL_SetTickFreq:
 381              	.LFB149:
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Set new tick Freq.
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Status
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 382              		.loc 1 357 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL16:
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 392              	.LVL17:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (uwTickFreq != Freq)
 393              		.loc 1 363 0
 394 0002 084B     		ldr	r3, .L34
 395 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 396 0006 8442     		cmp	r4, r0
 397 0008 09D0     		beq	.L32
 398              	.LVL18:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Back up uwTickFreq frequency */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     prevTickFreq = uwTickFreq;
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickFreq = Freq;
 399              		.loc 1 370 0
 400 000a 1870     		strb	r0, [r3]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Apply the new tick Freq  */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 401              		.loc 1 373 0
 402 000c 064B     		ldr	r3, .L34+4
 403 000e 1868     		ldr	r0, [r3]
 404              	.LVL19:
 405 0010 FFF7FEFF 		bl	HAL_InitTick
 406              	.LVL20:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 15


 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 407              		.loc 1 374 0
 408 0014 0346     		mov	r3, r0
 409 0016 18B1     		cbz	r0, .L31
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Restore previous tick frequency */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       uwTickFreq = prevTickFreq;
 410              		.loc 1 377 0
 411 0018 024A     		ldr	r2, .L34
 412 001a 1470     		strb	r4, [r2]
 413 001c 00E0     		b	.L31
 414              	.LVL21:
 415              	.L32:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 416              		.loc 1 358 0
 417 001e 0023     		movs	r3, #0
 418              	.LVL22:
 419              	.L31:
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return status;
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 420              		.loc 1 382 0
 421 0020 1846     		mov	r0, r3
 422 0022 10BD     		pop	{r4, pc}
 423              	.L35:
 424              		.align	2
 425              	.L34:
 426 0024 00000000 		.word	.LANCHOR0
 427 0028 00000000 		.word	.LANCHOR1
 428              		.cfi_endproc
 429              	.LFE149:
 431              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 432              		.align	2
 433              		.global	HAL_GetTickFreq
 434              		.thumb
 435              		.thumb_func
 437              	HAL_GetTickFreq:
 438              	.LFB150:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Return tick frequency.
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick period in Hz
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 439              		.loc 1 389 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickFreq;
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 444              		.loc 1 391 0
 445 0000 014B     		ldr	r3, .L37
 446 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 16


 447 0004 7047     		bx	lr
 448              	.L38:
 449 0006 00BF     		.align	2
 450              	.L37:
 451 0008 00000000 		.word	.LANCHOR0
 452              		.cfi_endproc
 453              	.LFE150:
 455              		.section	.text.HAL_Delay,"ax",%progbits
 456              		.align	2
 457              		.weak	HAL_Delay
 458              		.thumb
 459              		.thumb_func
 461              	HAL_Delay:
 462              	.LFB151:
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        on variable incremented.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is incremented.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 463              		.loc 1 405 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL23:
 468 0000 38B5     		push	{r3, r4, r5, lr}
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 16
 471              		.cfi_offset 3, -16
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 5, -8
 474              		.cfi_offset 14, -4
 475 0002 0446     		mov	r4, r0
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 476              		.loc 1 406 0
 477 0004 FFF7FEFF 		bl	HAL_GetTick
 478              	.LVL24:
 479 0008 0546     		mov	r5, r0
 480              	.LVL25:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t wait = Delay;
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 481              		.loc 1 410 0
 482 000a B4F1FF3F 		cmp	r4, #-1
 483 000e 02D0     		beq	.L41
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 484              		.loc 1 412 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 17


 485 0010 044B     		ldr	r3, .L43
 486 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 487 0014 1C44     		add	r4, r4, r3
 488              	.LVL26:
 489              	.L41:
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 490              		.loc 1 415 0 discriminator 1
 491 0016 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL27:
 493 001a 401B     		subs	r0, r0, r5
 494 001c 8442     		cmp	r4, r0
 495 001e FAD8     		bhi	.L41
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 496              		.loc 1 418 0
 497 0020 38BD     		pop	{r3, r4, r5, pc}
 498              	.LVL28:
 499              	.L44:
 500 0022 00BF     		.align	2
 501              	.L43:
 502 0024 00000000 		.word	.LANCHOR0
 503              		.cfi_endproc
 504              	.LFE151:
 506              		.section	.text.HAL_SuspendTick,"ax",%progbits
 507              		.align	2
 508              		.weak	HAL_SuspendTick
 509              		.thumb
 510              		.thumb_func
 512              	HAL_SuspendTick:
 513              	.LFB152:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Suspend Tick increment.
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is suspended.
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_SuspendTick(void)
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 514              		.loc 1 431 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Disable SysTick Interrupt */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 519              		.loc 1 433 0
 520 0000 024A     		ldr	r2, .L46
 521 0002 1368     		ldr	r3, [r2]
 522 0004 23F00203 		bic	r3, r3, #2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 18


 523 0008 1360     		str	r3, [r2]
 524 000a 7047     		bx	lr
 525              	.L47:
 526              		.align	2
 527              	.L46:
 528 000c 10E000E0 		.word	-536813552
 529              		.cfi_endproc
 530              	.LFE152:
 532              		.section	.text.HAL_ResumeTick,"ax",%progbits
 533              		.align	2
 534              		.weak	HAL_ResumeTick
 535              		.thumb
 536              		.thumb_func
 538              	HAL_ResumeTick:
 539              	.LFB153:
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Resume Tick increment.
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is resumed.
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_ResumeTick(void)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 540              		.loc 1 447 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Enable SysTick Interrupt */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 545              		.loc 1 449 0
 546 0000 024A     		ldr	r2, .L49
 547 0002 1368     		ldr	r3, [r2]
 548 0004 43F00203 		orr	r3, r3, #2
 549 0008 1360     		str	r3, [r2]
 550 000a 7047     		bx	lr
 551              	.L50:
 552              		.align	2
 553              	.L49:
 554 000c 10E000E0 		.word	-536813552
 555              		.cfi_endproc
 556              	.LFE153:
 558              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 559              		.align	2
 560              		.global	HAL_GetHalVersion
 561              		.thumb
 562              		.thumb_func
 564              	HAL_GetHalVersion:
 565              	.LFB154:
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 19


 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the HAL revision
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 566              		.loc 1 457 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  return __STM32H7xx_HAL_VERSION;
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 571              		.loc 1 459 0
 572 0000 0048     		ldr	r0, .L52
 573 0002 7047     		bx	lr
 574              	.L53:
 575              		.align	2
 576              	.L52:
 577 0004 00000901 		.word	17367040
 578              		.cfi_endproc
 579              	.LFE154:
 581              		.section	.text.HAL_GetREVID,"ax",%progbits
 582              		.align	2
 583              		.global	HAL_GetREVID
 584              		.thumb
 585              		.thumb_func
 587              	HAL_GetREVID:
 588              	.LFB155:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device revision identifier.
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device revision identifier
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetREVID(void)
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 589              		.loc 1 466 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 594              		.loc 1 467 0
 595 0000 014B     		ldr	r3, .L55
 596 0002 1868     		ldr	r0, [r3]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 597              		.loc 1 468 0
 598 0004 000C     		lsrs	r0, r0, #16
 599 0006 7047     		bx	lr
 600              	.L56:
 601              		.align	2
 602              	.L55:
 603 0008 0010005C 		.word	1543507968
 604              		.cfi_endproc
 605              	.LFE155:
 607              		.section	.text.HAL_GetDEVID,"ax",%progbits
 608              		.align	2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 20


 609              		.global	HAL_GetDEVID
 610              		.thumb
 611              		.thumb_func
 613              	HAL_GetDEVID:
 614              	.LFB156:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device identifier.
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 615              		.loc 1 475 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 620              		.loc 1 476 0
 621 0000 024B     		ldr	r3, .L58
 622 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 623              		.loc 1 477 0
 624 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 625 0008 7047     		bx	lr
 626              	.L59:
 627 000a 00BF     		.align	2
 628              	.L58:
 629 000c 0010005C 		.word	1543507968
 630              		.cfi_endproc
 631              	.LFE156:
 633              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 634              		.align	2
 635              		.global	HAL_GetUIDw0
 636              		.thumb
 637              		.thumb_func
 639              	HAL_GetUIDw0:
 640              	.LFB157:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 641              		.loc 1 484 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 646              		.loc 1 486 0
 647 0000 014B     		ldr	r3, .L61
 648 0002 1868     		ldr	r0, [r3]
 649 0004 7047     		bx	lr
 650              	.L62:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 21


 651 0006 00BF     		.align	2
 652              	.L61:
 653 0008 00E8F11F 		.word	535947264
 654              		.cfi_endproc
 655              	.LFE157:
 657              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 658              		.align	2
 659              		.global	HAL_GetUIDw1
 660              		.thumb
 661              		.thumb_func
 663              	HAL_GetUIDw1:
 664              	.LFB158:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 665              		.loc 1 493 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 670              		.loc 1 495 0
 671 0000 014B     		ldr	r3, .L64
 672 0002 1868     		ldr	r0, [r3]
 673 0004 7047     		bx	lr
 674              	.L65:
 675 0006 00BF     		.align	2
 676              	.L64:
 677 0008 04E8F11F 		.word	535947268
 678              		.cfi_endproc
 679              	.LFE158:
 681              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 682              		.align	2
 683              		.global	HAL_GetUIDw2
 684              		.thumb
 685              		.thumb_func
 687              	HAL_GetUIDw2:
 688              	.LFB159:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 689              		.loc 1 502 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 22


 694              		.loc 1 504 0
 695 0000 014B     		ldr	r3, .L67
 696 0002 1868     		ldr	r0, [r3]
 697 0004 7047     		bx	lr
 698              	.L68:
 699 0006 00BF     		.align	2
 700              	.L67:
 701 0008 08E8F11F 		.word	535947272
 702              		.cfi_endproc
 703              	.LFE159:
 705              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
 706              		.align	2
 707              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 708              		.thumb
 709              		.thumb_func
 711              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 712              	.LFB160:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param VoltageScaling  specifies the output voltage to achieve
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.048 V.
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.5 V.
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.5 V.
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.8 V.
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 713              		.loc 1 521 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              	.LVL29:
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 719              		.loc 1 525 0
 720 0000 034A     		ldr	r2, .L70
 721 0002 1368     		ldr	r3, [r2]
 722 0004 23F07003 		bic	r3, r3, #112
 723 0008 1843     		orrs	r0, r0, r3
 724              	.LVL30:
 725 000a 1060     		str	r0, [r2]
 726 000c 7047     		bx	lr
 727              	.L71:
 728 000e 00BF     		.align	2
 729              	.L70:
 730 0010 003C0058 		.word	1476410368
 731              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 23


 732              	.LFE160:
 734              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 735              		.align	2
 736              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 737              		.thumb
 738              		.thumb_func
 740              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
 741              	.LFB161:
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Mode  specifies the high impedance mode
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFI
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 742              		.loc 1 537 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL31:
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 748              		.loc 1 541 0
 749 0000 034A     		ldr	r2, .L73
 750 0002 1368     		ldr	r3, [r2]
 751 0004 23F00203 		bic	r3, r3, #2
 752 0008 1843     		orrs	r0, r0, r3
 753              	.LVL32:
 754 000a 1060     		str	r0, [r2]
 755 000c 7047     		bx	lr
 756              	.L74:
 757 000e 00BF     		.align	2
 758              	.L73:
 759 0010 003C0058 		.word	1476410368
 760              		.cfi_endproc
 761              	.LFE161:
 763              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 764              		.align	2
 765              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 766              		.thumb
 767              		.thumb_func
 769              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 770              	.LFB162:
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 24


 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 771              		.loc 1 549 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776              	.LVL33:
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 777              		.loc 1 553 0
 778 0000 034A     		ldr	r2, .L76
 779 0002 5368     		ldr	r3, [r2, #4]
 780 0004 23F03F03 		bic	r3, r3, #63
 781 0008 1843     		orrs	r0, r0, r3
 782              	.LVL34:
 783 000a 5060     		str	r0, [r2, #4]
 784 000c 7047     		bx	lr
 785              	.L77:
 786 000e 00BF     		.align	2
 787              	.L76:
 788 0010 003C0058 		.word	1476410368
 789              		.cfi_endproc
 790              	.LFE162:
 792              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 793              		.align	2
 794              		.global	HAL_SYSCFG_EnableVREFBUF
 795              		.thumb
 796              		.thumb_func
 798              	HAL_SYSCFG_EnableVREFBUF:
 799              	.LFB163:
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 800              		.loc 1 561 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804 0000 10B5     		push	{r4, lr}
 805              	.LCFI7:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t  tickstart;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 809              		.loc 1 564 0
 810 0002 0B4A     		ldr	r2, .L84
 811 0004 1368     		ldr	r3, [r2]
 812 0006 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 25


 813 000a 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Get Start Tick*/
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   tickstart = HAL_GetTick();
 814              		.loc 1 567 0
 815 000c FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL35:
 817 0010 0446     		mov	r4, r0
 818              	.LVL36:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Wait for VRR bit  */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 819              		.loc 1 570 0
 820 0012 04E0     		b	.L79
 821              	.LVL37:
 822              	.L81:
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 823              		.loc 1 572 0
 824 0014 FFF7FEFF 		bl	HAL_GetTick
 825              	.LVL38:
 826 0018 001B     		subs	r0, r0, r4
 827 001a 0A28     		cmp	r0, #10
 828 001c 06D8     		bhi	.L82
 829              	.L79:
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 830              		.loc 1 570 0
 831 001e 044B     		ldr	r3, .L84
 832 0020 1B68     		ldr	r3, [r3]
 833 0022 13F0080F 		tst	r3, #8
 834 0026 F5D0     		beq	.L81
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_TIMEOUT;
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 835              		.loc 1 578 0
 836 0028 0020     		movs	r0, #0
 837 002a 10BD     		pop	{r4, pc}
 838              	.LVL39:
 839              	.L82:
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 840              		.loc 1 574 0
 841 002c 0320     		movs	r0, #3
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 842              		.loc 1 579 0
 843 002e 10BD     		pop	{r4, pc}
 844              	.LVL40:
 845              	.L85:
 846              		.align	2
 847              	.L84:
 848 0030 003C0058 		.word	1476410368
 849              		.cfi_endproc
 850              	.LFE163:
 852              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 853              		.align	2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 26


 854              		.global	HAL_SYSCFG_DisableVREFBUF
 855              		.thumb
 856              		.thumb_func
 858              	HAL_SYSCFG_DisableVREFBUF:
 859              	.LFB164:
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 860              		.loc 1 587 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 865              		.loc 1 588 0
 866 0000 024A     		ldr	r2, .L87
 867 0002 1368     		ldr	r3, [r2]
 868 0004 23F00103 		bic	r3, r3, #1
 869 0008 1360     		str	r3, [r2]
 870 000a 7047     		bx	lr
 871              	.L88:
 872              		.align	2
 873              	.L87:
 874 000c 003C0058 		.word	1476410368
 875              		.cfi_endproc
 876              	.LFE164:
 878              		.section	.text.HAL_SYSCFG_ETHInterfaceSelect,"ax",%progbits
 879              		.align	2
 880              		.global	HAL_SYSCFG_ETHInterfaceSelect
 881              		.thumb
 882              		.thumb_func
 884              	HAL_SYSCFG_ETHInterfaceSelect:
 885              	.LFB165:
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_EPIS_SEL)
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_ETHInterface: Selects the Ethernet PHY interface
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_MII : Select the Media Independent Interface
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_RMII: Select the Reduced Media Independent Interface
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ETHInterfaceSelect(uint32_t SYSCFG_ETHInterface)
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 886              		.loc 1 601 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891              	.LVL41:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 27


 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ETHERNET_CONFIG(SYSCFG_ETHInterface));
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, SYSCFG_PMCR_EPIS_SEL, (uint32_t)(SYSCFG_ETHInterface));
 892              		.loc 1 605 0
 893 0000 034A     		ldr	r2, .L90
 894 0002 5368     		ldr	r3, [r2, #4]
 895 0004 23F46003 		bic	r3, r3, #14680064
 896 0008 1843     		orrs	r0, r0, r3
 897              	.LVL42:
 898 000a 5060     		str	r0, [r2, #4]
 899 000c 7047     		bx	lr
 900              	.L91:
 901 000e 00BF     		.align	2
 902              	.L90:
 903 0010 00040058 		.word	1476396032
 904              		.cfi_endproc
 905              	.LFE165:
 907              		.section	.text.HAL_SYSCFG_AnalogSwitchConfig,"ax",%progbits
 908              		.align	2
 909              		.global	HAL_SYSCFG_AnalogSwitchConfig
 910              		.thumb
 911              		.thumb_func
 913              	HAL_SYSCFG_AnalogSwitchConfig:
 914              	.LFB166:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_EPIS_SEL */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Analog Switch control for dual analog pads.
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_AnalogSwitch: Selects the analog pad
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0 : Select PA0 analog switch
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1:  Select PA1 analog switch
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2 : Select PC2 analog switch
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3:  Select PC3 analog switch
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_SwitchState: Open or Close the analog switch between dual pads (PXn and PXn_C)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_OPEN
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_CLOSE
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_OPEN
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_CLOSE
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_OPEN
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_CLOSE
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_OPEN
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_CLOSE
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 915              		.loc 1 631 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920              	.LVL43:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 28


 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 921              		.loc 1 636 0
 922 0000 034A     		ldr	r2, .L93
 923 0002 5368     		ldr	r3, [r2, #4]
 924 0004 23EA0000 		bic	r0, r3, r0
 925              	.LVL44:
 926 0008 0143     		orrs	r1, r1, r0
 927              	.LVL45:
 928 000a 5160     		str	r1, [r2, #4]
 929 000c 7047     		bx	lr
 930              	.L94:
 931 000e 00BF     		.align	2
 932              	.L93:
 933 0010 00040058 		.word	1476396032
 934              		.cfi_endproc
 935              	.LFE166:
 937              		.section	.text.HAL_SYSCFG_EnableBOOST,"ax",%progbits
 938              		.align	2
 939              		.global	HAL_SYSCFG_EnableBOOST
 940              		.thumb
 941              		.thumb_func
 943              	HAL_SYSCFG_EnableBOOST:
 944              	.LFB167:
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_BOOSTEN)
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the booster to reduce the total harmonic distortion of the analog
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         switch when the supply voltage is lower than 2.7 V.
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableBOOST(void)
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 945              		.loc 1 649 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 950              		.loc 1 650 0
 951 0000 024A     		ldr	r2, .L96
 952 0002 5368     		ldr	r3, [r2, #4]
 953 0004 43F48073 		orr	r3, r3, #256
 954 0008 5360     		str	r3, [r2, #4]
 955 000a 7047     		bx	lr
 956              	.L97:
 957              		.align	2
 958              	.L96:
 959 000c 00040058 		.word	1476396032
 960              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 29


 961              	.LFE167:
 963              		.section	.text.HAL_SYSCFG_DisableBOOST,"ax",%progbits
 964              		.align	2
 965              		.global	HAL_SYSCFG_DisableBOOST
 966              		.thumb
 967              		.thumb_func
 969              	HAL_SYSCFG_DisableBOOST:
 970              	.LFB168:
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the booster
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableBOOST(void)
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 971              		.loc 1 661 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 976              		.loc 1 662 0
 977 0000 024A     		ldr	r2, .L99
 978 0002 5368     		ldr	r3, [r2, #4]
 979 0004 23F48073 		bic	r3, r3, #256
 980 0008 5360     		str	r3, [r2, #4]
 981 000a 7047     		bx	lr
 982              	.L100:
 983              		.align	2
 984              	.L99:
 985 000c 00040058 		.word	1476396032
 986              		.cfi_endproc
 987              	.LFE168:
 989              		.section	.text.HAL_SYSCFG_CM7BootAddConfig,"ax",%progbits
 990              		.align	2
 991              		.global	HAL_SYSCFG_CM7BootAddConfig
 992              		.thumb
 993              		.thumb_func
 995              	HAL_SYSCFG_CM7BootAddConfig:
 996              	.LFB169:
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_BOOSTEN */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined (SYSCFG_UR2_BOOT_ADD0) ||  defined (SYSCFG_UR2_BCM7_ADD0)
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM7 address 0 configuration
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM7 Boot Address to be loaded in Address0 or Address1
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 30


 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM7BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 997              		.loc 1 677 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002              	.LVL46:
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 1003              		.loc 1 681 0
 1004 0000 48B9     		cbnz	r0, .L102
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD0 */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BCM7_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BCM7_ADD0_Pos)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BOOT_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BOOT_ADD0_Pos)
 1005              		.loc 1 687 0
 1006 0002 0A48     		ldr	r0, .L104
 1007              	.LVL47:
 1008 0004 D0F80823 		ldr	r2, [r0, #776]
 1009 0008 93B2     		uxth	r3, r2
 1010 000a 094A     		ldr	r2, .L104+4
 1011 000c 0A40     		ands	r2, r2, r1
 1012 000e 1A43     		orrs	r2, r2, r3
 1013 0010 C0F80823 		str	r2, [r0, #776]
 1014 0014 7047     		bx	lr
 1015              	.LVL48:
 1016              	.L102:
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD1 */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM7_ADD1, (BootAddress >> 16));
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BOOT_ADD1, (BootAddress >> 16));
 1017              		.loc 1 696 0
 1018 0016 054A     		ldr	r2, .L104
 1019 0018 D2F80C03 		ldr	r0, [r2, #780]
 1020              	.LVL49:
 1021 001c 044B     		ldr	r3, .L104+4
 1022 001e 0340     		ands	r3, r3, r0
 1023 0020 43EA1143 		orr	r3, r3, r1, lsr #16
 1024 0024 C2F80C33 		str	r3, [r2, #780]
 1025 0028 7047     		bx	lr
 1026              	.L105:
 1027 002a 00BF     		.align	2
 1028              	.L104:
 1029 002c 00040058 		.word	1476396032
 1030 0030 0000FFFF 		.word	-65536
 1031              		.cfi_endproc
 1032              	.LFE169:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 31


 1034              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1035              		.align	2
 1036              		.global	HAL_EnableCompensationCell
 1037              		.thumb
 1038              		.thumb_func
 1040              	HAL_EnableCompensationCell:
 1041              	.LFB170:
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_UR2_BOOT_ADD0 || SYSCFG_UR2_BCM7_ADD0 */
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM4 address 0 configuration
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM4 Boot Address to be loaded in Address0 or Address1
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM4BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD0 */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM4_ADD0, ((BootAddress >> 16)<< SYSCFG_UR3_BCM4_ADD0_Pos))
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD1 */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR4, SYSCFG_UR4_BCM4_ADD1, (BootAddress >> 16));
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M7 boot
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM7BOOT(void)
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M7 boot
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM7BOOT(void)
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 32


 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7) ;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M4 boot
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM4BOOT(void)
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M4 boot
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM4BOOT(void)
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableCompensationCell(void)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1042              		.loc 1 776 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN) ;
 1047              		.loc 1 777 0
 1048 0000 024A     		ldr	r2, .L107
 1049 0002 136A     		ldr	r3, [r2, #32]
 1050 0004 43F00103 		orr	r3, r3, #1
 1051 0008 1362     		str	r3, [r2, #32]
 1052 000a 7047     		bx	lr
 1053              	.L108:
 1054              		.align	2
 1055              	.L107:
 1056 000c 00040058 		.word	1476396032
 1057              		.cfi_endproc
 1058              	.LFE170:
 1060              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1061              		.align	2
 1062              		.global	HAL_DisableCompensationCell
 1063              		.thumb
 1064              		.thumb_func
 1066              	HAL_DisableCompensationCell:
 1067              	.LFB171:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 33


 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableCompensationCell(void)
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1068              		.loc 1 787 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN);
 1073              		.loc 1 788 0
 1074 0000 024A     		ldr	r2, .L110
 1075 0002 136A     		ldr	r3, [r2, #32]
 1076 0004 23F00103 		bic	r3, r3, #1
 1077 0008 1362     		str	r3, [r2, #32]
 1078 000a 7047     		bx	lr
 1079              	.L111:
 1080              		.align	2
 1081              	.L110:
 1082 000c 00040058 		.word	1476396032
 1083              		.cfi_endproc
 1084              	.LFE171:
 1086              		.section	.text.HAL_SYSCFG_EnableIOSpeedOptimize,"ax",%progbits
 1087              		.align	2
 1088              		.global	HAL_SYSCFG_EnableIOSpeedOptimize
 1089              		.thumb
 1090              		.thumb_func
 1092              	HAL_SYSCFG_EnableIOSpeedOptimize:
 1093              	.LFB172:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Enable optimize the I/O speed when the product voltage is low.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableIOSpeedOptimize(void)
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1094              		.loc 1 800 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1099              		.loc 1 802 0
 1100 0000 024A     		ldr	r2, .L113
 1101 0002 136A     		ldr	r3, [r2, #32]
 1102 0004 43F48033 		orr	r3, r3, #65536
 1103 0008 1362     		str	r3, [r2, #32]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 34


 1104 000a 7047     		bx	lr
 1105              	.L114:
 1106              		.align	2
 1107              	.L113:
 1108 000c 00040058 		.word	1476396032
 1109              		.cfi_endproc
 1110              	.LFE172:
 1112              		.section	.text.HAL_SYSCFG_DisableIOSpeedOptimize,"ax",%progbits
 1113              		.align	2
 1114              		.global	HAL_SYSCFG_DisableIOSpeedOptimize
 1115              		.thumb
 1116              		.thumb_func
 1118              	HAL_SYSCFG_DisableIOSpeedOptimize:
 1119              	.LFB173:
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_CCC
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Disable optimize the I/O speed when the product voltage is low.
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableIOSpeedOptimize(void)
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1120              		.loc 1 816 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1125              		.loc 1 818 0
 1126 0000 024A     		ldr	r2, .L116
 1127 0002 136A     		ldr	r3, [r2, #32]
 1128 0004 23F48033 		bic	r3, r3, #65536
 1129 0008 1362     		str	r3, [r2, #32]
 1130 000a 7047     		bx	lr
 1131              	.L117:
 1132              		.align	2
 1133              	.L116:
 1134 000c 00040058 		.word	1476396032
 1135              		.cfi_endproc
 1136              	.LFE173:
 1138              		.section	.text.HAL_SYSCFG_CompensationCodeSelect,"ax",%progbits
 1139              		.align	2
 1140              		.global	HAL_SYSCFG_CompensationCodeSelect
 1141              		.thumb
 1142              		.thumb_func
 1144              	HAL_SYSCFG_CompensationCodeSelect:
 1145              	.LFB174:
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_C
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 35


 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_CompCode: Selects the code to be applied for the I/O compensation cell
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_CELL_CODE : Select Code from the cell (available in the SYSCFG_CCVR)
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_REGISTER_CODE: Select Code from the SYSCFG compensation cell code register (SYSCF
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeSelect(uint32_t SYSCFG_CompCode)
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1146              		.loc 1 833 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              		@ link register save eliminated.
 1151              	.LVL50:
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_SELECT(SYSCFG_CompCode));
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCSR, SYSCFG_CCCSR_CS, (uint32_t)(SYSCFG_CompCode));
 1152              		.loc 1 836 0
 1153 0000 034A     		ldr	r2, .L119
 1154 0002 136A     		ldr	r3, [r2, #32]
 1155 0004 23F00203 		bic	r3, r3, #2
 1156 0008 1843     		orrs	r0, r0, r3
 1157              	.LVL51:
 1158 000a 1062     		str	r0, [r2, #32]
 1159 000c 7047     		bx	lr
 1160              	.L120:
 1161 000e 00BF     		.align	2
 1162              	.L119:
 1163 0010 00040058 		.word	1476396032
 1164              		.cfi_endproc
 1165              	.LFE174:
 1167              		.section	.text.HAL_SYSCFG_CompensationCodeConfig,"ax",%progbits
 1168              		.align	2
 1169              		.global	HAL_SYSCFG_CompensationCodeConfig
 1170              		.thumb
 1171              		.thumb_func
 1173              	HAL_SYSCFG_CompensationCodeConfig:
 1174              	.LFB175:
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: PMOS compensation code
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: NMOS compensation code
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1175              		.loc 1 850 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 36


 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180              	.LVL52:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, SYSCFG_CCCR_NCC|SYSCFG_CCCR_PCC, (((uint32_t)(SYSCFG_PMOSCode)<< 4)|(uin
 1181              		.loc 1 854 0
 1182 0000 044A     		ldr	r2, .L122
 1183 0002 936A     		ldr	r3, [r2, #40]
 1184 0004 23F0FF03 		bic	r3, r3, #255
 1185 0008 41EA0011 		orr	r1, r1, r0, lsl #4
 1186              	.LVL53:
 1187 000c 1943     		orrs	r1, r1, r3
 1188 000e 9162     		str	r1, [r2, #40]
 1189 0010 7047     		bx	lr
 1190              	.L123:
 1191 0012 00BF     		.align	2
 1192              	.L122:
 1193 0014 00040058 		.word	1476396032
 1194              		.cfi_endproc
 1195              	.LFE175:
 1197              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 1198              		.align	2
 1199              		.global	HAL_DBGMCU_EnableDBGSleepMode
 1200              		.thumb
 1201              		.thumb_func
 1203              	HAL_DBGMCU_EnableDBGSleepMode:
 1204              	.LFB176:
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCR_NCC_MMC)
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: VDDMMC PMOS compensation code
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: VDDMMC NMOS compensation code
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VDDMMC_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, (SYSCFG_CCCR_NCC_MMC | SYSCFG_CCCR_PCC_MMC), (((uint32_t)(SYSCFG_PMOSCod
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_CCCR_NCC_MMC */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT0)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout0 This parameter can be a value of :
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_DAC1_1   DAC1_out1 connected to ADC2 VINP[16]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 37


 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_VBAT4    VBAT/4 connected to ADC2 VINP[16]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout0Config(uint32_t Adc2AltRout0)
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT0(Adc2AltRout0));
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT0, Adc2AltRout0);
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT0*/
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT1)
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout1  This parameter can be a value of :
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_DAC1_2   DAC1_out2 connected to ADC2 VINP[17]
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_VREFINT  VREFINT connected to ADC2 VINP[17]
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout1Config(uint32_t Adc2AltRout1)
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT1(Adc2AltRout1));
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT1, Adc2AltRout1);
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT1*/
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain SLEEP mode
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGSleepMode(void)
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1205              		.loc 1 918 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1210              		.loc 1 919 0
 1211 0000 024A     		ldr	r2, .L125
 1212 0002 5368     		ldr	r3, [r2, #4]
 1213 0004 43F00103 		orr	r3, r3, #1
 1214 0008 5360     		str	r3, [r2, #4]
 1215 000a 7047     		bx	lr
 1216              	.L126:
 1217              		.align	2
 1218              	.L125:
 1219 000c 0010005C 		.word	1543507968
 1220              		.cfi_endproc
 1221              	.LFE176:
 1223              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 38


 1224              		.align	2
 1225              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1226              		.thumb
 1227              		.thumb_func
 1229              	HAL_DBGMCU_DisableDBGSleepMode:
 1230              	.LFB177:
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain SLEEP mode
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGSleepMode(void)
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1231              		.loc 1 927 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1236              		.loc 1 928 0
 1237 0000 024A     		ldr	r2, .L128
 1238 0002 5368     		ldr	r3, [r2, #4]
 1239 0004 23F00103 		bic	r3, r3, #1
 1240 0008 5360     		str	r3, [r2, #4]
 1241 000a 7047     		bx	lr
 1242              	.L129:
 1243              		.align	2
 1244              	.L128:
 1245 000c 0010005C 		.word	1543507968
 1246              		.cfi_endproc
 1247              	.LFE177:
 1249              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1250              		.align	2
 1251              		.global	HAL_DBGMCU_EnableDBGStopMode
 1252              		.thumb
 1253              		.thumb_func
 1255              	HAL_DBGMCU_EnableDBGStopMode:
 1256              	.LFB178:
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STOP mode
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStopMode(void)
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1257              		.loc 1 937 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1262              		.loc 1 938 0
 1263 0000 024A     		ldr	r2, .L131
 1264 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 39


 1265 0004 43F00203 		orr	r3, r3, #2
 1266 0008 5360     		str	r3, [r2, #4]
 1267 000a 7047     		bx	lr
 1268              	.L132:
 1269              		.align	2
 1270              	.L131:
 1271 000c 0010005C 		.word	1543507968
 1272              		.cfi_endproc
 1273              	.LFE178:
 1275              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1276              		.align	2
 1277              		.global	HAL_DBGMCU_DisableDBGStopMode
 1278              		.thumb
 1279              		.thumb_func
 1281              	HAL_DBGMCU_DisableDBGStopMode:
 1282              	.LFB179:
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STOP mode
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStopMode(void)
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1283              		.loc 1 946 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1288              		.loc 1 947 0
 1289 0000 024A     		ldr	r2, .L134
 1290 0002 5368     		ldr	r3, [r2, #4]
 1291 0004 23F00203 		bic	r3, r3, #2
 1292 0008 5360     		str	r3, [r2, #4]
 1293 000a 7047     		bx	lr
 1294              	.L135:
 1295              		.align	2
 1296              	.L134:
 1297 000c 0010005C 		.word	1543507968
 1298              		.cfi_endproc
 1299              	.LFE179:
 1301              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1302              		.align	2
 1303              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1304              		.thumb
 1305              		.thumb_func
 1307              	HAL_DBGMCU_EnableDBGStandbyMode:
 1308              	.LFB180:
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STANDBY mode
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDBGStandbyMode(void)
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 40


 1309              		.loc 1 955 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1314              		.loc 1 956 0
 1315 0000 024A     		ldr	r2, .L137
 1316 0002 5368     		ldr	r3, [r2, #4]
 1317 0004 43F00403 		orr	r3, r3, #4
 1318 0008 5360     		str	r3, [r2, #4]
 1319 000a 7047     		bx	lr
 1320              	.L138:
 1321              		.align	2
 1322              	.L137:
 1323 000c 0010005C 		.word	1543507968
 1324              		.cfi_endproc
 1325              	.LFE180:
 1327              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1328              		.align	2
 1329              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1330              		.thumb
 1331              		.thumb_func
 1333              	HAL_DBGMCU_DisableDBGStandbyMode:
 1334              	.LFB181:
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STANDBY mode
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDBGStandbyMode(void)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1335              		.loc 1 964 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              		@ link register save eliminated.
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1340              		.loc 1 965 0
 1341 0000 024A     		ldr	r2, .L140
 1342 0002 5368     		ldr	r3, [r2, #4]
 1343 0004 23F00403 		bic	r3, r3, #4
 1344 0008 5360     		str	r3, [r2, #4]
 1345 000a 7047     		bx	lr
 1346              	.L141:
 1347              		.align	2
 1348              	.L140:
 1349 000c 0010005C 		.word	1543507968
 1350              		.cfi_endproc
 1351              	.LFE181:
 1353              		.section	.text.HAL_EnableDomain3DBGStopMode,"ax",%progbits
 1354              		.align	2
 1355              		.global	HAL_EnableDomain3DBGStopMode
 1356              		.thumb
 1357              		.thumb_func
 1359              	HAL_EnableDomain3DBGStopMode:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 41


 1360              	.LFB182:
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGSleepMode(void)
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 SLEEP mode
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGSleepMode(void)
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STOP mode
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStopMode(void)
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STOP mode
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStopMode(void)
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STANDBY mode
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStandbyMode(void)
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STANDBY mode
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStandbyMode(void)
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 42


1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STOP mode
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStopMode(void)
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1361              		.loc 1 1029 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365              		@ link register save eliminated.
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1366              		.loc 1 1030 0
 1367 0000 024A     		ldr	r2, .L143
 1368 0002 5368     		ldr	r3, [r2, #4]
 1369 0004 43F08003 		orr	r3, r3, #128
 1370 0008 5360     		str	r3, [r2, #4]
 1371 000a 7047     		bx	lr
 1372              	.L144:
 1373              		.align	2
 1374              	.L143:
 1375 000c 0010005C 		.word	1543507968
 1376              		.cfi_endproc
 1377              	.LFE182:
 1379              		.section	.text.HAL_DisableDomain3DBGStopMode,"ax",%progbits
 1380              		.align	2
 1381              		.global	HAL_DisableDomain3DBGStopMode
 1382              		.thumb
 1383              		.thumb_func
 1385              	HAL_DisableDomain3DBGStopMode:
 1386              	.LFB183:
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STOP mode
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStopMode(void)
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1387              		.loc 1 1037 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              		@ link register save eliminated.
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
 1392              		.loc 1 1038 0
 1393 0000 024A     		ldr	r2, .L146
 1394 0002 5368     		ldr	r3, [r2, #4]
 1395 0004 23F08003 		bic	r3, r3, #128
 1396 0008 5360     		str	r3, [r2, #4]
 1397 000a 7047     		bx	lr
 1398              	.L147:
 1399              		.align	2
 1400              	.L146:
 1401 000c 0010005C 		.word	1543507968
 1402              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 43


 1403              	.LFE183:
 1405              		.section	.text.HAL_EnableDomain3DBGStandbyMode,"ax",%progbits
 1406              		.align	2
 1407              		.global	HAL_EnableDomain3DBGStandbyMode
 1408              		.thumb
 1409              		.thumb_func
 1411              	HAL_EnableDomain3DBGStandbyMode:
 1412              	.LFB184:
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STANDBY mode
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStandbyMode(void)
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1413              		.loc 1 1046 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1418              		.loc 1 1047 0
 1419 0000 024A     		ldr	r2, .L149
 1420 0002 5368     		ldr	r3, [r2, #4]
 1421 0004 43F48073 		orr	r3, r3, #256
 1422 0008 5360     		str	r3, [r2, #4]
 1423 000a 7047     		bx	lr
 1424              	.L150:
 1425              		.align	2
 1426              	.L149:
 1427 000c 0010005C 		.word	1543507968
 1428              		.cfi_endproc
 1429              	.LFE184:
 1431              		.section	.text.HAL_DisableDomain3DBGStandbyMode,"ax",%progbits
 1432              		.align	2
 1433              		.global	HAL_DisableDomain3DBGStandbyMode
 1434              		.thumb
 1435              		.thumb_func
 1437              	HAL_DisableDomain3DBGStandbyMode:
 1438              	.LFB185:
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STANDBY mode
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStandbyMode(void)
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1439              		.loc 1 1055 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		@ link register save eliminated.
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
 1444              		.loc 1 1056 0
 1445 0000 024A     		ldr	r2, .L152
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 44


 1446 0002 5368     		ldr	r3, [r2, #4]
 1447 0004 23F48073 		bic	r3, r3, #256
 1448 0008 5360     		str	r3, [r2, #4]
 1449 000a 7047     		bx	lr
 1450              	.L153:
 1451              		.align	2
 1452              	.L152:
 1453 000c 0010005C 		.word	1543507968
 1454              		.cfi_endproc
 1455              	.LFE185:
 1457              		.section	.text.HAL_SetFMCMemorySwappingConfig,"ax",%progbits
 1458              		.align	2
 1459              		.global	HAL_SetFMCMemorySwappingConfig
 1460              		.thumb
 1461              		.thumb_func
 1463              	HAL_SetFMCMemorySwappingConfig:
 1464              	.LFB186:
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Set the FMC Memory Mapping Swapping config.
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BankMapConfig: Defines the FMC Bank mapping configuration. This parameter can be
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL state
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SetFMCMemorySwappingConfig(uint32_t BankMapConfig)
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1465              		.loc 1 1066 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
 1470              	.LVL54:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_FMC_SWAPBMAP_MODE(BankMapConfig));
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP, BankMapConfig);
 1471              		.loc 1 1069 0
 1472 0000 034A     		ldr	r2, .L155
 1473 0002 1368     		ldr	r3, [r2]
 1474 0004 23F04073 		bic	r3, r3, #50331648
 1475 0008 1843     		orrs	r0, r0, r3
 1476              	.LVL55:
 1477 000a 1060     		str	r0, [r2]
 1478 000c 7047     		bx	lr
 1479              	.L156:
 1480 000e 00BF     		.align	2
 1481              	.L155:
 1482 0010 00400052 		.word	1375748096
 1483              		.cfi_endproc
 1484              	.LFE186:
 1486              		.section	.text.HAL_GetFMCMemorySwappingConfig,"ax",%progbits
 1487              		.align	2
 1488              		.global	HAL_GetFMCMemorySwappingConfig
 1489              		.thumb
 1490              		.thumb_func
 1492              	HAL_GetFMCMemorySwappingConfig:
 1493              	.LFB187:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 45


1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Get FMC Bank mapping mode.
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval The FMC Bank mapping mode. This parameter can be
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetFMCMemorySwappingConfig(void)
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1494              		.loc 1 1078 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return READ_BIT(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP);
 1499              		.loc 1 1079 0
 1500 0000 024B     		ldr	r3, .L158
 1501 0002 1868     		ldr	r0, [r3]
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1502              		.loc 1 1080 0
 1503 0004 00F04070 		and	r0, r0, #50331648
 1504 0008 7047     		bx	lr
 1505              	.L159:
 1506 000a 00BF     		.align	2
 1507              	.L158:
 1508 000c 00400052 		.word	1375748096
 1509              		.cfi_endproc
 1510              	.LFE187:
 1512              		.section	.text.HAL_EXTI_EdgeConfig,"ax",%progbits
 1513              		.align	2
 1514              		.global	HAL_EXTI_EdgeConfig
 1515              		.thumb
 1516              		.thumb_func
 1518              	HAL_EXTI_EdgeConfig:
 1519              	.LFB188:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line edge
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note    No edge configuration for direct lines but for configurable lines:(EXTI_LINE0..EXTI_LI
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 and EXTI_LINE86.
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Edge: Specifies  EXTI line Edge used.
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_RISING_EDGE : Configurable line, with Rising edge trigger detection
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_FALLING_EDGE: Configurable line, with Falling edge trigger detection
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_EdgeConfig(uint32_t EXTI_Line , uint32_t EXTI_Edge )
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1520              		.loc 1 1095 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
 1525              	.LVL56:
 1526 0000 F0B4     		push	{r4, r5, r6, r7}
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 46


 1527              	.LCFI8:
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 7, -4
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_EDGE_LINE(EXTI_Edge));
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Clear Rising Falling edge configuration */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1533              		.loc 1 1101 0
 1534 0002 4309     		lsrs	r3, r0, #5
 1535 0004 5C01     		lsls	r4, r3, #5
 1536 0006 0F4A     		ldr	r2, .L164
 1537 0008 A658     		ldr	r6, [r4, r2]
 1538 000a 00F01F00 		and	r0, r0, #31
 1539              	.LVL57:
 1540 000e 0125     		movs	r5, #1
 1541 0010 05FA00F0 		lsl	r0, r5, r0
 1542 0014 C743     		mvns	r7, r0
 1543 0016 3E40     		ands	r6, r6, r7
 1544 0018 A650     		str	r6, [r4, r2]
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint
 1545              		.loc 1 1102 0
 1546 001a 03F13073 		add	r3, r3, #46137344
 1547 001e 5B01     		lsls	r3, r3, #5
 1548 0020 1D68     		ldr	r5, [r3]
 1549 0022 3D40     		ands	r5, r5, r7
 1550 0024 1D60     		str	r5, [r3]
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_RISING_EDGE) == EXTI_RISING_EDGE)
 1551              		.loc 1 1104 0
 1552 0026 11F4801F 		tst	r1, #1048576
 1553 002a 02D0     		beq	.L161
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1554              		.loc 1 1106 0
 1555 002c 1D68     		ldr	r5, [r3]
 1556 002e 0543     		orrs	r5, r5, r0
 1557 0030 1D60     		str	r5, [r3]
 1558              	.L161:
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_FALLING_EDGE) == EXTI_FALLING_EDGE)
 1559              		.loc 1 1108 0
 1560 0032 11F4001F 		tst	r1, #2097152
 1561 0036 02D0     		beq	.L160
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1562              		.loc 1 1110 0
 1563 0038 A358     		ldr	r3, [r4, r2]
 1564 003a 1843     		orrs	r0, r0, r3
 1565 003c A050     		str	r0, [r4, r2]
 1566              	.L160:
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 47


 1567              		.loc 1 1112 0
 1568 003e F0BC     		pop	{r4, r5, r6, r7}
 1569              	.LCFI9:
 1570              		.cfi_restore 7
 1571              		.cfi_restore 6
 1572              		.cfi_restore 5
 1573              		.cfi_restore 4
 1574              		.cfi_def_cfa_offset 0
 1575 0040 7047     		bx	lr
 1576              	.L165:
 1577 0042 00BF     		.align	2
 1578              	.L164:
 1579 0044 04000058 		.word	1476395012
 1580              		.cfi_endproc
 1581              	.LFE188:
 1583              		.section	.text.HAL_EXTI_GenerateSWInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	HAL_EXTI_GenerateSWInterrupt
 1586              		.thumb
 1587              		.thumb_func
 1589              	HAL_EXTI_GenerateSWInterrupt:
 1590              	.LFB189:
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          (EXTI_LINE0..EXTI_LINE21),EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1591              		.loc 1 1121 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              		@ link register save eliminated.
 1596              	.LVL58:
 1597 0000 10B4     		push	{r4}
 1598              	.LCFI10:
 1599              		.cfi_def_cfa_offset 4
 1600              		.cfi_offset 4, -4
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->SWIER1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1601              		.loc 1 1125 0
 1602 0002 20F01F01 		bic	r1, r0, #31
 1603 0006 064A     		ldr	r2, .L168
 1604 0008 8C58     		ldr	r4, [r1, r2]
 1605 000a 00F01F00 		and	r0, r0, #31
 1606              	.LVL59:
 1607 000e 0123     		movs	r3, #1
 1608 0010 03FA00F0 		lsl	r0, r3, r0
 1609 0014 2043     		orrs	r0, r0, r4
 1610 0016 8850     		str	r0, [r1, r2]
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1611              		.loc 1 1126 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 48


 1612 0018 5DF8044B 		ldr	r4, [sp], #4
 1613              	.LCFI11:
 1614              		.cfi_restore 4
 1615              		.cfi_def_cfa_offset 0
 1616 001c 7047     		bx	lr
 1617              	.L169:
 1618 001e 00BF     		.align	2
 1619              	.L168:
 1620 0020 08000058 		.word	1476395016
 1621              		.cfi_endproc
 1622              	.LFE189:
 1624              		.section	.text.HAL_EXTI_D1_ClearFlag,"ax",%progbits
 1625              		.align	2
 1626              		.global	HAL_EXTI_D1_ClearFlag
 1627              		.thumb
 1628              		.thumb_func
 1630              	HAL_EXTI_D1_ClearFlag:
 1631              	.LFB190:
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D1
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_ClearFlag(uint32_t EXTI_Line)
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1632              		.loc 1 1136 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 0
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636              		@ link register save eliminated.
 1637              	.LVL60:
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
 1638              		.loc 1 1139 0
 1639 0000 4309     		lsrs	r3, r0, #5
 1640 0002 1B01     		lsls	r3, r3, #4
 1641 0004 00F01F00 		and	r0, r0, #31
 1642              	.LVL61:
 1643 0008 0122     		movs	r2, #1
 1644 000a 02FA00F0 		lsl	r0, r2, r0
 1645 000e 014A     		ldr	r2, .L171
 1646 0010 9850     		str	r0, [r3, r2]
 1647 0012 7047     		bx	lr
 1648              	.L172:
 1649              		.align	2
 1650              	.L171:
 1651 0014 88000058 		.word	1476395144
 1652              		.cfi_endproc
 1653              	.LFE190:
 1655              		.section	.text.HAL_EXTI_D1_EventInputConfig,"ax",%progbits
 1656              		.align	2
 1657              		.global	HAL_EXTI_D1_EventInputConfig
 1658              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 49


 1659              		.thumb_func
 1661              	HAL_EXTI_D1_EventInputConfig:
 1662              	.LFB191:
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D2
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_ClearFlag(uint32_t EXTI_Line)
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D1
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1663              		.loc 1 1171 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
 1668              	.LVL62:
 1669 0000 70B4     		push	{r4, r5, r6}
 1670              	.LCFI12:
 1671              		.cfi_def_cfa_offset 12
 1672              		.cfi_offset 4, -12
 1673              		.cfi_offset 5, -8
 1674              		.cfi_offset 6, -4
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
 1675              		.loc 1 1176 0
 1676 0002 11F4803F 		tst	r1, #65536
 1677 0006 19D0     		beq	.L174
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      if( EXTI_LineCmd == 0UL)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 50


 1678              		.loc 1 1178 0
 1679 0008 62B9     		cbnz	r2, .L175
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        /* Clear EXTI line configuration */
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1680              		.loc 1 1181 0
 1681 000a 1B4B     		ldr	r3, .L179
 1682 000c 03EB5013 		add	r3, r3, r0, lsr #5
 1683 0010 1B01     		lsls	r3, r3, #4
 1684 0012 1D68     		ldr	r5, [r3]
 1685 0014 00F01F06 		and	r6, r0, #31
 1686 0018 0124     		movs	r4, #1
 1687 001a B440     		lsls	r4, r4, r6
 1688 001c 25EA0404 		bic	r4, r5, r4
 1689 0020 1C60     		str	r4, [r3]
 1690 0022 0BE0     		b	.L174
 1691              	.L175:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      else
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
 1692              		.loc 1 1185 0
 1693 0024 144B     		ldr	r3, .L179
 1694 0026 03EB5013 		add	r3, r3, r0, lsr #5
 1695 002a 1B01     		lsls	r3, r3, #4
 1696 002c 1E68     		ldr	r6, [r3]
 1697 002e 00F01F04 		and	r4, r0, #31
 1698 0032 0125     		movs	r5, #1
 1699 0034 05FA04F4 		lsl	r4, r5, r4
 1700 0038 3443     		orrs	r4, r4, r6
 1701 003a 1C60     		str	r4, [r3]
 1702              	.L174:
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
 1703              		.loc 1 1189 0
 1704 003c 11F4003F 		tst	r1, #131072
 1705 0040 18D0     		beq	.L173
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
 1706              		.loc 1 1191 0
 1707 0042 62B9     		cbnz	r2, .L177
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1708              		.loc 1 1194 0
 1709 0044 4309     		lsrs	r3, r0, #5
 1710 0046 1B01     		lsls	r3, r3, #4
 1711 0048 0C4C     		ldr	r4, .L179+4
 1712 004a 1A59     		ldr	r2, [r3, r4]
 1713              	.LVL63:
 1714 004c 00F01F00 		and	r0, r0, #31
 1715              	.LVL64:
 1716 0050 0121     		movs	r1, #1
 1717              	.LVL65:
 1718 0052 01FA00F0 		lsl	r0, r1, r0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 51


 1719 0056 22EA0000 		bic	r0, r2, r0
 1720 005a 1851     		str	r0, [r3, r4]
 1721 005c 0AE0     		b	.L173
 1722              	.LVL66:
 1723              	.L177:
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
 1724              		.loc 1 1198 0
 1725 005e 4209     		lsrs	r2, r0, #5
 1726              	.LVL67:
 1727 0060 1201     		lsls	r2, r2, #4
 1728 0062 0649     		ldr	r1, .L179+4
 1729              	.LVL68:
 1730 0064 5458     		ldr	r4, [r2, r1]
 1731 0066 00F01F00 		and	r0, r0, #31
 1732              	.LVL69:
 1733 006a 0123     		movs	r3, #1
 1734 006c 03FA00F0 		lsl	r0, r3, r0
 1735 0070 2043     		orrs	r0, r0, r4
 1736 0072 5050     		str	r0, [r2, r1]
 1737              	.L173:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1738              		.loc 1 1201 0
 1739 0074 70BC     		pop	{r4, r5, r6}
 1740              	.LCFI13:
 1741              		.cfi_restore 6
 1742              		.cfi_restore 5
 1743              		.cfi_restore 4
 1744              		.cfi_def_cfa_offset 0
 1745 0076 7047     		bx	lr
 1746              	.L180:
 1747              		.align	2
 1748              	.L179:
 1749 0078 08008005 		.word	92274696
 1750 007c 84000058 		.word	1476395140
 1751              		.cfi_endproc
 1752              	.LFE191:
 1754              		.section	.text.HAL_EXTI_D3_EventInputConfig,"ax",%progbits
 1755              		.align	2
 1756              		.global	HAL_EXTI_D3_EventInputConfig
 1757              		.thumb
 1758              		.thumb_func
 1760              	HAL_EXTI_D3_EventInputConfig:
 1761              	.LFB192:
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D2
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 52


1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)),(u
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (ui
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D3
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0...EXTI_LINE15),(EXTI_LINE19...EXTI_LINE21),EXTI_LINE25, EXTI_LINE34,
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE35,EXTI_LINE41,(EXTI_LINE48...EXTI_LINE53)
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_ClearSrc: Specifies the clear source of D3 pending event.
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH6_CLEAR : BDMA ch6 event selected as D3 domain pendclear source
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH7_CLEAR : BDMA ch7 event selected as D3 domain pendclear source
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM4_OUT_CLEAR : LPTIM4 out selected as D3 domain pendclear source
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM5_OUT_CLEAR : LPTIM5 out selected as D3 domain pendclear source
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D3_EventInputConfig(uint32_t EXTI_Line, uint32_t EXTI_LineCmd , uint32_t EXTI_ClearSr
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1762              		.loc 1 1265 0
 1763              		.cfi_startproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 53


 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              		@ link register save eliminated.
 1767              	.LVL70:
 1768 0000 70B4     		push	{r4, r5, r6}
 1769              	.LCFI14:
 1770              		.cfi_def_cfa_offset 12
 1771              		.cfi_offset 4, -12
 1772              		.cfi_offset 5, -8
 1773              		.cfi_offset 6, -4
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __IO uint32_t *pRegv;
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_LINE(EXTI_Line));
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_CLEAR(EXTI_ClearSrc));
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( EXTI_LineCmd == 0UL)
 1774              		.loc 1 1272 0
 1775 0002 59B9     		cbnz	r1, .L182
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) + ((EXTI_Line >> 5 ) * 0x20UL)),(uin
 1776              		.loc 1 1275 0
 1777 0004 20F01F03 		bic	r3, r0, #31
 1778 0008 174D     		ldr	r5, .L187
 1779 000a 5C59     		ldr	r4, [r3, r5]
 1780 000c 00F01F06 		and	r6, r0, #31
 1781 0010 0121     		movs	r1, #1
 1782              	.LVL71:
 1783 0012 B140     		lsls	r1, r1, r6
 1784 0014 24EA0101 		bic	r1, r4, r1
 1785 0018 5951     		str	r1, [r3, r5]
 1786 001a 0AE0     		b	.L183
 1787              	.LVL72:
 1788              	.L182:
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) +((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1789              		.loc 1 1279 0
 1790 001c 20F01F04 		bic	r4, r0, #31
 1791 0020 114D     		ldr	r5, .L187
 1792 0022 6659     		ldr	r6, [r4, r5]
 1793 0024 00F01F03 		and	r3, r0, #31
 1794 0028 0121     		movs	r1, #1
 1795              	.LVL73:
 1796 002a 01FA03F3 		lsl	r3, r1, r3
 1797 002e 3343     		orrs	r3, r3, r6
 1798 0030 6351     		str	r3, [r4, r5]
 1799              	.L183:
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(((EXTI_Line>>4)%2UL) == 0UL)
 1800              		.loc 1 1282 0
 1801 0032 10F0100F 		tst	r0, #16
 1802 0036 04D1     		bne	.L184
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 54


1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1L)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1803              		.loc 1 1284 0
 1804 0038 20F01F01 		bic	r1, r0, #31
 1805 003c 0B4B     		ldr	r3, .L187+4
 1806 003e 0B44     		add	r3, r3, r1
 1807              	.LVL74:
 1808 0040 03E0     		b	.L185
 1809              	.LVL75:
 1810              	.L184:
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1H)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1811              		.loc 1 1288 0
 1812 0042 20F01F01 		bic	r1, r0, #31
 1813 0046 0A4B     		ldr	r3, .L187+8
 1814 0048 0B44     		add	r3, r3, r1
 1815              	.LVL76:
 1816              	.L185:
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(*pRegv, (uint32_t)(3UL << ((EXTI_Line*2UL) & 0x1FUL)), (uint32_t)(EXTI_ClearSrc << ((E
 1817              		.loc 1 1290 0
 1818 004a 1C68     		ldr	r4, [r3]
 1819 004c 4000     		lsls	r0, r0, #1
 1820              	.LVL77:
 1821 004e 00F01E00 		and	r0, r0, #30
 1822 0052 0321     		movs	r1, #3
 1823 0054 8140     		lsls	r1, r1, r0
 1824 0056 24EA0101 		bic	r1, r4, r1
 1825 005a 02FA00F0 		lsl	r0, r2, r0
 1826 005e 0843     		orrs	r0, r0, r1
 1827 0060 1860     		str	r0, [r3]
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1828              		.loc 1 1292 0
 1829 0062 70BC     		pop	{r4, r5, r6}
 1830              	.LCFI15:
 1831              		.cfi_restore 6
 1832              		.cfi_restore 5
 1833              		.cfi_restore 4
 1834              		.cfi_def_cfa_offset 0
 1835 0064 7047     		bx	lr
 1836              	.L188:
 1837 0066 00BF     		.align	2
 1838              	.L187:
 1839 0068 0C000058 		.word	1476395020
 1840 006c 10000058 		.word	1476395024
 1841 0070 14000058 		.word	1476395028
 1842              		.cfi_endproc
 1843              	.LFE192:
 1845              		.global	uwTickFreq
 1846              		.global	uwTickPrio
 1847              		.comm	uwTick,4,4
 1848              		.section	.data.uwTickPrio,"aw",%progbits
 1849              		.align	2
 1850              		.set	.LANCHOR1,. + 0
 1853              	uwTickPrio:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 55


 1854 0000 10000000 		.word	16
 1855              		.section	.data.uwTickFreq,"aw",%progbits
 1856              		.set	.LANCHOR0,. + 0
 1859              	uwTickFreq:
 1860 0000 01       		.byte	1
 1861              		.text
 1862              	.Letext0:
 1863              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 1864              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 1865              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1866              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 1867              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1868              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1869              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1870              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1871              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal.c
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:21     .text.HAL_MspInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:26     .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:39     .text.HAL_MspDeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:44     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:56     .text.HAL_DeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:61     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:129    .text.HAL_DeInit:00000068 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:140    .text.HAL_InitTick:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:145    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:218    .text.HAL_InitTick:00000044 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:225    .text.HAL_Init:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:230    .text.HAL_Init:00000000 HAL_Init
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:289    .text.HAL_Init:0000004c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:297    .text.HAL_IncTick:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:302    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:320    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:326    .text.HAL_GetTick:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:331    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:346    .text.HAL_GetTick:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:351    .text.HAL_GetTickPrio:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:356    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:370    .text.HAL_GetTickPrio:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:375    .text.HAL_SetTickFreq:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:380    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:426    .text.HAL_SetTickFreq:00000024 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:432    .text.HAL_GetTickFreq:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:437    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:451    .text.HAL_GetTickFreq:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:456    .text.HAL_Delay:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:461    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:502    .text.HAL_Delay:00000024 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:507    .text.HAL_SuspendTick:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:512    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:528    .text.HAL_SuspendTick:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:533    .text.HAL_ResumeTick:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:538    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:554    .text.HAL_ResumeTick:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:559    .text.HAL_GetHalVersion:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:564    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:577    .text.HAL_GetHalVersion:00000004 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:582    .text.HAL_GetREVID:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:587    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:603    .text.HAL_GetREVID:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:608    .text.HAL_GetDEVID:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:613    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:629    .text.HAL_GetDEVID:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:634    .text.HAL_GetUIDw0:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:639    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:653    .text.HAL_GetUIDw0:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:658    .text.HAL_GetUIDw1:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:663    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:677    .text.HAL_GetUIDw1:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:682    .text.HAL_GetUIDw2:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:687    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 57


C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:701    .text.HAL_GetUIDw2:00000008 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:706    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:711    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:730    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:735    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:740    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:759    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:764    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:769    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:788    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:793    .text.HAL_SYSCFG_EnableVREFBUF:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:798    .text.HAL_SYSCFG_EnableVREFBUF:00000000 HAL_SYSCFG_EnableVREFBUF
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:848    .text.HAL_SYSCFG_EnableVREFBUF:00000030 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:853    .text.HAL_SYSCFG_DisableVREFBUF:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:858    .text.HAL_SYSCFG_DisableVREFBUF:00000000 HAL_SYSCFG_DisableVREFBUF
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:874    .text.HAL_SYSCFG_DisableVREFBUF:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:879    .text.HAL_SYSCFG_ETHInterfaceSelect:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:884    .text.HAL_SYSCFG_ETHInterfaceSelect:00000000 HAL_SYSCFG_ETHInterfaceSelect
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:903    .text.HAL_SYSCFG_ETHInterfaceSelect:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:908    .text.HAL_SYSCFG_AnalogSwitchConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:913    .text.HAL_SYSCFG_AnalogSwitchConfig:00000000 HAL_SYSCFG_AnalogSwitchConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:933    .text.HAL_SYSCFG_AnalogSwitchConfig:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:938    .text.HAL_SYSCFG_EnableBOOST:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:943    .text.HAL_SYSCFG_EnableBOOST:00000000 HAL_SYSCFG_EnableBOOST
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:959    .text.HAL_SYSCFG_EnableBOOST:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:964    .text.HAL_SYSCFG_DisableBOOST:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:969    .text.HAL_SYSCFG_DisableBOOST:00000000 HAL_SYSCFG_DisableBOOST
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:985    .text.HAL_SYSCFG_DisableBOOST:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:990    .text.HAL_SYSCFG_CM7BootAddConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:995    .text.HAL_SYSCFG_CM7BootAddConfig:00000000 HAL_SYSCFG_CM7BootAddConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1029   .text.HAL_SYSCFG_CM7BootAddConfig:0000002c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1035   .text.HAL_EnableCompensationCell:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1040   .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1056   .text.HAL_EnableCompensationCell:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1061   .text.HAL_DisableCompensationCell:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1066   .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1082   .text.HAL_DisableCompensationCell:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1087   .text.HAL_SYSCFG_EnableIOSpeedOptimize:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1092   .text.HAL_SYSCFG_EnableIOSpeedOptimize:00000000 HAL_SYSCFG_EnableIOSpeedOptimize
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1108   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1113   .text.HAL_SYSCFG_DisableIOSpeedOptimize:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1118   .text.HAL_SYSCFG_DisableIOSpeedOptimize:00000000 HAL_SYSCFG_DisableIOSpeedOptimize
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1134   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1139   .text.HAL_SYSCFG_CompensationCodeSelect:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1144   .text.HAL_SYSCFG_CompensationCodeSelect:00000000 HAL_SYSCFG_CompensationCodeSelect
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1163   .text.HAL_SYSCFG_CompensationCodeSelect:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1168   .text.HAL_SYSCFG_CompensationCodeConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1173   .text.HAL_SYSCFG_CompensationCodeConfig:00000000 HAL_SYSCFG_CompensationCodeConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1193   .text.HAL_SYSCFG_CompensationCodeConfig:00000014 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1198   .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1203   .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1219   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1224   .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1229   .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1245   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1250   .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1255   .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s 			page 58


C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1271   .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1276   .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1281   .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1297   .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1302   .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1307   .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1323   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1328   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1333   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1349   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1354   .text.HAL_EnableDomain3DBGStopMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1359   .text.HAL_EnableDomain3DBGStopMode:00000000 HAL_EnableDomain3DBGStopMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1375   .text.HAL_EnableDomain3DBGStopMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1380   .text.HAL_DisableDomain3DBGStopMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1385   .text.HAL_DisableDomain3DBGStopMode:00000000 HAL_DisableDomain3DBGStopMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1401   .text.HAL_DisableDomain3DBGStopMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1406   .text.HAL_EnableDomain3DBGStandbyMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1411   .text.HAL_EnableDomain3DBGStandbyMode:00000000 HAL_EnableDomain3DBGStandbyMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1427   .text.HAL_EnableDomain3DBGStandbyMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1432   .text.HAL_DisableDomain3DBGStandbyMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1437   .text.HAL_DisableDomain3DBGStandbyMode:00000000 HAL_DisableDomain3DBGStandbyMode
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1453   .text.HAL_DisableDomain3DBGStandbyMode:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1458   .text.HAL_SetFMCMemorySwappingConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1463   .text.HAL_SetFMCMemorySwappingConfig:00000000 HAL_SetFMCMemorySwappingConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1482   .text.HAL_SetFMCMemorySwappingConfig:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1487   .text.HAL_GetFMCMemorySwappingConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1492   .text.HAL_GetFMCMemorySwappingConfig:00000000 HAL_GetFMCMemorySwappingConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1508   .text.HAL_GetFMCMemorySwappingConfig:0000000c $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1513   .text.HAL_EXTI_EdgeConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1518   .text.HAL_EXTI_EdgeConfig:00000000 HAL_EXTI_EdgeConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1579   .text.HAL_EXTI_EdgeConfig:00000044 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1584   .text.HAL_EXTI_GenerateSWInterrupt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1589   .text.HAL_EXTI_GenerateSWInterrupt:00000000 HAL_EXTI_GenerateSWInterrupt
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1620   .text.HAL_EXTI_GenerateSWInterrupt:00000020 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1625   .text.HAL_EXTI_D1_ClearFlag:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1630   .text.HAL_EXTI_D1_ClearFlag:00000000 HAL_EXTI_D1_ClearFlag
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1651   .text.HAL_EXTI_D1_ClearFlag:00000014 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1656   .text.HAL_EXTI_D1_EventInputConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1661   .text.HAL_EXTI_D1_EventInputConfig:00000000 HAL_EXTI_D1_EventInputConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1749   .text.HAL_EXTI_D1_EventInputConfig:00000078 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1755   .text.HAL_EXTI_D3_EventInputConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1760   .text.HAL_EXTI_D3_EventInputConfig:00000000 HAL_EXTI_D3_EventInputConfig
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1839   .text.HAL_EXTI_D3_EventInputConfig:00000068 $d
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1859   .data.uwTickFreq:00000000 uwTickFreq
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1853   .data.uwTickPrio:00000000 uwTickPrio
C:\Users\xiaofei\AppData\Local\Temp\ccA0r4Bx.s:1849   .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
D1CorePrescTable
SystemD2Clock
