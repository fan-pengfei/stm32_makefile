ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"system_stm32h7xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	2
  22              		.global	SystemInit
  23              		.thumb
  24              		.thumb_func
  26              	SystemInit:
  27              	.LFB141:
  28              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32h7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32h7xx.c ****   * License. You may obtain a copy of the License at:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 2


  31:Core/Src/system_stm32h7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32h7xx.c ****   *
  33:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32h7xx.c ****   */
  35:Core/Src/system_stm32h7xx.c **** 
  36:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32h7xx.c ****   * @{
  38:Core/Src/system_stm32h7xx.c ****   */
  39:Core/Src/system_stm32h7xx.c **** 
  40:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  41:Core/Src/system_stm32h7xx.c ****   * @{
  42:Core/Src/system_stm32h7xx.c ****   */
  43:Core/Src/system_stm32h7xx.c **** 
  44:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  45:Core/Src/system_stm32h7xx.c ****   * @{
  46:Core/Src/system_stm32h7xx.c ****   */
  47:Core/Src/system_stm32h7xx.c **** 
  48:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  49:Core/Src/system_stm32h7xx.c **** #include <math.h>
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  84:Core/Src/system_stm32h7xx.c ****      Internal SRAM. */
  85:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  86:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET  0x00000000UL /*!< Vector Table base offset field.
  87:Core/Src/system_stm32h7xx.c ****                                       This value must be a multiple of 0x200. */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 3


  88:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** /**
  91:Core/Src/system_stm32h7xx.c ****   * @}
  92:Core/Src/system_stm32h7xx.c ****   */
  93:Core/Src/system_stm32h7xx.c **** 
  94:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
  95:Core/Src/system_stm32h7xx.c ****   * @{
  96:Core/Src/system_stm32h7xx.c ****   */
  97:Core/Src/system_stm32h7xx.c **** 
  98:Core/Src/system_stm32h7xx.c **** /**
  99:Core/Src/system_stm32h7xx.c ****   * @}
 100:Core/Src/system_stm32h7xx.c ****   */
 101:Core/Src/system_stm32h7xx.c **** 
 102:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 103:Core/Src/system_stm32h7xx.c ****   * @{
 104:Core/Src/system_stm32h7xx.c ****   */
 105:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 106:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 107:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 108:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 109:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 110:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 111:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 112:Core/Src/system_stm32h7xx.c ****   */
 113:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 114:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 115:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 116:Core/Src/system_stm32h7xx.c **** 
 117:Core/Src/system_stm32h7xx.c **** /**
 118:Core/Src/system_stm32h7xx.c ****   * @}
 119:Core/Src/system_stm32h7xx.c ****   */
 120:Core/Src/system_stm32h7xx.c **** 
 121:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 122:Core/Src/system_stm32h7xx.c ****   * @{
 123:Core/Src/system_stm32h7xx.c ****   */
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 135:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 136:Core/Src/system_stm32h7xx.c ****   *         configuration.
 137:Core/Src/system_stm32h7xx.c ****   * @param  None
 138:Core/Src/system_stm32h7xx.c ****   * @retval None
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 141:Core/Src/system_stm32h7xx.c **** {
  29              		.loc 1 141 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 4


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 142:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 143:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 144:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 145:Core/Src/system_stm32h7xx.c **** 
 146:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 147:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 148:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 148 0
  35 0000 294A     		ldr	r2, .L5
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 149:Core/Src/system_stm32h7xx.c ****   #endif
 150:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 153:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 153 0
  40 000e 274B     		ldr	r3, .L5+4
  41 0010 1B68     		ldr	r3, [r3]
  42 0012 03F00F03 		and	r3, r3, #15
  43 0016 062B     		cmp	r3, #6
  44 0018 06D8     		bhi	.L2
 154:Core/Src/system_stm32h7xx.c ****   {
 155:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 156:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  45              		.loc 1 156 0
  46 001a 244A     		ldr	r2, .L5+4
  47 001c 1368     		ldr	r3, [r2]
  48 001e 23F00F03 		bic	r3, r3, #15
  49 0022 43F00703 		orr	r3, r3, #7
  50 0026 1360     		str	r3, [r2]
  51              	.L2:
 157:Core/Src/system_stm32h7xx.c ****   }
 158:Core/Src/system_stm32h7xx.c **** 
 159:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 160:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  52              		.loc 1 160 0
  53 0028 214B     		ldr	r3, .L5+8
  54 002a 1A68     		ldr	r2, [r3]
  55 002c 42F00102 		orr	r2, r2, #1
  56 0030 1A60     		str	r2, [r3]
 161:Core/Src/system_stm32h7xx.c **** 
 162:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 163:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  57              		.loc 1 163 0
  58 0032 0022     		movs	r2, #0
  59 0034 1A61     		str	r2, [r3, #16]
 164:Core/Src/system_stm32h7xx.c **** 
 165:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 166:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  60              		.loc 1 166 0
  61 0036 1968     		ldr	r1, [r3]
  62 0038 1E4A     		ldr	r2, .L5+12
  63 003a 0A40     		ands	r2, r2, r1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 5


  64 003c 1A60     		str	r2, [r3]
 167:Core/Src/system_stm32h7xx.c ****   
 168:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 169:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  65              		.loc 1 169 0
  66 003e 1B4B     		ldr	r3, .L5+4
  67 0040 1B68     		ldr	r3, [r3]
  68 0042 03F00F03 		and	r3, r3, #15
  69 0046 072B     		cmp	r3, #7
  70 0048 06D9     		bls	.L3
 170:Core/Src/system_stm32h7xx.c ****   {
 171:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 172:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  71              		.loc 1 172 0
  72 004a 184A     		ldr	r2, .L5+4
  73 004c 1368     		ldr	r3, [r2]
  74 004e 23F00F03 		bic	r3, r3, #15
  75 0052 43F00703 		orr	r3, r3, #7
  76 0056 1360     		str	r3, [r2]
  77              	.L3:
 173:Core/Src/system_stm32h7xx.c ****   }
 174:Core/Src/system_stm32h7xx.c **** 
 175:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 176:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 177:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  78              		.loc 1 177 0
  79 0058 154B     		ldr	r3, .L5+8
  80 005a 0022     		movs	r2, #0
  81 005c 9A61     		str	r2, [r3, #24]
 178:Core/Src/system_stm32h7xx.c **** 
 179:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 180:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  82              		.loc 1 180 0
  83 005e DA61     		str	r2, [r3, #28]
 181:Core/Src/system_stm32h7xx.c **** 
 182:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 183:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  84              		.loc 1 183 0
  85 0060 1A62     		str	r2, [r3, #32]
 184:Core/Src/system_stm32h7xx.c **** #else
 185:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 186:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 187:Core/Src/system_stm32h7xx.c **** 
 188:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 189:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 190:Core/Src/system_stm32h7xx.c **** 
 191:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 192:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 193:Core/Src/system_stm32h7xx.c **** #endif
 194:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 195:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  86              		.loc 1 195 0
  87 0062 1549     		ldr	r1, .L5+16
  88 0064 9962     		str	r1, [r3, #40]
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 6


  89              		.loc 1 198 0
  90 0066 1549     		ldr	r1, .L5+20
  91 0068 D962     		str	r1, [r3, #44]
 199:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 200:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
  92              		.loc 1 200 0
  93 006a 1549     		ldr	r1, .L5+24
  94 006c 1963     		str	r1, [r3, #48]
 201:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 202:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
  95              		.loc 1 202 0
  96 006e 5A63     		str	r2, [r3, #52]
 203:Core/Src/system_stm32h7xx.c **** 
 204:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 205:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
  97              		.loc 1 205 0
  98 0070 9963     		str	r1, [r3, #56]
 206:Core/Src/system_stm32h7xx.c **** 
 207:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 208:Core/Src/system_stm32h7xx.c **** 
 209:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
  99              		.loc 1 209 0
 100 0072 DA63     		str	r2, [r3, #60]
 210:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 211:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 101              		.loc 1 211 0
 102 0074 1964     		str	r1, [r3, #64]
 212:Core/Src/system_stm32h7xx.c **** 
 213:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 214:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 103              		.loc 1 214 0
 104 0076 5A64     		str	r2, [r3, #68]
 215:Core/Src/system_stm32h7xx.c **** 
 216:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 217:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 105              		.loc 1 217 0
 106 0078 1968     		ldr	r1, [r3]
 107 007a 21F48021 		bic	r1, r1, #262144
 108 007e 1960     		str	r1, [r3]
 218:Core/Src/system_stm32h7xx.c **** 
 219:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 220:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 109              		.loc 1 220 0
 110 0080 1A66     		str	r2, [r3, #96]
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 223:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 224:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 111              		.loc 1 224 0
 112 0082 104B     		ldr	r3, .L5+28
 113 0084 1A68     		ldr	r2, [r3]
 114 0086 104B     		ldr	r3, .L5+32
 115 0088 1340     		ands	r3, r3, r2
 116 008a B3F1005F 		cmp	r3, #536870912
 117 008e 02D2     		bcs	.L4
 225:Core/Src/system_stm32h7xx.c ****   {
 226:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 7


 227:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 228:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 118              		.loc 1 228 0
 119 0090 0122     		movs	r2, #1
 120 0092 0E4B     		ldr	r3, .L5+36
 121 0094 1A60     		str	r2, [r3]
 122              	.L4:
 229:Core/Src/system_stm32h7xx.c ****   }
 230:Core/Src/system_stm32h7xx.c **** #endif
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 233:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 234:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 235:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 236:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 237:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 238:Core/Src/system_stm32h7xx.c **** #else
 239:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 240:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 243:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 244:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 245:Core/Src/system_stm32h7xx.c **** 
 246:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 247:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 248:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 249:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D2_AXISRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 250:Core/Src/system_stm32h7xx.c **** #else
 251:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 252:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c **** #else
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c ****   /*
 257:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 258:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 259:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 260:Core/Src/system_stm32h7xx.c ****    */
 261:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 123              		.loc 1 261 0
 124 0096 43F2D202 		movw	r2, #12498
 125 009a 0D4B     		ldr	r3, .L5+40
 126 009c 1A60     		str	r2, [r3]
 262:Core/Src/system_stm32h7xx.c **** 
 263:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
 264:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 265:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
 266:Core/Src/system_stm32h7xx.c **** #else
 267:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 127              		.loc 1 267 0
 128 009e 4FF00062 		mov	r2, #134217728
 129 00a2 014B     		ldr	r3, .L5
 130 00a4 9A60     		str	r2, [r3, #8]
 131 00a6 7047     		bx	lr
 132              	.L6:
 133              		.align	2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 8


 134              	.L5:
 135 00a8 00ED00E0 		.word	-536810240
 136 00ac 00200052 		.word	1375739904
 137 00b0 00440258 		.word	1476543488
 138 00b4 7FEDF6EA 		.word	-352916097
 139 00b8 00020202 		.word	33686016
 140 00bc 0000FF01 		.word	33488896
 141 00c0 80020101 		.word	16843392
 142 00c4 0010005C 		.word	1543507968
 143 00c8 0000FFFF 		.word	-65536
 144 00cc 08810051 		.word	1358987528
 145 00d0 00400052 		.word	1375748096
 146              		.cfi_endproc
 147              	.LFE141:
 149              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 150              		.align	2
 151              		.global	SystemCoreClockUpdate
 152              		.thumb
 153              		.thumb_func
 155              	SystemCoreClockUpdate:
 156              	.LFB142:
 268:Core/Src/system_stm32h7xx.c **** #endif
 269:Core/Src/system_stm32h7xx.c **** 
 270:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 271:Core/Src/system_stm32h7xx.c **** 
 272:Core/Src/system_stm32h7xx.c **** }
 273:Core/Src/system_stm32h7xx.c **** 
 274:Core/Src/system_stm32h7xx.c **** /**
 275:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 276:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 277:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 278:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 279:Core/Src/system_stm32h7xx.c ****   *
 280:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 281:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 282:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 283:Core/Src/system_stm32h7xx.c ****   *
 284:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 285:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 286:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 287:Core/Src/system_stm32h7xx.c ****   *
 288:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 289:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 290:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 291:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 292:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 293:Core/Src/system_stm32h7xx.c ****   *
 294:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 295:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 296:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 297:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 298:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 299:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 300:Core/Src/system_stm32h7xx.c ****   *
 301:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 302:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 303:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 9


 304:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 305:Core/Src/system_stm32h7xx.c ****   *
 306:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 307:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 308:Core/Src/system_stm32h7xx.c ****   * @param  None
 309:Core/Src/system_stm32h7xx.c ****   * @retval None
 310:Core/Src/system_stm32h7xx.c ****   */
 311:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 312:Core/Src/system_stm32h7xx.c **** {
 157              		.loc 1 312 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 10B4     		push	{r4}
 163              	.LCFI0:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 4, -4
 313:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 314:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 315:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 316:Core/Src/system_stm32h7xx.c **** 
 317:Core/Src/system_stm32h7xx.c **** 
 318:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:Core/Src/system_stm32h7xx.c **** 
 320:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 166              		.loc 1 320 0
 167 0002 694B     		ldr	r3, .L21
 168 0004 1B69     		ldr	r3, [r3, #16]
 169 0006 03F03803 		and	r3, r3, #56
 170 000a 102B     		cmp	r3, #16
 171 000c 00F0B280 		beq	.L17
 172 0010 182B     		cmp	r3, #24
 173 0012 09D0     		beq	.L10
 174 0014 0BB1     		cbz	r3, .L11
 321:Core/Src/system_stm32h7xx.c ****   {
 322:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 323:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 324:Core/Src/system_stm32h7xx.c ****     break;
 325:Core/Src/system_stm32h7xx.c **** 
 326:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 327:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 175              		.loc 1 327 0
 176 0016 654B     		ldr	r3, .L21+4
 177 0018 AFE0     		b	.L9
 178              	.L11:
 323:Core/Src/system_stm32h7xx.c ****     break;
 179              		.loc 1 323 0
 180 001a 634B     		ldr	r3, .L21
 181 001c 1A68     		ldr	r2, [r3]
 182 001e C2F3C102 		ubfx	r2, r2, #3, #2
 183 0022 634B     		ldr	r3, .L21+8
 184 0024 D340     		lsrs	r3, r3, r2
 185              	.LVL0:
 324:Core/Src/system_stm32h7xx.c **** 
 186              		.loc 1 324 0
 187 0026 A8E0     		b	.L9
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 10


 188              	.LVL1:
 189              	.L10:
 328:Core/Src/system_stm32h7xx.c ****     break;
 329:Core/Src/system_stm32h7xx.c **** 
 330:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 331:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 332:Core/Src/system_stm32h7xx.c ****     break;
 333:Core/Src/system_stm32h7xx.c **** 
 334:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 335:Core/Src/system_stm32h7xx.c **** 
 336:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 337:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 338:Core/Src/system_stm32h7xx.c ****     */
 339:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 190              		.loc 1 339 0
 191 0028 5F49     		ldr	r1, .L21
 192 002a 886A     		ldr	r0, [r1, #40]
 193 002c 00F00300 		and	r0, r0, #3
 194              	.LVL2:
 340:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 195              		.loc 1 340 0
 196 0030 8A6A     		ldr	r2, [r1, #40]
 197 0032 C2F30512 		ubfx	r2, r2, #4, #6
 198              	.LVL3:
 341:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 199              		.loc 1 341 0
 200 0036 CB6A     		ldr	r3, [r1, #44]
 201 0038 03F00104 		and	r4, r3, #1
 202              	.LVL4:
 342:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 203              		.loc 1 342 0
 204 003c 4B6B     		ldr	r3, [r1, #52]
 205 003e C3F3CC03 		ubfx	r3, r3, #3, #13
 206 0042 03FB04F3 		mul	r3, r3, r4
 207 0046 07EE903A 		vmov	s15, r3	@ int
 208 004a F8EE677A 		vcvt.f32.u32	s15, s15
 209              	.LVL5:
 343:Core/Src/system_stm32h7xx.c **** 
 344:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 210              		.loc 1 344 0
 211 004e 002A     		cmp	r2, #0
 212 0050 00F09280 		beq	.L18
 345:Core/Src/system_stm32h7xx.c ****     {
 346:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 213              		.loc 1 346 0
 214 0054 0128     		cmp	r0, #1
 215 0056 27D0     		beq	.L13
 216 0058 10B1     		cbz	r0, .L14
 217 005a 0228     		cmp	r0, #2
 218 005c 41D0     		beq	.L15
 219 005e 5DE0     		b	.L19
 220              	.L14:
 347:Core/Src/system_stm32h7xx.c ****       {
 348:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 349:Core/Src/system_stm32h7xx.c **** 
 350:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 221              		.loc 1 350 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 11


 222 0060 5148     		ldr	r0, .L21
 223              	.LVL6:
 224 0062 0368     		ldr	r3, [r0]
 225 0064 C3F3C101 		ubfx	r1, r3, #3, #2
 226 0068 514B     		ldr	r3, .L21+8
 227 006a CB40     		lsrs	r3, r3, r1
 228              	.LVL7:
 351:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 229              		.loc 1 351 0
 230 006c 07EE103A 		vmov	s14, r3	@ int
 231 0070 F8EE476A 		vcvt.f32.u32	s13, s14
 232 0074 07EE102A 		vmov	s14, r2	@ int
 233 0078 B8EE477A 		vcvt.f32.u32	s14, s14
 234 007c 86EE876A 		vdiv.f32	s12, s13, s14
 235 0080 036B     		ldr	r3, [r0, #48]
 236              	.LVL8:
 237 0082 C3F30803 		ubfx	r3, r3, #0, #9
 238 0086 06EE903A 		vmov	s13, r3	@ int
 239 008a F8EE666A 		vcvt.f32.u32	s13, s13
 240 008e 9FED497A 		vldr.32	s14, .L21+12
 241 0092 67EE877A 		vmul.f32	s15, s15, s14
 242              	.LVL9:
 243 0096 76EEA77A 		vadd.f32	s15, s13, s15
 244 009a F7EE006A 		vmov.f32	s13, #1.0e+0
 245 009e 77EEA66A 		vadd.f32	s13, s15, s13
 246 00a2 66EE266A 		vmul.f32	s13, s12, s13
 247              	.LVL10:
 352:Core/Src/system_stm32h7xx.c **** 
 353:Core/Src/system_stm32h7xx.c ****         break;
 248              		.loc 1 353 0
 249 00a6 55E0     		b	.L16
 250              	.LVL11:
 251              	.L13:
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 356:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 252              		.loc 1 356 0
 253 00a8 07EE102A 		vmov	s14, r2	@ int
 254 00ac B8EE477A 		vcvt.f32.u32	s14, s14
 255 00b0 DFED416A 		vldr.32	s13, .L21+16
 256 00b4 86EE876A 		vdiv.f32	s12, s13, s14
 257 00b8 3B4B     		ldr	r3, .L21
 258 00ba 1B6B     		ldr	r3, [r3, #48]
 259 00bc C3F30803 		ubfx	r3, r3, #0, #9
 260 00c0 06EE903A 		vmov	s13, r3	@ int
 261 00c4 F8EE666A 		vcvt.f32.u32	s13, s13
 262 00c8 9FED3A7A 		vldr.32	s14, .L21+12
 263 00cc 67EE877A 		vmul.f32	s15, s15, s14
 264              	.LVL12:
 265 00d0 76EEA77A 		vadd.f32	s15, s13, s15
 266 00d4 F7EE006A 		vmov.f32	s13, #1.0e+0
 267 00d8 77EEA66A 		vadd.f32	s13, s15, s13
 268 00dc 66EE266A 		vmul.f32	s13, s12, s13
 269              	.LVL13:
 357:Core/Src/system_stm32h7xx.c ****         break;
 270              		.loc 1 357 0
 271 00e0 38E0     		b	.L16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 12


 272              	.LVL14:
 273              	.L15:
 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 360:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 274              		.loc 1 360 0
 275 00e2 07EE102A 		vmov	s14, r2	@ int
 276 00e6 B8EE477A 		vcvt.f32.u32	s14, s14
 277 00ea DFED346A 		vldr.32	s13, .L21+20
 278 00ee 86EE876A 		vdiv.f32	s12, s13, s14
 279 00f2 2D4B     		ldr	r3, .L21
 280 00f4 1B6B     		ldr	r3, [r3, #48]
 281 00f6 C3F30803 		ubfx	r3, r3, #0, #9
 282 00fa 06EE903A 		vmov	s13, r3	@ int
 283 00fe F8EE666A 		vcvt.f32.u32	s13, s13
 284 0102 9FED2C7A 		vldr.32	s14, .L21+12
 285 0106 67EE877A 		vmul.f32	s15, s15, s14
 286              	.LVL15:
 287 010a 76EEA77A 		vadd.f32	s15, s13, s15
 288 010e F7EE006A 		vmov.f32	s13, #1.0e+0
 289 0112 77EEA66A 		vadd.f32	s13, s15, s13
 290 0116 66EE266A 		vmul.f32	s13, s12, s13
 291              	.LVL16:
 361:Core/Src/system_stm32h7xx.c ****         break;
 292              		.loc 1 361 0
 293 011a 1BE0     		b	.L16
 294              	.LVL17:
 295              	.L19:
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****       default:
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 296              		.loc 1 364 0
 297 011c 07EE102A 		vmov	s14, r2	@ int
 298 0120 B8EE477A 		vcvt.f32.u32	s14, s14
 299 0124 DFED246A 		vldr.32	s13, .L21+16
 300 0128 86EE876A 		vdiv.f32	s12, s13, s14
 301 012c 1E4B     		ldr	r3, .L21
 302 012e 1B6B     		ldr	r3, [r3, #48]
 303 0130 C3F30803 		ubfx	r3, r3, #0, #9
 304 0134 06EE903A 		vmov	s13, r3	@ int
 305 0138 F8EE666A 		vcvt.f32.u32	s13, s13
 306 013c 9FED1D7A 		vldr.32	s14, .L21+12
 307 0140 67EE877A 		vmul.f32	s15, s15, s14
 308              	.LVL18:
 309 0144 76EEA77A 		vadd.f32	s15, s13, s15
 310 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 311 014c 77EEA66A 		vadd.f32	s13, s15, s13
 312 0150 66EE266A 		vmul.f32	s13, s12, s13
 313              	.LVL19:
 314              	.L16:
 365:Core/Src/system_stm32h7xx.c ****         break;
 366:Core/Src/system_stm32h7xx.c ****       }
 367:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 315              		.loc 1 367 0
 316 0154 144B     		ldr	r3, .L21
 317 0156 1B6B     		ldr	r3, [r3, #48]
 318 0158 C3F34623 		ubfx	r3, r3, #9, #7
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 13


 319 015c 0133     		adds	r3, r3, #1
 320              	.LVL20:
 368:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 321              		.loc 1 368 0
 322 015e 07EE903A 		vmov	s15, r3	@ int
 323 0162 B8EE677A 		vcvt.f32.u32	s14, s15
 324 0166 C6EE877A 		vdiv.f32	s15, s13, s14
 325 016a FCEEE77A 		vcvt.u32.f32	s15, s15
 326 016e 17EE903A 		vmov	r3, s15	@ int
 327              	.LVL21:
 328 0172 02E0     		b	.L9
 329              	.LVL22:
 330              	.L17:
 331:Core/Src/system_stm32h7xx.c ****     break;
 331              		.loc 1 331 0
 332 0174 124B     		ldr	r3, .L21+24
 333 0176 00E0     		b	.L9
 334              	.LVL23:
 335              	.L18:
 369:Core/Src/system_stm32h7xx.c ****     }
 370:Core/Src/system_stm32h7xx.c ****     else
 371:Core/Src/system_stm32h7xx.c ****     {
 372:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 336              		.loc 1 372 0
 337 0178 0023     		movs	r3, #0
 338              	.LVL24:
 339              	.L9:
 373:Core/Src/system_stm32h7xx.c ****     }
 374:Core/Src/system_stm32h7xx.c ****     break;
 375:Core/Src/system_stm32h7xx.c **** 
 376:Core/Src/system_stm32h7xx.c ****   default:
 377:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 378:Core/Src/system_stm32h7xx.c ****     break;
 379:Core/Src/system_stm32h7xx.c ****   }
 380:Core/Src/system_stm32h7xx.c **** 
 381:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 382:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 383:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 340              		.loc 1 383 0
 341 017a 0B48     		ldr	r0, .L21
 342 017c 8269     		ldr	r2, [r0, #24]
 343 017e C2F30322 		ubfx	r2, r2, #8, #4
 344 0182 1049     		ldr	r1, .L21+28
 345 0184 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 346              	.LVL25:
 384:Core/Src/system_stm32h7xx.c **** 
 385:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 386:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 347              		.loc 1 386 0
 348 0186 23FA02F2 		lsr	r2, r3, r2
 349              	.LVL26:
 387:Core/Src/system_stm32h7xx.c **** 
 388:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 389:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 350              		.loc 1 389 0
 351 018a 8369     		ldr	r3, [r0, #24]
 352 018c 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 14


 353 0190 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 354 0192 03F01F03 		and	r3, r3, #31
 355 0196 22FA03F3 		lsr	r3, r2, r3
 356 019a 0B49     		ldr	r1, .L21+32
 357 019c 0B60     		str	r3, [r1]
 390:Core/Src/system_stm32h7xx.c **** 
 391:Core/Src/system_stm32h7xx.c **** #else
 392:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 393:Core/Src/system_stm32h7xx.c **** 
 394:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 395:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 396:Core/Src/system_stm32h7xx.c **** 
 397:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 398:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 399:Core/Src/system_stm32h7xx.c **** 
 400:Core/Src/system_stm32h7xx.c **** #endif
 401:Core/Src/system_stm32h7xx.c **** 
 402:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 403:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 404:Core/Src/system_stm32h7xx.c **** #else
 405:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 358              		.loc 1 405 0
 359 019e 0B4B     		ldr	r3, .L21+36
 360 01a0 1A60     		str	r2, [r3]
 406:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 407:Core/Src/system_stm32h7xx.c **** }
 361              		.loc 1 407 0
 362 01a2 5DF8044B 		ldr	r4, [sp], #4
 363              	.LCFI1:
 364              		.cfi_restore 4
 365              		.cfi_def_cfa_offset 0
 366 01a6 7047     		bx	lr
 367              	.L22:
 368              		.align	2
 369              	.L21:
 370 01a8 00440258 		.word	1476543488
 371 01ac 00093D00 		.word	4000000
 372 01b0 0090D003 		.word	64000000
 373 01b4 00000039 		.word	956301312
 374 01b8 0024744A 		.word	1249125376
 375 01bc 20BCBE4B 		.word	1270791200
 376 01c0 40787D01 		.word	25000000
 377 01c4 00000000 		.word	.LANCHOR0
 378 01c8 00000000 		.word	.LANCHOR1
 379 01cc 00000000 		.word	.LANCHOR2
 380              		.cfi_endproc
 381              	.LFE142:
 383              		.global	D1CorePrescTable
 384              		.global	SystemD2Clock
 385              		.global	SystemCoreClock
 386              		.section	.data.SystemD2Clock,"aw",%progbits
 387              		.align	2
 388              		.set	.LANCHOR1,. + 0
 391              	SystemD2Clock:
 392 0000 0090D003 		.word	64000000
 393              		.section	.rodata.D1CorePrescTable,"a",%progbits
 394              		.align	2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 15


 395              		.set	.LANCHOR0,. + 0
 398              	D1CorePrescTable:
 399 0000 00       		.byte	0
 400 0001 00       		.byte	0
 401 0002 00       		.byte	0
 402 0003 00       		.byte	0
 403 0004 01       		.byte	1
 404 0005 02       		.byte	2
 405 0006 03       		.byte	3
 406 0007 04       		.byte	4
 407 0008 01       		.byte	1
 408 0009 02       		.byte	2
 409 000a 03       		.byte	3
 410 000b 04       		.byte	4
 411 000c 06       		.byte	6
 412 000d 07       		.byte	7
 413 000e 08       		.byte	8
 414 000f 09       		.byte	9
 415              		.section	.data.SystemCoreClock,"aw",%progbits
 416              		.align	2
 417              		.set	.LANCHOR2,. + 0
 420              	SystemCoreClock:
 421 0000 0090D003 		.word	64000000
 422              		.text
 423              	.Letext0:
 424              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 425              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 426              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 427              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 428              		.file 6 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\math
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:21     .text.SystemInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:26     .text.SystemInit:00000000 SystemInit
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:135    .text.SystemInit:000000a8 $d
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:150    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:155    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:370    .text.SystemCoreClockUpdate:000001a8 $d
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:398    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:391    .data.SystemD2Clock:00000000 SystemD2Clock
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:420    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:387    .data.SystemD2Clock:00000000 $d
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:394    .rodata.D1CorePrescTable:00000000 $d
C:\Users\xiaofei\AppData\Local\Temp\ccztYpFc.s:416    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
