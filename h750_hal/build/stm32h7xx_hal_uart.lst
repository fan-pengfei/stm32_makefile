ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32h7xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	UART_EndTxTransfer:
  26              	.LFB187:
  27              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @file    stm32h7xx_hal_uart.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   [..]
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 2


  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ==================================
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 3


  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @attention
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 4


 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #include "stm32h7xx_hal.h"
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 5


 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** ===============================================================================
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in asynchronous mode.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Baud Rate
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Word Length
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Stop Bit
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Hardware flow control
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Over Sampling Method
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) data logical level inversion
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX and TX pins swap
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX overrun detection disabling
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA disabling on RX error
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) MSB first on communication line
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) auto Baud rate detection
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 6


 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     are available in reference manual).
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   following table.
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Table 1. UART frame format.
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 7


 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 8


 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 9


 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart             UART handle.
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the LIN UART instance */
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 10


 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart        UART handle.
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 11


 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the wake up method parameter */
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 12


 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 13


 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Callback
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 14


 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 15


 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 16


 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 17


 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 18


 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### IO operation functions #####
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and Half duplex data transfers.
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) There are two mode of transfer:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            after finishing transfer.
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            using DMA mode.
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Blocking mode API's are :
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort()
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 19


1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         Errors are handled as follows :
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 20


1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 21


1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask;
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* as long as data have to be received */
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 22


1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 23


1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 24


1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR       = NULL;
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 25


1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 26


1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the parity bit (MSB position).
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 27


1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the DMA channel */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 28


1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 29


1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 30


1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 31


1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 32


1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 33


1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 34


1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      before any call to DMA Abort functions */
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 35


1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (abortcplt == 1U)
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear ISR function pointers */
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR = NULL;
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset errorCode */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 36


1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Discard the received data */
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort complete callback */
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 37


2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Tx transfer counter */
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear TxISR function pointers */
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR = NULL;
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx transfer counter */
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear TxISR function pointers */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 38


2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Rx transfer counter */
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Discard the received data */
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 39


2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Rx transfer counter */
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RxISR function pointer */
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorcode;
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If no error occurs */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxISR != NULL)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 40


2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR(huart);
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If some errors occur */
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((errorflags != 0U)
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 41


2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->RxISR != NULL)
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxISR(huart);
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Receiver Timeout error in Reception
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Overrun error in Reception
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - any error occurs in DMA mode reception
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       */
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Abort DMA RX */
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Call user error callback */
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call registered error callback*/
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->ErrorCallback(huart);
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call legacy weak error callback*/
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 42


2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Call user error callback */
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error is notified to user through user error callback */
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered error callback*/
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback(huart);
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak error callback*/
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   } /* End if some error occurs */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->WakeupCallback(huart);
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxISR != NULL)
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR(huart);
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 43


2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 44


2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART error callback.
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 45


2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART control functions
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 46


2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 47


2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 48


2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 49


2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status.
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Transmit break characters.
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Send break characters */
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 50


2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides functions allowing to :
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle state.
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle error code
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Return the UART handle state.
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL state
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp2;
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp1 = huart->gState;
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval UART Error Code
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 51


2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval none
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init the UART Callback settings */
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp;
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t usartdiv;
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL3_ClocksTypeDef pll3_clocks;
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t pclk;
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 52


2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * to huart->Init.StopBits value */
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check LPUART instance */
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Retrieve frequency clock */
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D3PCLK1:
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCCEx_GetD3PCLK1Freq();
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 53


2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If proper clock source reported */
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Compute clock after Prescaler */
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, (uint64_t)huart->Init.BaudRate, huart->Init.Clo
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096 *
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     } /* if (pclk != 0) */
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 54


2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 55


3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear ISR function pointers */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 56


3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return ret;
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure data inversion */
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 57


3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Check the UART Idle State.
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tickstart = HAL_GetTick();
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until REACK flag is set */
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 58


3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART State */
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart     UART handle.
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Tickstart Tick start value
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout   Timeout duration
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check for the Timeout */
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 59


3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Process Unlocked */
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  28              		.loc 1 3301 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  34              		.loc 1 3303 0
  35 0000 0268     		ldr	r2, [r0]
  36 0002 1368     		ldr	r3, [r2]
  37 0004 23F0C003 		bic	r3, r3, #192
  38 0008 1360     		str	r3, [r2]
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  39              		.loc 1 3304 0
  40 000a 0268     		ldr	r2, [r0]
  41 000c 9368     		ldr	r3, [r2, #8]
  42 000e 23F40003 		bic	r3, r3, #8388608
  43 0012 9360     		str	r3, [r2, #8]
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  44              		.loc 1 3307 0
  45 0014 2023     		movs	r3, #32
  46 0016 C0F88030 		str	r3, [r0, #128]
  47 001a 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE187:
  51              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  52              		.align	2
  53              		.thumb
  54              		.thumb_func
  56              	UART_EndRxTransfer:
  57              	.LFB188:
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 60


3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  58              		.loc 1 3317 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL1:
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  64              		.loc 1 3319 0
  65 0000 0268     		ldr	r2, [r0]
  66 0002 1368     		ldr	r3, [r2]
  67 0004 23F49073 		bic	r3, r3, #288
  68 0008 1360     		str	r3, [r2]
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
  69              		.loc 1 3320 0
  70 000a 0268     		ldr	r2, [r0]
  71 000c 9168     		ldr	r1, [r2, #8]
  72 000e 044B     		ldr	r3, .L3
  73 0010 0B40     		ands	r3, r3, r1
  74 0012 9360     		str	r3, [r2, #8]
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 3323 0
  76 0014 2023     		movs	r3, #32
  77 0016 C0F88430 		str	r3, [r0, #132]
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
  78              		.loc 1 3326 0
  79 001a 0023     		movs	r3, #0
  80 001c C366     		str	r3, [r0, #108]
  81 001e 7047     		bx	lr
  82              	.L4:
  83              		.align	2
  84              	.L3:
  85 0020 FEFFFFEF 		.word	-268435458
  86              		.cfi_endproc
  87              	.LFE188:
  89              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  90              		.align	2
  91              		.thumb
  92              		.thumb_func
  94              	UART_TxISR_8BIT:
  95              	.LFB199:
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 61


3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Circular mode */
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 62


3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 63


3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 64


3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 65


3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 66


3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 67


3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  96              		.loc 1 3674 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL2:
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 102              		.loc 1 3676 0
 103 0000 D0F88030 		ldr	r3, [r0, #128]
 104 0004 212B     		cmp	r3, #33
 105 0006 1CD1     		bne	.L5
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 106              		.loc 1 3678 0
 107 0008 B0F85630 		ldrh	r3, [r0, #86]
 108 000c 9BB2     		uxth	r3, r3
 109 000e 53B9     		cbnz	r3, .L7
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 110              		.loc 1 3681 0
 111 0010 0268     		ldr	r2, [r0]
 112 0012 1368     		ldr	r3, [r2]
 113 0014 23F08003 		bic	r3, r3, #128
 114 0018 1360     		str	r3, [r2]
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 115              		.loc 1 3684 0
 116 001a 0268     		ldr	r2, [r0]
 117 001c 1368     		ldr	r3, [r2]
 118 001e 43F04003 		orr	r3, r3, #64
 119 0022 1360     		str	r3, [r2]
 120 0024 7047     		bx	lr
 121              	.L7:
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 122              		.loc 1 3688 0
 123 0026 0368     		ldr	r3, [r0]
 124 0028 026D     		ldr	r2, [r0, #80]
 125 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 126 002c 9A62     		str	r2, [r3, #40]
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 127              		.loc 1 3689 0
 128 002e 036D     		ldr	r3, [r0, #80]
 129 0030 0133     		adds	r3, r3, #1
 130 0032 0365     		str	r3, [r0, #80]
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 131              		.loc 1 3690 0
 132 0034 B0F85630 		ldrh	r3, [r0, #86]
 133 0038 9BB2     		uxth	r3, r3
 134 003a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 68


 135 003c 9BB2     		uxth	r3, r3
 136 003e A0F85630 		strh	r3, [r0, #86]	@ movhi
 137              	.L5:
 138 0042 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE199:
 142              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 143              		.align	2
 144              		.thumb
 145              		.thumb_func
 147              	UART_TxISR_16BIT:
 148              	.LFB200:
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 149              		.loc 1 3703 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL3:
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 155              		.loc 1 3707 0
 156 0000 D0F88030 		ldr	r3, [r0, #128]
 157 0004 212B     		cmp	r3, #33
 158 0006 1ED1     		bne	.L8
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 159              		.loc 1 3709 0
 160 0008 B0F85630 		ldrh	r3, [r0, #86]
 161 000c 9BB2     		uxth	r3, r3
 162 000e 53B9     		cbnz	r3, .L10
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 163              		.loc 1 3712 0
 164 0010 0268     		ldr	r2, [r0]
 165 0012 1368     		ldr	r3, [r2]
 166 0014 23F08003 		bic	r3, r3, #128
 167 0018 1360     		str	r3, [r2]
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 168              		.loc 1 3715 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 69


 169 001a 0268     		ldr	r2, [r0]
 170 001c 1368     		ldr	r3, [r2]
 171 001e 43F04003 		orr	r3, r3, #64
 172 0022 1360     		str	r3, [r2]
 173 0024 7047     		bx	lr
 174              	.L10:
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 175              		.loc 1 3719 0
 176 0026 036D     		ldr	r3, [r0, #80]
 177              	.LVL4:
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 178              		.loc 1 3720 0
 179 0028 0268     		ldr	r2, [r0]
 180 002a 1B88     		ldrh	r3, [r3]
 181              	.LVL5:
 182 002c C3F30803 		ubfx	r3, r3, #0, #9
 183 0030 9362     		str	r3, [r2, #40]
 184              	.LVL6:
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 185              		.loc 1 3721 0
 186 0032 036D     		ldr	r3, [r0, #80]
 187 0034 0233     		adds	r3, r3, #2
 188 0036 0365     		str	r3, [r0, #80]
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 189              		.loc 1 3722 0
 190 0038 B0F85630 		ldrh	r3, [r0, #86]
 191 003c 9BB2     		uxth	r3, r3
 192 003e 013B     		subs	r3, r3, #1
 193 0040 9BB2     		uxth	r3, r3
 194 0042 A0F85630 		strh	r3, [r0, #86]	@ movhi
 195              	.L8:
 196 0046 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE200:
 200              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 201              		.align	2
 202              		.thumb
 203              		.thumb_func
 205              	UART_TxISR_8BIT_FIFOEN:
 206              	.LFB201:
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 207              		.loc 1 3735 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 70


 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL7:
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 213              		.loc 1 3739 0
 214 0000 D0F88030 		ldr	r3, [r0, #128]
 215 0004 212B     		cmp	r3, #33
 216 0006 27D1     		bne	.L11
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 217              		.loc 1 3741 0
 218 0008 B0F86A30 		ldrh	r3, [r0, #106]
 219              	.LVL8:
 220 000c 22E0     		b	.L13
 221              	.L16:
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 222              		.loc 1 3743 0
 223 000e B0F85620 		ldrh	r2, [r0, #86]
 224 0012 92B2     		uxth	r2, r2
 225 0014 52B9     		cbnz	r2, .L14
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 226              		.loc 1 3746 0
 227 0016 0268     		ldr	r2, [r0]
 228 0018 9368     		ldr	r3, [r2, #8]
 229              	.LVL9:
 230 001a 23F40003 		bic	r3, r3, #8388608
 231 001e 9360     		str	r3, [r2, #8]
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 232              		.loc 1 3749 0
 233 0020 0268     		ldr	r2, [r0]
 234 0022 1368     		ldr	r3, [r2]
 235 0024 43F04003 		orr	r3, r3, #64
 236 0028 1360     		str	r3, [r2]
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 237              		.loc 1 3751 0
 238 002a 7047     		bx	lr
 239              	.LVL10:
 240              	.L14:
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 241              		.loc 1 3753 0
 242 002c 0268     		ldr	r2, [r0]
 243 002e D169     		ldr	r1, [r2, #28]
 244 0030 11F0800F 		tst	r1, #128
 245 0034 0CD0     		beq	.L15
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 71


3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 246              		.loc 1 3755 0
 247 0036 016D     		ldr	r1, [r0, #80]
 248 0038 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 249 003a 9162     		str	r1, [r2, #40]
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 250              		.loc 1 3756 0
 251 003c 026D     		ldr	r2, [r0, #80]
 252 003e 0132     		adds	r2, r2, #1
 253 0040 0265     		str	r2, [r0, #80]
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 254              		.loc 1 3757 0
 255 0042 B0F85620 		ldrh	r2, [r0, #86]
 256 0046 92B2     		uxth	r2, r2
 257 0048 013A     		subs	r2, r2, #1
 258 004a 92B2     		uxth	r2, r2
 259 004c A0F85620 		strh	r2, [r0, #86]	@ movhi
 260              	.L15:
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 261              		.loc 1 3741 0 discriminator 2
 262 0050 013B     		subs	r3, r3, #1
 263              	.LVL11:
 264 0052 9BB2     		uxth	r3, r3
 265              	.LVL12:
 266              	.L13:
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 267              		.loc 1 3741 0 is_stmt 0 discriminator 1
 268 0054 002B     		cmp	r3, #0
 269 0056 DAD1     		bne	.L16
 270              	.LVL13:
 271              	.L11:
 272 0058 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE201:
 276 005a 00BF     		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 277              		.align	2
 278              		.thumb
 279              		.thumb_func
 281              	UART_TxISR_16BIT_FIFOEN:
 282              	.LFB202:
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 72


3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 283              		.loc 1 3775 0 is_stmt 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL14:
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 289              		.loc 1 3780 0
 290 0000 D0F88030 		ldr	r3, [r0, #128]
 291 0004 212B     		cmp	r3, #33
 292 0006 29D1     		bne	.L17
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 293              		.loc 1 3782 0
 294 0008 B0F86A30 		ldrh	r3, [r0, #106]
 295              	.LVL15:
 296 000c 24E0     		b	.L19
 297              	.L22:
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 298              		.loc 1 3784 0
 299 000e B0F85620 		ldrh	r2, [r0, #86]
 300 0012 92B2     		uxth	r2, r2
 301 0014 52B9     		cbnz	r2, .L20
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 302              		.loc 1 3787 0
 303 0016 0268     		ldr	r2, [r0]
 304 0018 9368     		ldr	r3, [r2, #8]
 305              	.LVL16:
 306 001a 23F40003 		bic	r3, r3, #8388608
 307 001e 9360     		str	r3, [r2, #8]
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 308              		.loc 1 3790 0
 309 0020 0268     		ldr	r2, [r0]
 310 0022 1368     		ldr	r3, [r2]
 311 0024 43F04003 		orr	r3, r3, #64
 312 0028 1360     		str	r3, [r2]
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 313              		.loc 1 3792 0
 314 002a 7047     		bx	lr
 315              	.LVL17:
 316              	.L20:
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 317              		.loc 1 3794 0
 318 002c 0268     		ldr	r2, [r0]
 319 002e D169     		ldr	r1, [r2, #28]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 73


 320 0030 11F0800F 		tst	r1, #128
 321 0034 0ED0     		beq	.L21
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
 322              		.loc 1 3796 0
 323 0036 016D     		ldr	r1, [r0, #80]
 324              	.LVL18:
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 325              		.loc 1 3797 0
 326 0038 0988     		ldrh	r1, [r1]
 327              	.LVL19:
 328 003a C1F30801 		ubfx	r1, r1, #0, #9
 329 003e 9162     		str	r1, [r2, #40]
 330              	.LVL20:
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 331              		.loc 1 3798 0
 332 0040 026D     		ldr	r2, [r0, #80]
 333 0042 0232     		adds	r2, r2, #2
 334 0044 0265     		str	r2, [r0, #80]
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 335              		.loc 1 3799 0
 336 0046 B0F85620 		ldrh	r2, [r0, #86]
 337 004a 92B2     		uxth	r2, r2
 338 004c 013A     		subs	r2, r2, #1
 339 004e 92B2     		uxth	r2, r2
 340 0050 A0F85620 		strh	r2, [r0, #86]	@ movhi
 341              	.L21:
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 342              		.loc 1 3782 0 discriminator 2
 343 0054 013B     		subs	r3, r3, #1
 344              	.LVL21:
 345 0056 9BB2     		uxth	r3, r3
 346              	.LVL22:
 347              	.L19:
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 348              		.loc 1 3782 0 is_stmt 0 discriminator 1
 349 0058 002B     		cmp	r3, #0
 350 005a D8D1     		bne	.L22
 351              	.LVL23:
 352              	.L17:
 353 005c 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE202:
 357 005e 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 358              		.align	2
 359              		.weak	HAL_UART_MspInit
 360              		.thumb
 361              		.thumb_func
 363              	HAL_UART_MspInit:
 364              	.LFB146:
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 365              		.loc 1 660 0 is_stmt 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370              	.LVL24:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 74


 371 0000 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE146:
 375 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 376              		.align	2
 377              		.weak	HAL_UART_MspDeInit
 378              		.thumb
 379              		.thumb_func
 381              	HAL_UART_MspDeInit:
 382              	.LFB147:
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 383              		.loc 1 675 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388              	.LVL25:
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE147:
 393 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 394              		.align	2
 395              		.global	HAL_UART_DeInit
 396              		.thumb
 397              		.thumb_func
 399              	HAL_UART_DeInit:
 400              	.LFB145:
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 401              		.loc 1 615 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL26:
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 406              		.loc 1 617 0
 407 0000 E0B1     		cbz	r0, .L27
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 408              		.loc 1 615 0
 409 0002 38B5     		push	{r3, r4, r5, lr}
 410              	.LCFI0:
 411              		.cfi_def_cfa_offset 16
 412              		.cfi_offset 3, -16
 413              		.cfi_offset 4, -12
 414              		.cfi_offset 5, -8
 415              		.cfi_offset 14, -4
 416 0004 0446     		mov	r4, r0
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 417              		.loc 1 625 0
 418 0006 2423     		movs	r3, #36
 419 0008 C0F88030 		str	r3, [r0, #128]
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 420              		.loc 1 627 0
 421 000c 0268     		ldr	r2, [r0]
 422 000e 1368     		ldr	r3, [r2]
 423 0010 23F00103 		bic	r3, r3, #1
 424 0014 1360     		str	r3, [r2]
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 75


 425              		.loc 1 629 0
 426 0016 0368     		ldr	r3, [r0]
 427 0018 0025     		movs	r5, #0
 428 001a 1D60     		str	r5, [r3]
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 429              		.loc 1 630 0
 430 001c 0368     		ldr	r3, [r0]
 431 001e 5D60     		str	r5, [r3, #4]
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 432              		.loc 1 631 0
 433 0020 0368     		ldr	r3, [r0]
 434 0022 9D60     		str	r5, [r3, #8]
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 435              		.loc 1 642 0
 436 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 437              	.LVL27:
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 438              		.loc 1 645 0
 439 0028 C4F88850 		str	r5, [r4, #136]
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 440              		.loc 1 646 0
 441 002c C4F88050 		str	r5, [r4, #128]
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 442              		.loc 1 647 0
 443 0030 C4F88450 		str	r5, [r4, #132]
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 444              		.loc 1 649 0
 445 0034 84F87C50 		strb	r5, [r4, #124]
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 446              		.loc 1 651 0
 447 0038 2846     		mov	r0, r5
 448 003a 38BD     		pop	{r3, r4, r5, pc}
 449              	.LVL28:
 450              	.L27:
 451              	.LCFI1:
 452              		.cfi_def_cfa_offset 0
 453              		.cfi_restore 3
 454              		.cfi_restore 4
 455              		.cfi_restore 5
 456              		.cfi_restore 14
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 457              		.loc 1 619 0
 458 003c 0120     		movs	r0, #1
 459              	.LVL29:
 460 003e 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE145:
 464              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 465              		.align	2
 466              		.global	HAL_UART_Transmit_IT
 467              		.thumb
 468              		.thumb_func
 470              	HAL_UART_Transmit_IT:
 471              	.LFB150:
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 472              		.loc 1 1208 0
 473              		.cfi_startproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 76


 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL30:
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 478              		.loc 1 1210 0
 479 0000 D0F88030 		ldr	r3, [r0, #128]
 480 0004 202B     		cmp	r3, #32
 481 0006 44D1     		bne	.L37
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 482              		.loc 1 1212 0
 483 0008 002A     		cmp	r2, #0
 484 000a 18BF     		it	ne
 485 000c 0029     		cmpne	r1, #0
 486 000e 42D0     		beq	.L38
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 487              		.loc 1 1217 0
 488 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 489 0014 012B     		cmp	r3, #1
 490 0016 40D0     		beq	.L39
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 491              		.loc 1 1217 0 is_stmt 0 discriminator 2
 492 0018 0123     		movs	r3, #1
 493 001a 80F87C30 		strb	r3, [r0, #124]
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 494              		.loc 1 1219 0 is_stmt 1 discriminator 2
 495 001e 0165     		str	r1, [r0, #80]
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 496              		.loc 1 1220 0 discriminator 2
 497 0020 A0F85420 		strh	r2, [r0, #84]	@ movhi
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
 498              		.loc 1 1221 0 discriminator 2
 499 0024 A0F85620 		strh	r2, [r0, #86]	@ movhi
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 500              		.loc 1 1222 0 discriminator 2
 501 0028 0023     		movs	r3, #0
 502 002a 0367     		str	r3, [r0, #112]
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 503              		.loc 1 1224 0 discriminator 2
 504 002c C0F88830 		str	r3, [r0, #136]
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 505              		.loc 1 1225 0 discriminator 2
 506 0030 2123     		movs	r3, #33
 507 0032 C0F88030 		str	r3, [r0, #128]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 508              		.loc 1 1228 0 discriminator 2
 509 0036 436E     		ldr	r3, [r0, #100]
 510 0038 B3F1005F 		cmp	r3, #536870912
 511 003c 14D1     		bne	.L32
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 512              		.loc 1 1231 0
 513 003e 8368     		ldr	r3, [r0, #8]
 514 0040 B3F5805F 		cmp	r3, #4096
 515 0044 04D1     		bne	.L33
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 516              		.loc 1 1231 0 is_stmt 0 discriminator 1
 517 0046 0369     		ldr	r3, [r0, #16]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 77


 518 0048 13B9     		cbnz	r3, .L33
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 519              		.loc 1 1233 0 is_stmt 1
 520 004a 154B     		ldr	r3, .L40
 521 004c 0367     		str	r3, [r0, #112]
 522 004e 01E0     		b	.L34
 523              	.L33:
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 524              		.loc 1 1237 0
 525 0050 144B     		ldr	r3, .L40+4
 526 0052 0367     		str	r3, [r0, #112]
 527              	.L34:
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 528              		.loc 1 1240 0
 529 0054 0023     		movs	r3, #0
 530 0056 80F87C30 		strb	r3, [r0, #124]
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 531              		.loc 1 1243 0
 532 005a 0168     		ldr	r1, [r0]
 533              	.LVL31:
 534 005c 8A68     		ldr	r2, [r1, #8]
 535              	.LVL32:
 536 005e 42F40002 		orr	r2, r2, #8388608
 537 0062 8A60     		str	r2, [r1, #8]
 538              	.LVL33:
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 539              		.loc 1 1263 0
 540 0064 1846     		mov	r0, r3
 541              	.LVL34:
 542 0066 7047     		bx	lr
 543              	.LVL35:
 544              	.L32:
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 545              		.loc 1 1248 0
 546 0068 8368     		ldr	r3, [r0, #8]
 547 006a B3F5805F 		cmp	r3, #4096
 548 006e 04D1     		bne	.L35
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 549              		.loc 1 1248 0 is_stmt 0 discriminator 1
 550 0070 0369     		ldr	r3, [r0, #16]
 551 0072 13B9     		cbnz	r3, .L35
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 552              		.loc 1 1250 0 is_stmt 1
 553 0074 0C4B     		ldr	r3, .L40+8
 554 0076 0367     		str	r3, [r0, #112]
 555 0078 01E0     		b	.L36
 556              	.L35:
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 557              		.loc 1 1254 0
 558 007a 0C4B     		ldr	r3, .L40+12
 559 007c 0367     		str	r3, [r0, #112]
 560              	.L36:
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 561              		.loc 1 1257 0
 562 007e 0023     		movs	r3, #0
 563 0080 80F87C30 		strb	r3, [r0, #124]
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 78


 564              		.loc 1 1260 0
 565 0084 0168     		ldr	r1, [r0]
 566              	.LVL36:
 567 0086 0A68     		ldr	r2, [r1]
 568              	.LVL37:
 569 0088 42F08002 		orr	r2, r2, #128
 570 008c 0A60     		str	r2, [r1]
 571              	.LVL38:
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 572              		.loc 1 1263 0
 573 008e 1846     		mov	r0, r3
 574              	.LVL39:
 575 0090 7047     		bx	lr
 576              	.LVL40:
 577              	.L37:
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 578              		.loc 1 1267 0
 579 0092 0220     		movs	r0, #2
 580              	.LVL41:
 581 0094 7047     		bx	lr
 582              	.LVL42:
 583              	.L38:
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 584              		.loc 1 1214 0
 585 0096 0120     		movs	r0, #1
 586              	.LVL43:
 587 0098 7047     		bx	lr
 588              	.LVL44:
 589              	.L39:
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 590              		.loc 1 1217 0
 591 009a 0220     		movs	r0, #2
 592              	.LVL45:
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 593              		.loc 1 1269 0
 594 009c 7047     		bx	lr
 595              	.L41:
 596 009e 00BF     		.align	2
 597              	.L40:
 598 00a0 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 599 00a4 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 600 00a8 00000000 		.word	UART_TxISR_16BIT
 601 00ac 00000000 		.word	UART_TxISR_8BIT
 602              		.cfi_endproc
 603              	.LFE150:
 605              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 606              		.align	2
 607              		.global	HAL_UART_Receive_IT
 608              		.thumb
 609              		.thumb_func
 611              	HAL_UART_Receive_IT:
 612              	.LFB151:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 613              		.loc 1 1282 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 79


 617              		@ link register save eliminated.
 618              	.LVL46:
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 619              		.loc 1 1284 0
 620 0000 D0F88430 		ldr	r3, [r0, #132]
 621 0004 202B     		cmp	r3, #32
 622 0006 7DD1     		bne	.L56
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 623              		.loc 1 1286 0
 624 0008 002A     		cmp	r2, #0
 625 000a 18BF     		it	ne
 626 000c 0029     		cmpne	r1, #0
 627 000e 7BD0     		beq	.L57
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 628              		.loc 1 1291 0
 629 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 630 0014 012B     		cmp	r3, #1
 631 0016 79D0     		beq	.L58
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 632              		.loc 1 1291 0 is_stmt 0 discriminator 2
 633 0018 0123     		movs	r3, #1
 634 001a 80F87C30 		strb	r3, [r0, #124]
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
 635              		.loc 1 1293 0 is_stmt 1 discriminator 2
 636 001e 8165     		str	r1, [r0, #88]
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 637              		.loc 1 1294 0 discriminator 2
 638 0020 A0F85C20 		strh	r2, [r0, #92]	@ movhi
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR       = NULL;
 639              		.loc 1 1295 0 discriminator 2
 640 0024 A0F85E20 		strh	r2, [r0, #94]	@ movhi
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 641              		.loc 1 1296 0 discriminator 2
 642 0028 0023     		movs	r3, #0
 643 002a C366     		str	r3, [r0, #108]
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 644              		.loc 1 1299 0 discriminator 2
 645 002c 8368     		ldr	r3, [r0, #8]
 646 002e B3F5805F 		cmp	r3, #4096
 647 0032 0AD1     		bne	.L44
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 648              		.loc 1 1299 0 is_stmt 0 discriminator 1
 649 0034 0369     		ldr	r3, [r0, #16]
 650 0036 23B9     		cbnz	r3, .L45
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 651              		.loc 1 1299 0 discriminator 3
 652 0038 40F2FF13 		movw	r3, #511
 653 003c A0F86030 		strh	r3, [r0, #96]	@ movhi
 654 0040 1EE0     		b	.L46
 655              	.L45:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 656              		.loc 1 1299 0 discriminator 4
 657 0042 FF23     		movs	r3, #255
 658 0044 A0F86030 		strh	r3, [r0, #96]	@ movhi
 659 0048 1AE0     		b	.L46
 660              	.L44:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 80


 661              		.loc 1 1299 0 discriminator 2
 662 004a 4BB9     		cbnz	r3, .L47
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 663              		.loc 1 1299 0 discriminator 5
 664 004c 0369     		ldr	r3, [r0, #16]
 665 004e 1BB9     		cbnz	r3, .L48
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 666              		.loc 1 1299 0 discriminator 7
 667 0050 FF23     		movs	r3, #255
 668 0052 A0F86030 		strh	r3, [r0, #96]	@ movhi
 669 0056 13E0     		b	.L46
 670              	.L48:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 671              		.loc 1 1299 0 discriminator 8
 672 0058 7F23     		movs	r3, #127
 673 005a A0F86030 		strh	r3, [r0, #96]	@ movhi
 674 005e 0FE0     		b	.L46
 675              	.L47:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 676              		.loc 1 1299 0 discriminator 6
 677 0060 B3F1805F 		cmp	r3, #268435456
 678 0064 09D1     		bne	.L49
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 679              		.loc 1 1299 0 discriminator 9
 680 0066 0369     		ldr	r3, [r0, #16]
 681 0068 1BB9     		cbnz	r3, .L50
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 682              		.loc 1 1299 0 discriminator 11
 683 006a 7F23     		movs	r3, #127
 684 006c A0F86030 		strh	r3, [r0, #96]	@ movhi
 685 0070 06E0     		b	.L46
 686              	.L50:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 687              		.loc 1 1299 0 discriminator 12
 688 0072 3F23     		movs	r3, #63
 689 0074 A0F86030 		strh	r3, [r0, #96]	@ movhi
 690 0078 02E0     		b	.L46
 691              	.L49:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 692              		.loc 1 1299 0 discriminator 10
 693 007a 0023     		movs	r3, #0
 694 007c A0F86030 		strh	r3, [r0, #96]	@ movhi
 695              	.L46:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 696              		.loc 1 1301 0 is_stmt 1
 697 0080 0023     		movs	r3, #0
 698 0082 C0F88830 		str	r3, [r0, #136]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 699              		.loc 1 1302 0
 700 0086 2223     		movs	r3, #34
 701 0088 C0F88430 		str	r3, [r0, #132]
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 702              		.loc 1 1305 0
 703 008c 0168     		ldr	r1, [r0]
 704              	.LVL47:
 705 008e 8B68     		ldr	r3, [r1, #8]
 706 0090 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 81


 707 0094 8B60     		str	r3, [r1, #8]
 708              	.LVL48:
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 709              		.loc 1 1308 0
 710 0096 436E     		ldr	r3, [r0, #100]
 711 0098 B3F1005F 		cmp	r3, #536870912
 712 009c 1DD1     		bne	.L51
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 713              		.loc 1 1308 0 is_stmt 0 discriminator 1
 714 009e B0F86830 		ldrh	r3, [r0, #104]
 715 00a2 9A42     		cmp	r2, r3
 716 00a4 19D3     		bcc	.L51
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 717              		.loc 1 1311 0 is_stmt 1
 718 00a6 8368     		ldr	r3, [r0, #8]
 719 00a8 B3F5805F 		cmp	r3, #4096
 720 00ac 04D1     		bne	.L52
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 721              		.loc 1 1311 0 is_stmt 0 discriminator 1
 722 00ae 0369     		ldr	r3, [r0, #16]
 723 00b0 13B9     		cbnz	r3, .L52
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 724              		.loc 1 1313 0 is_stmt 1
 725 00b2 174B     		ldr	r3, .L59
 726 00b4 C366     		str	r3, [r0, #108]
 727 00b6 01E0     		b	.L53
 728              	.L52:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 729              		.loc 1 1317 0
 730 00b8 164B     		ldr	r3, .L59+4
 731 00ba C366     		str	r3, [r0, #108]
 732              	.L53:
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 733              		.loc 1 1320 0
 734 00bc 0023     		movs	r3, #0
 735 00be 80F87C30 		strb	r3, [r0, #124]
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 736              		.loc 1 1323 0
 737 00c2 0168     		ldr	r1, [r0]
 738 00c4 0A68     		ldr	r2, [r1]
 739              	.LVL49:
 740 00c6 42F48072 		orr	r2, r2, #256
 741 00ca 0A60     		str	r2, [r1]
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 742              		.loc 1 1324 0
 743 00cc 0168     		ldr	r1, [r0]
 744 00ce 8A68     		ldr	r2, [r1, #8]
 745 00d0 42F08052 		orr	r2, r2, #268435456
 746 00d4 8A60     		str	r2, [r1, #8]
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 747              		.loc 1 1344 0
 748 00d6 1846     		mov	r0, r3
 749              	.LVL50:
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 750              		.loc 1 1324 0
 751 00d8 7047     		bx	lr
 752              	.LVL51:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 82


 753              	.L51:
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 754              		.loc 1 1329 0
 755 00da 8368     		ldr	r3, [r0, #8]
 756 00dc B3F5805F 		cmp	r3, #4096
 757 00e0 04D1     		bne	.L54
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 758              		.loc 1 1329 0 is_stmt 0 discriminator 1
 759 00e2 0369     		ldr	r3, [r0, #16]
 760 00e4 13B9     		cbnz	r3, .L54
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 761              		.loc 1 1331 0 is_stmt 1
 762 00e6 0C4B     		ldr	r3, .L59+8
 763 00e8 C366     		str	r3, [r0, #108]
 764 00ea 01E0     		b	.L55
 765              	.L54:
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 766              		.loc 1 1335 0
 767 00ec 0B4B     		ldr	r3, .L59+12
 768 00ee C366     		str	r3, [r0, #108]
 769              	.L55:
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 770              		.loc 1 1338 0
 771 00f0 0023     		movs	r3, #0
 772 00f2 80F87C30 		strb	r3, [r0, #124]
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 773              		.loc 1 1341 0
 774 00f6 0168     		ldr	r1, [r0]
 775 00f8 0A68     		ldr	r2, [r1]
 776              	.LVL52:
 777 00fa 42F49072 		orr	r2, r2, #288
 778 00fe 0A60     		str	r2, [r1]
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 779              		.loc 1 1344 0
 780 0100 1846     		mov	r0, r3
 781              	.LVL53:
 782 0102 7047     		bx	lr
 783              	.LVL54:
 784              	.L56:
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 785              		.loc 1 1348 0
 786 0104 0220     		movs	r0, #2
 787              	.LVL55:
 788 0106 7047     		bx	lr
 789              	.LVL56:
 790              	.L57:
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 791              		.loc 1 1288 0
 792 0108 0120     		movs	r0, #1
 793              	.LVL57:
 794 010a 7047     		bx	lr
 795              	.LVL58:
 796              	.L58:
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 797              		.loc 1 1291 0
 798 010c 0220     		movs	r0, #2
 799              	.LVL59:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 83


1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 800              		.loc 1 1350 0
 801 010e 7047     		bx	lr
 802              	.L60:
 803              		.align	2
 804              	.L59:
 805 0110 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 806 0114 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 807 0118 00000000 		.word	UART_RxISR_16BIT
 808 011c 00000000 		.word	UART_RxISR_8BIT
 809              		.cfi_endproc
 810              	.LFE151:
 812              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 813              		.align	2
 814              		.global	HAL_UART_Transmit_DMA
 815              		.thumb
 816              		.thumb_func
 818              	HAL_UART_Transmit_DMA:
 819              	.LFB152:
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 820              		.loc 1 1363 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL60:
 825 0000 10B5     		push	{r4, lr}
 826              	.LCFI2:
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 4, -8
 829              		.cfi_offset 14, -4
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 830              		.loc 1 1365 0
 831 0002 D0F88040 		ldr	r4, [r0, #128]
 832 0006 202C     		cmp	r4, #32
 833 0008 42D1     		bne	.L64
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 834              		.loc 1 1367 0
 835 000a 002A     		cmp	r2, #0
 836 000c 18BF     		it	ne
 837 000e 0029     		cmpne	r1, #0
 838 0010 40D0     		beq	.L65
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 839              		.loc 1 1372 0
 840 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 841 0016 012B     		cmp	r3, #1
 842 0018 3ED0     		beq	.L66
 843 001a 1346     		mov	r3, r2
 844 001c 0446     		mov	r4, r0
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 845              		.loc 1 1372 0 is_stmt 0 discriminator 2
 846 001e 0122     		movs	r2, #1
 847              	.LVL61:
 848 0020 80F87C20 		strb	r2, [r0, #124]
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 849              		.loc 1 1374 0 is_stmt 1 discriminator 2
 850 0024 0165     		str	r1, [r0, #80]
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 84


 851              		.loc 1 1375 0 discriminator 2
 852 0026 A0F85430 		strh	r3, [r0, #84]	@ movhi
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 853              		.loc 1 1376 0 discriminator 2
 854 002a A0F85630 		strh	r3, [r0, #86]	@ movhi
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 855              		.loc 1 1378 0 discriminator 2
 856 002e 0022     		movs	r2, #0
 857 0030 C0F88820 		str	r2, [r0, #136]
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 858              		.loc 1 1379 0 discriminator 2
 859 0034 2122     		movs	r2, #33
 860 0036 C0F88020 		str	r2, [r0, #128]
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 861              		.loc 1 1381 0 discriminator 2
 862 003a 426F     		ldr	r2, [r0, #116]
 863 003c E2B1     		cbz	r2, .L63
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 864              		.loc 1 1384 0
 865 003e 1749     		ldr	r1, .L68
 866              	.LVL62:
 867 0040 D163     		str	r1, [r2, #60]
 868              	.LVL63:
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 869              		.loc 1 1387 0
 870 0042 426F     		ldr	r2, [r0, #116]
 871 0044 1649     		ldr	r1, .L68+4
 872 0046 1164     		str	r1, [r2, #64]
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 873              		.loc 1 1390 0
 874 0048 426F     		ldr	r2, [r0, #116]
 875 004a 1649     		ldr	r1, .L68+8
 876 004c D164     		str	r1, [r2, #76]
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 877              		.loc 1 1393 0
 878 004e 426F     		ldr	r2, [r0, #116]
 879 0050 0021     		movs	r1, #0
 880 0052 1165     		str	r1, [r2, #80]
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 881              		.loc 1 1396 0
 882 0054 0268     		ldr	r2, [r0]
 883 0056 2832     		adds	r2, r2, #40
 884 0058 016D     		ldr	r1, [r0, #80]
 885 005a 406F     		ldr	r0, [r0, #116]
 886              	.LVL64:
 887 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 888              	.LVL65:
 889 0060 50B1     		cbz	r0, .L63
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 890              		.loc 1 1399 0
 891 0062 1023     		movs	r3, #16
 892 0064 C4F88830 		str	r3, [r4, #136]
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 893              		.loc 1 1401 0
 894 0068 0023     		movs	r3, #0
 895 006a 84F87C30 		strb	r3, [r4, #124]
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 85


 896              		.loc 1 1404 0
 897 006e 2023     		movs	r3, #32
 898 0070 C4F88030 		str	r3, [r4, #128]
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 899              		.loc 1 1406 0
 900 0074 0120     		movs	r0, #1
 901 0076 10BD     		pop	{r4, pc}
 902              	.LVL66:
 903              	.L63:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 904              		.loc 1 1410 0
 905 0078 2368     		ldr	r3, [r4]
 906 007a 4022     		movs	r2, #64
 907 007c 1A62     		str	r2, [r3, #32]
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 908              		.loc 1 1412 0
 909 007e 0020     		movs	r0, #0
 910 0080 84F87C00 		strb	r0, [r4, #124]
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 911              		.loc 1 1416 0
 912 0084 2268     		ldr	r2, [r4]
 913 0086 9368     		ldr	r3, [r2, #8]
 914 0088 43F08003 		orr	r3, r3, #128
 915 008c 9360     		str	r3, [r2, #8]
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 916              		.loc 1 1418 0
 917 008e 10BD     		pop	{r4, pc}
 918              	.LVL67:
 919              	.L64:
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 920              		.loc 1 1422 0
 921 0090 0220     		movs	r0, #2
 922              	.LVL68:
 923 0092 10BD     		pop	{r4, pc}
 924              	.LVL69:
 925              	.L65:
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 926              		.loc 1 1369 0
 927 0094 0120     		movs	r0, #1
 928              	.LVL70:
 929 0096 10BD     		pop	{r4, pc}
 930              	.LVL71:
 931              	.L66:
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 932              		.loc 1 1372 0
 933 0098 0220     		movs	r0, #2
 934              	.LVL72:
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 935              		.loc 1 1424 0
 936 009a 10BD     		pop	{r4, pc}
 937              	.L69:
 938              		.align	2
 939              	.L68:
 940 009c 00000000 		.word	UART_DMATransmitCplt
 941 00a0 00000000 		.word	UART_DMATxHalfCplt
 942 00a4 00000000 		.word	UART_DMAError
 943              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 86


 944              	.LFE152:
 946              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 947              		.align	2
 948              		.global	HAL_UART_Receive_DMA
 949              		.thumb
 950              		.thumb_func
 952              	HAL_UART_Receive_DMA:
 953              	.LFB153:
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 954              		.loc 1 1439 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL73:
 959 0000 10B5     		push	{r4, lr}
 960              	.LCFI3:
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 4, -8
 963              		.cfi_offset 14, -4
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 964              		.loc 1 1441 0
 965 0002 D0F88440 		ldr	r4, [r0, #132]
 966 0006 202C     		cmp	r4, #32
 967 0008 47D1     		bne	.L73
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 968              		.loc 1 1443 0
 969 000a 002A     		cmp	r2, #0
 970 000c 18BF     		it	ne
 971 000e 0029     		cmpne	r1, #0
 972 0010 45D0     		beq	.L74
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 973              		.loc 1 1448 0
 974 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 975 0016 012B     		cmp	r3, #1
 976 0018 43D0     		beq	.L75
 977 001a 1346     		mov	r3, r2
 978 001c 0446     		mov	r4, r0
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 979              		.loc 1 1448 0 is_stmt 0 discriminator 2
 980 001e 0122     		movs	r2, #1
 981              	.LVL74:
 982 0020 80F87C20 		strb	r2, [r0, #124]
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 983              		.loc 1 1450 0 is_stmt 1 discriminator 2
 984 0024 8165     		str	r1, [r0, #88]
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 985              		.loc 1 1451 0 discriminator 2
 986 0026 A0F85C30 		strh	r3, [r0, #92]	@ movhi
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 987              		.loc 1 1453 0 discriminator 2
 988 002a 0022     		movs	r2, #0
 989 002c C0F88820 		str	r2, [r0, #136]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 990              		.loc 1 1454 0 discriminator 2
 991 0030 2222     		movs	r2, #34
 992 0032 C0F88420 		str	r2, [r0, #132]
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 87


 993              		.loc 1 1456 0 discriminator 2
 994 0036 826F     		ldr	r2, [r0, #120]
 995 0038 E2B1     		cbz	r2, .L72
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 996              		.loc 1 1459 0
 997 003a 1B49     		ldr	r1, .L77
 998              	.LVL75:
 999 003c D163     		str	r1, [r2, #60]
 1000              	.LVL76:
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1001              		.loc 1 1462 0
 1002 003e 826F     		ldr	r2, [r0, #120]
 1003 0040 1A49     		ldr	r1, .L77+4
 1004 0042 1164     		str	r1, [r2, #64]
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1005              		.loc 1 1465 0
 1006 0044 826F     		ldr	r2, [r0, #120]
 1007 0046 1A49     		ldr	r1, .L77+8
 1008 0048 D164     		str	r1, [r2, #76]
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1009              		.loc 1 1468 0
 1010 004a 826F     		ldr	r2, [r0, #120]
 1011 004c 0021     		movs	r1, #0
 1012 004e 1165     		str	r1, [r2, #80]
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1013              		.loc 1 1471 0
 1014 0050 0168     		ldr	r1, [r0]
 1015 0052 826D     		ldr	r2, [r0, #88]
 1016 0054 2431     		adds	r1, r1, #36
 1017 0056 806F     		ldr	r0, [r0, #120]
 1018              	.LVL77:
 1019 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1020              	.LVL78:
 1021 005c 50B1     		cbz	r0, .L72
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1022              		.loc 1 1474 0
 1023 005e 1023     		movs	r3, #16
 1024 0060 C4F88830 		str	r3, [r4, #136]
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1025              		.loc 1 1476 0
 1026 0064 0023     		movs	r3, #0
 1027 0066 84F87C30 		strb	r3, [r4, #124]
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1028              		.loc 1 1479 0
 1029 006a 2023     		movs	r3, #32
 1030 006c C4F88030 		str	r3, [r4, #128]
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 1031              		.loc 1 1481 0
 1032 0070 0120     		movs	r0, #1
 1033 0072 10BD     		pop	{r4, pc}
 1034              	.LVL79:
 1035              	.L72:
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1036              		.loc 1 1484 0
 1037 0074 0020     		movs	r0, #0
 1038 0076 84F87C00 		strb	r0, [r4, #124]
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 88


 1039              		.loc 1 1487 0
 1040 007a 2268     		ldr	r2, [r4]
 1041 007c 1368     		ldr	r3, [r2]
 1042 007e 43F48073 		orr	r3, r3, #256
 1043 0082 1360     		str	r3, [r2]
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1044              		.loc 1 1490 0
 1045 0084 2268     		ldr	r2, [r4]
 1046 0086 9368     		ldr	r3, [r2, #8]
 1047 0088 43F00103 		orr	r3, r3, #1
 1048 008c 9360     		str	r3, [r2, #8]
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1049              		.loc 1 1494 0
 1050 008e 2268     		ldr	r2, [r4]
 1051 0090 9368     		ldr	r3, [r2, #8]
 1052 0092 43F04003 		orr	r3, r3, #64
 1053 0096 9360     		str	r3, [r2, #8]
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1054              		.loc 1 1496 0
 1055 0098 10BD     		pop	{r4, pc}
 1056              	.LVL80:
 1057              	.L73:
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1058              		.loc 1 1500 0
 1059 009a 0220     		movs	r0, #2
 1060              	.LVL81:
 1061 009c 10BD     		pop	{r4, pc}
 1062              	.LVL82:
 1063              	.L74:
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1064              		.loc 1 1445 0
 1065 009e 0120     		movs	r0, #1
 1066              	.LVL83:
 1067 00a0 10BD     		pop	{r4, pc}
 1068              	.LVL84:
 1069              	.L75:
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1070              		.loc 1 1448 0
 1071 00a2 0220     		movs	r0, #2
 1072              	.LVL85:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1073              		.loc 1 1502 0
 1074 00a4 10BD     		pop	{r4, pc}
 1075              	.L78:
 1076 00a6 00BF     		.align	2
 1077              	.L77:
 1078 00a8 00000000 		.word	UART_DMAReceiveCplt
 1079 00ac 00000000 		.word	UART_DMARxHalfCplt
 1080 00b0 00000000 		.word	UART_DMAError
 1081              		.cfi_endproc
 1082              	.LFE153:
 1084              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1085              		.align	2
 1086              		.global	HAL_UART_DMAPause
 1087              		.thumb
 1088              		.thumb_func
 1090              	HAL_UART_DMAPause:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 89


 1091              	.LFB154:
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1092              		.loc 1 1510 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097              	.LVL86:
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1098              		.loc 1 1511 0
 1099 0000 D0F88010 		ldr	r1, [r0, #128]
 1100              	.LVL87:
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1101              		.loc 1 1512 0
 1102 0004 D0F88420 		ldr	r2, [r0, #132]
 1103              	.LVL88:
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1104              		.loc 1 1514 0
 1105 0008 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1106 000c 012B     		cmp	r3, #1
 1107 000e 28D0     		beq	.L83
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1108              		.loc 1 1510 0 discriminator 2
 1109 0010 10B4     		push	{r4}
 1110              	.LCFI4:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 4, -4
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1113              		.loc 1 1514 0 discriminator 2
 1114 0012 0123     		movs	r3, #1
 1115 0014 80F87C30 		strb	r3, [r0, #124]
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1116              		.loc 1 1516 0 discriminator 2
 1117 0018 0368     		ldr	r3, [r0]
 1118 001a 9C68     		ldr	r4, [r3, #8]
 1119 001c 14F0800F 		tst	r4, #128
 1120 0020 05D0     		beq	.L81
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1121              		.loc 1 1516 0 is_stmt 0 discriminator 1
 1122 0022 2129     		cmp	r1, #33
 1123 0024 03D1     		bne	.L81
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1124              		.loc 1 1520 0 is_stmt 1
 1125 0026 9968     		ldr	r1, [r3, #8]
 1126              	.LVL89:
 1127 0028 21F08001 		bic	r1, r1, #128
 1128 002c 9960     		str	r1, [r3, #8]
 1129              	.L81:
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1130              		.loc 1 1522 0
 1131 002e 0368     		ldr	r3, [r0]
 1132 0030 9968     		ldr	r1, [r3, #8]
 1133 0032 11F0400F 		tst	r1, #64
 1134 0036 0FD0     		beq	.L82
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1135              		.loc 1 1522 0 is_stmt 0 discriminator 1
 1136 0038 222A     		cmp	r2, #34
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 90


 1137 003a 0DD1     		bne	.L82
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1138              		.loc 1 1526 0 is_stmt 1
 1139 003c 1A68     		ldr	r2, [r3]
 1140              	.LVL90:
 1141 003e 22F48072 		bic	r2, r2, #256
 1142 0042 1A60     		str	r2, [r3]
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1143              		.loc 1 1527 0
 1144 0044 0268     		ldr	r2, [r0]
 1145 0046 9368     		ldr	r3, [r2, #8]
 1146 0048 23F00103 		bic	r3, r3, #1
 1147 004c 9360     		str	r3, [r2, #8]
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1148              		.loc 1 1530 0
 1149 004e 0268     		ldr	r2, [r0]
 1150 0050 9368     		ldr	r3, [r2, #8]
 1151 0052 23F04003 		bic	r3, r3, #64
 1152 0056 9360     		str	r3, [r2, #8]
 1153              	.L82:
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1154              		.loc 1 1533 0
 1155 0058 0023     		movs	r3, #0
 1156 005a 80F87C30 		strb	r3, [r0, #124]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1157              		.loc 1 1535 0
 1158 005e 1846     		mov	r0, r3
 1159              	.LVL91:
 1160 0060 01E0     		b	.L80
 1161              	.LVL92:
 1162              	.L83:
 1163              	.LCFI5:
 1164              		.cfi_def_cfa_offset 0
 1165              		.cfi_restore 4
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1166              		.loc 1 1514 0
 1167 0062 0220     		movs	r0, #2
 1168              	.LVL93:
 1169 0064 7047     		bx	lr
 1170              	.LVL94:
 1171              	.L80:
 1172              	.LCFI6:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 4, -4
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1175              		.loc 1 1536 0
 1176 0066 5DF8044B 		ldr	r4, [sp], #4
 1177              	.LCFI7:
 1178              		.cfi_restore 4
 1179              		.cfi_def_cfa_offset 0
 1180 006a 7047     		bx	lr
 1181              		.cfi_endproc
 1182              	.LFE154:
 1184              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1185              		.align	2
 1186              		.global	HAL_UART_DMAResume
 1187              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 91


 1188              		.thumb_func
 1190              	HAL_UART_DMAResume:
 1191              	.LFB155:
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 1192              		.loc 1 1544 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197              	.LVL95:
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1198              		.loc 1 1545 0
 1199 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1200 0004 012B     		cmp	r3, #1
 1201 0006 26D0     		beq	.L90
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1202              		.loc 1 1545 0 is_stmt 0 discriminator 2
 1203 0008 0123     		movs	r3, #1
 1204 000a 80F87C30 		strb	r3, [r0, #124]
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1205              		.loc 1 1547 0 is_stmt 1 discriminator 2
 1206 000e D0F88030 		ldr	r3, [r0, #128]
 1207 0012 212B     		cmp	r3, #33
 1208 0014 04D1     		bne	.L88
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1209              		.loc 1 1550 0
 1210 0016 0268     		ldr	r2, [r0]
 1211 0018 9368     		ldr	r3, [r2, #8]
 1212 001a 43F08003 		orr	r3, r3, #128
 1213 001e 9360     		str	r3, [r2, #8]
 1214              	.L88:
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1215              		.loc 1 1552 0
 1216 0020 D0F88430 		ldr	r3, [r0, #132]
 1217 0024 222B     		cmp	r3, #34
 1218 0026 11D1     		bne	.L89
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1219              		.loc 1 1555 0
 1220 0028 0368     		ldr	r3, [r0]
 1221 002a 0822     		movs	r2, #8
 1222 002c 1A62     		str	r2, [r3, #32]
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1223              		.loc 1 1558 0
 1224 002e 0268     		ldr	r2, [r0]
 1225 0030 1368     		ldr	r3, [r2]
 1226 0032 43F48073 		orr	r3, r3, #256
 1227 0036 1360     		str	r3, [r2]
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1228              		.loc 1 1559 0
 1229 0038 0268     		ldr	r2, [r0]
 1230 003a 9368     		ldr	r3, [r2, #8]
 1231 003c 43F00103 		orr	r3, r3, #1
 1232 0040 9360     		str	r3, [r2, #8]
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1233              		.loc 1 1562 0
 1234 0042 0268     		ldr	r2, [r0]
 1235 0044 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 92


 1236 0046 43F04003 		orr	r3, r3, #64
 1237 004a 9360     		str	r3, [r2, #8]
 1238              	.L89:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1239              		.loc 1 1565 0
 1240 004c 0023     		movs	r3, #0
 1241 004e 80F87C30 		strb	r3, [r0, #124]
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1242              		.loc 1 1567 0
 1243 0052 1846     		mov	r0, r3
 1244              	.LVL96:
 1245 0054 7047     		bx	lr
 1246              	.LVL97:
 1247              	.L90:
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1248              		.loc 1 1545 0
 1249 0056 0220     		movs	r0, #2
 1250              	.LVL98:
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1251              		.loc 1 1568 0
 1252 0058 7047     		bx	lr
 1253              		.cfi_endproc
 1254              	.LFE155:
 1256 005a 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1257              		.align	2
 1258              		.global	HAL_UART_DMAStop
 1259              		.thumb
 1260              		.thumb_func
 1262              	HAL_UART_DMAStop:
 1263              	.LFB156:
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1264              		.loc 1 1576 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL99:
 1269 0000 38B5     		push	{r3, r4, r5, lr}
 1270              	.LCFI8:
 1271              		.cfi_def_cfa_offset 16
 1272              		.cfi_offset 3, -16
 1273              		.cfi_offset 4, -12
 1274              		.cfi_offset 5, -8
 1275              		.cfi_offset 14, -4
 1276 0002 0446     		mov	r4, r0
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1277              		.loc 1 1584 0
 1278 0004 D0F88010 		ldr	r1, [r0, #128]
 1279              	.LVL100:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1280              		.loc 1 1585 0
 1281 0008 D0F88450 		ldr	r5, [r0, #132]
 1282              	.LVL101:
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1283              		.loc 1 1588 0
 1284 000c 0368     		ldr	r3, [r0]
 1285 000e 9A68     		ldr	r2, [r3, #8]
 1286 0010 12F0800F 		tst	r2, #128
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 93


 1287 0014 17D0     		beq	.L92
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1288              		.loc 1 1588 0 is_stmt 0 discriminator 1
 1289 0016 2129     		cmp	r1, #33
 1290 0018 15D1     		bne	.L92
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1291              		.loc 1 1591 0 is_stmt 1
 1292 001a 9A68     		ldr	r2, [r3, #8]
 1293 001c 22F08002 		bic	r2, r2, #128
 1294 0020 9A60     		str	r2, [r3, #8]
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1295              		.loc 1 1594 0
 1296 0022 406F     		ldr	r0, [r0, #116]
 1297              	.LVL102:
 1298 0024 60B1     		cbz	r0, .L93
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1299              		.loc 1 1596 0
 1300 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 1301              	.LVL103:
 1302 002a 48B1     		cbz	r0, .L93
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1303              		.loc 1 1598 0
 1304 002c 606F     		ldr	r0, [r4, #116]
 1305 002e FFF7FEFF 		bl	HAL_DMA_GetError
 1306              	.LVL104:
 1307 0032 2028     		cmp	r0, #32
 1308 0034 04D1     		bne	.L93
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1309              		.loc 1 1601 0
 1310 0036 1023     		movs	r3, #16
 1311 0038 C4F88830 		str	r3, [r4, #136]
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1312              		.loc 1 1603 0
 1313 003c 0320     		movs	r0, #3
 1314 003e 38BD     		pop	{r3, r4, r5, pc}
 1315              	.LVL105:
 1316              	.L93:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1317              		.loc 1 1608 0
 1318 0040 2046     		mov	r0, r4
 1319 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 1320              	.LVL106:
 1321              	.L92:
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1322              		.loc 1 1612 0
 1323 0046 2368     		ldr	r3, [r4]
 1324 0048 9A68     		ldr	r2, [r3, #8]
 1325 004a 12F0400F 		tst	r2, #64
 1326 004e 19D0     		beq	.L96
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1327              		.loc 1 1612 0 is_stmt 0 discriminator 1
 1328 0050 222D     		cmp	r5, #34
 1329 0052 19D1     		bne	.L97
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1330              		.loc 1 1615 0 is_stmt 1
 1331 0054 9A68     		ldr	r2, [r3, #8]
 1332 0056 22F04002 		bic	r2, r2, #64
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 94


 1333 005a 9A60     		str	r2, [r3, #8]
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1334              		.loc 1 1618 0
 1335 005c A06F     		ldr	r0, [r4, #120]
 1336 005e 60B1     		cbz	r0, .L95
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1337              		.loc 1 1620 0
 1338 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 1339              	.LVL107:
 1340 0064 48B1     		cbz	r0, .L95
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1341              		.loc 1 1622 0
 1342 0066 A06F     		ldr	r0, [r4, #120]
 1343 0068 FFF7FEFF 		bl	HAL_DMA_GetError
 1344              	.LVL108:
 1345 006c 2028     		cmp	r0, #32
 1346 006e 04D1     		bne	.L95
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1347              		.loc 1 1625 0
 1348 0070 1023     		movs	r3, #16
 1349 0072 C4F88830 		str	r3, [r4, #136]
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1350              		.loc 1 1627 0
 1351 0076 0320     		movs	r0, #3
 1352 0078 38BD     		pop	{r3, r4, r5, pc}
 1353              	.LVL109:
 1354              	.L95:
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1355              		.loc 1 1632 0
 1356 007a 2046     		mov	r0, r4
 1357 007c FFF7FEFF 		bl	UART_EndRxTransfer
 1358              	.LVL110:
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1359              		.loc 1 1635 0
 1360 0080 0020     		movs	r0, #0
 1361 0082 38BD     		pop	{r3, r4, r5, pc}
 1362              	.LVL111:
 1363              	.L96:
 1364 0084 0020     		movs	r0, #0
 1365 0086 38BD     		pop	{r3, r4, r5, pc}
 1366              	.LVL112:
 1367              	.L97:
 1368 0088 0020     		movs	r0, #0
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1369              		.loc 1 1636 0
 1370 008a 38BD     		pop	{r3, r4, r5, pc}
 1371              		.cfi_endproc
 1372              	.LFE156:
 1374              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1375              		.align	2
 1376              		.global	HAL_UART_Abort
 1377              		.thumb
 1378              		.thumb_func
 1380              	HAL_UART_Abort:
 1381              	.LFB157:
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1382              		.loc 1 1651 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 95


 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              	.LVL113:
 1387 0000 10B5     		push	{r4, lr}
 1388              	.LCFI9:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 4, -8
 1391              		.cfi_offset 14, -4
 1392 0002 0446     		mov	r4, r0
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 1393              		.loc 1 1653 0
 1394 0004 0268     		ldr	r2, [r0]
 1395 0006 1368     		ldr	r3, [r2]
 1396 0008 23F4F073 		bic	r3, r3, #480
 1397 000c 1360     		str	r3, [r2]
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1398              		.loc 1 1654 0
 1399 000e 0268     		ldr	r2, [r0]
 1400 0010 9168     		ldr	r1, [r2, #8]
 1401 0012 2C4B     		ldr	r3, .L105
 1402 0014 0B40     		ands	r3, r3, r1
 1403 0016 9360     		str	r3, [r2, #8]
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1404              		.loc 1 1657 0
 1405 0018 0368     		ldr	r3, [r0]
 1406 001a 9A68     		ldr	r2, [r3, #8]
 1407 001c 12F0800F 		tst	r2, #128
 1408 0020 15D0     		beq	.L100
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1409              		.loc 1 1659 0
 1410 0022 9A68     		ldr	r2, [r3, #8]
 1411 0024 22F08002 		bic	r2, r2, #128
 1412 0028 9A60     		str	r2, [r3, #8]
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1413              		.loc 1 1662 0
 1414 002a 436F     		ldr	r3, [r0, #116]
 1415 002c 7BB1     		cbz	r3, .L100
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1416              		.loc 1 1666 0
 1417 002e 0022     		movs	r2, #0
 1418 0030 1A65     		str	r2, [r3, #80]
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1419              		.loc 1 1668 0
 1420 0032 406F     		ldr	r0, [r0, #116]
 1421              	.LVL114:
 1422 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1423              	.LVL115:
 1424 0038 48B1     		cbz	r0, .L100
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1425              		.loc 1 1670 0
 1426 003a 606F     		ldr	r0, [r4, #116]
 1427 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1428              	.LVL116:
 1429 0040 2028     		cmp	r0, #32
 1430 0042 04D1     		bne	.L100
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 96


 1431              		.loc 1 1673 0
 1432 0044 1023     		movs	r3, #16
 1433 0046 C4F88830 		str	r3, [r4, #136]
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1434              		.loc 1 1675 0
 1435 004a 0320     		movs	r0, #3
 1436 004c 10BD     		pop	{r4, pc}
 1437              	.LVL117:
 1438              	.L100:
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1439              		.loc 1 1682 0
 1440 004e 2368     		ldr	r3, [r4]
 1441 0050 9A68     		ldr	r2, [r3, #8]
 1442 0052 12F0400F 		tst	r2, #64
 1443 0056 15D0     		beq	.L102
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1444              		.loc 1 1684 0
 1445 0058 9A68     		ldr	r2, [r3, #8]
 1446 005a 22F04002 		bic	r2, r2, #64
 1447 005e 9A60     		str	r2, [r3, #8]
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1448              		.loc 1 1687 0
 1449 0060 A36F     		ldr	r3, [r4, #120]
 1450 0062 7BB1     		cbz	r3, .L102
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1451              		.loc 1 1691 0
 1452 0064 0022     		movs	r2, #0
 1453 0066 1A65     		str	r2, [r3, #80]
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1454              		.loc 1 1693 0
 1455 0068 A06F     		ldr	r0, [r4, #120]
 1456 006a FFF7FEFF 		bl	HAL_DMA_Abort
 1457              	.LVL118:
 1458 006e 48B1     		cbz	r0, .L102
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1459              		.loc 1 1695 0
 1460 0070 A06F     		ldr	r0, [r4, #120]
 1461 0072 FFF7FEFF 		bl	HAL_DMA_GetError
 1462              	.LVL119:
 1463 0076 2028     		cmp	r0, #32
 1464 0078 04D1     		bne	.L102
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1465              		.loc 1 1698 0
 1466 007a 1023     		movs	r3, #16
 1467 007c C4F88830 		str	r3, [r4, #136]
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1468              		.loc 1 1700 0
 1469 0080 0320     		movs	r0, #3
 1470 0082 10BD     		pop	{r4, pc}
 1471              	.LVL120:
 1472              	.L102:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1473              		.loc 1 1707 0
 1474 0084 0023     		movs	r3, #0
 1475 0086 A4F85630 		strh	r3, [r4, #86]	@ movhi
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1476              		.loc 1 1708 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 97


 1477 008a A4F85E30 		strh	r3, [r4, #94]	@ movhi
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1478              		.loc 1 1711 0
 1479 008e 2368     		ldr	r3, [r4]
 1480 0090 0F22     		movs	r2, #15
 1481 0092 1A62     		str	r2, [r3, #32]
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1482              		.loc 1 1714 0
 1483 0094 636E     		ldr	r3, [r4, #100]
 1484 0096 B3F1005F 		cmp	r3, #536870912
 1485 009a 04D1     		bne	.L103
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1486              		.loc 1 1716 0
 1487 009c 2268     		ldr	r2, [r4]
 1488 009e 9369     		ldr	r3, [r2, #24]
 1489 00a0 43F01003 		orr	r3, r3, #16
 1490 00a4 9361     		str	r3, [r2, #24]
 1491              	.L103:
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1492              		.loc 1 1720 0
 1493 00a6 2268     		ldr	r2, [r4]
 1494 00a8 9369     		ldr	r3, [r2, #24]
 1495 00aa 43F00803 		orr	r3, r3, #8
 1496 00ae 9361     		str	r3, [r2, #24]
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1497              		.loc 1 1723 0
 1498 00b0 2023     		movs	r3, #32
 1499 00b2 C4F88030 		str	r3, [r4, #128]
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1500              		.loc 1 1724 0
 1501 00b6 C4F88430 		str	r3, [r4, #132]
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1502              		.loc 1 1726 0
 1503 00ba 0020     		movs	r0, #0
 1504 00bc C4F88800 		str	r0, [r4, #136]
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1505              		.loc 1 1729 0
 1506 00c0 10BD     		pop	{r4, pc}
 1507              	.LVL121:
 1508              	.L106:
 1509 00c2 00BF     		.align	2
 1510              	.L105:
 1511 00c4 FEFF7FEF 		.word	-276824066
 1512              		.cfi_endproc
 1513              	.LFE157:
 1515              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1516              		.align	2
 1517              		.global	HAL_UART_AbortTransmit
 1518              		.thumb
 1519              		.thumb_func
 1521              	HAL_UART_AbortTransmit:
 1522              	.LFB158:
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1523              		.loc 1 1744 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 98


 1527              	.LVL122:
 1528 0000 10B5     		push	{r4, lr}
 1529              	.LCFI10:
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 4, -8
 1532              		.cfi_offset 14, -4
 1533 0002 0446     		mov	r4, r0
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1534              		.loc 1 1746 0
 1535 0004 0268     		ldr	r2, [r0]
 1536 0006 1368     		ldr	r3, [r2]
 1537 0008 23F0C003 		bic	r3, r3, #192
 1538 000c 1360     		str	r3, [r2]
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1539              		.loc 1 1747 0
 1540 000e 0268     		ldr	r2, [r0]
 1541 0010 9368     		ldr	r3, [r2, #8]
 1542 0012 23F40003 		bic	r3, r3, #8388608
 1543 0016 9360     		str	r3, [r2, #8]
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1544              		.loc 1 1750 0
 1545 0018 0368     		ldr	r3, [r0]
 1546 001a 9A68     		ldr	r2, [r3, #8]
 1547 001c 12F0800F 		tst	r2, #128
 1548 0020 15D0     		beq	.L108
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1549              		.loc 1 1752 0
 1550 0022 9A68     		ldr	r2, [r3, #8]
 1551 0024 22F08002 		bic	r2, r2, #128
 1552 0028 9A60     		str	r2, [r3, #8]
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1553              		.loc 1 1755 0
 1554 002a 436F     		ldr	r3, [r0, #116]
 1555 002c 7BB1     		cbz	r3, .L108
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1556              		.loc 1 1759 0
 1557 002e 0022     		movs	r2, #0
 1558 0030 1A65     		str	r2, [r3, #80]
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1559              		.loc 1 1761 0
 1560 0032 406F     		ldr	r0, [r0, #116]
 1561              	.LVL123:
 1562 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1563              	.LVL124:
 1564 0038 48B1     		cbz	r0, .L108
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1565              		.loc 1 1763 0
 1566 003a 606F     		ldr	r0, [r4, #116]
 1567 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1568              	.LVL125:
 1569 0040 2028     		cmp	r0, #32
 1570 0042 04D1     		bne	.L108
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1571              		.loc 1 1766 0
 1572 0044 1023     		movs	r3, #16
 1573 0046 C4F88830 		str	r3, [r4, #136]
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 99


 1574              		.loc 1 1768 0
 1575 004a 0320     		movs	r0, #3
 1576 004c 10BD     		pop	{r4, pc}
 1577              	.LVL126:
 1578              	.L108:
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1579              		.loc 1 1775 0
 1580 004e 0023     		movs	r3, #0
 1581 0050 A4F85630 		strh	r3, [r4, #86]	@ movhi
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1582              		.loc 1 1778 0
 1583 0054 636E     		ldr	r3, [r4, #100]
 1584 0056 B3F1005F 		cmp	r3, #536870912
 1585 005a 04D1     		bne	.L110
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1586              		.loc 1 1780 0
 1587 005c 2268     		ldr	r2, [r4]
 1588 005e 9369     		ldr	r3, [r2, #24]
 1589 0060 43F01003 		orr	r3, r3, #16
 1590 0064 9361     		str	r3, [r2, #24]
 1591              	.L110:
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1592              		.loc 1 1784 0
 1593 0066 2023     		movs	r3, #32
 1594 0068 C4F88030 		str	r3, [r4, #128]
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1595              		.loc 1 1786 0
 1596 006c 0020     		movs	r0, #0
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1597              		.loc 1 1787 0
 1598 006e 10BD     		pop	{r4, pc}
 1599              		.cfi_endproc
 1600              	.LFE158:
 1602              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1603              		.align	2
 1604              		.global	HAL_UART_AbortReceive
 1605              		.thumb
 1606              		.thumb_func
 1608              	HAL_UART_AbortReceive:
 1609              	.LFB159:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 1610              		.loc 1 1802 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              	.LVL127:
 1615 0000 10B5     		push	{r4, lr}
 1616              	.LCFI11:
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 4, -8
 1619              		.cfi_offset 14, -4
 1620 0002 0446     		mov	r4, r0
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 1621              		.loc 1 1804 0
 1622 0004 0268     		ldr	r2, [r0]
 1623 0006 1368     		ldr	r3, [r2]
 1624 0008 23F49073 		bic	r3, r3, #288
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 100


 1625 000c 1360     		str	r3, [r2]
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1626              		.loc 1 1805 0
 1627 000e 0268     		ldr	r2, [r0]
 1628 0010 9168     		ldr	r1, [r2, #8]
 1629 0012 164B     		ldr	r3, .L116
 1630 0014 0B40     		ands	r3, r3, r1
 1631 0016 9360     		str	r3, [r2, #8]
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1632              		.loc 1 1808 0
 1633 0018 0368     		ldr	r3, [r0]
 1634 001a 9A68     		ldr	r2, [r3, #8]
 1635 001c 12F0400F 		tst	r2, #64
 1636 0020 15D0     		beq	.L113
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1637              		.loc 1 1810 0
 1638 0022 9A68     		ldr	r2, [r3, #8]
 1639 0024 22F04002 		bic	r2, r2, #64
 1640 0028 9A60     		str	r2, [r3, #8]
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1641              		.loc 1 1813 0
 1642 002a 836F     		ldr	r3, [r0, #120]
 1643 002c 7BB1     		cbz	r3, .L113
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1644              		.loc 1 1817 0
 1645 002e 0022     		movs	r2, #0
 1646 0030 1A65     		str	r2, [r3, #80]
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1647              		.loc 1 1819 0
 1648 0032 806F     		ldr	r0, [r0, #120]
 1649              	.LVL128:
 1650 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1651              	.LVL129:
 1652 0038 48B1     		cbz	r0, .L113
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1653              		.loc 1 1821 0
 1654 003a A06F     		ldr	r0, [r4, #120]
 1655 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1656              	.LVL130:
 1657 0040 2028     		cmp	r0, #32
 1658 0042 04D1     		bne	.L113
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1659              		.loc 1 1824 0
 1660 0044 1023     		movs	r3, #16
 1661 0046 C4F88830 		str	r3, [r4, #136]
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 1662              		.loc 1 1826 0
 1663 004a 0320     		movs	r0, #3
 1664 004c 10BD     		pop	{r4, pc}
 1665              	.LVL131:
 1666              	.L113:
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1667              		.loc 1 1833 0
 1668 004e 0020     		movs	r0, #0
 1669 0050 A4F85E00 		strh	r0, [r4, #94]	@ movhi
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1670              		.loc 1 1836 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 101


 1671 0054 2368     		ldr	r3, [r4]
 1672 0056 0F22     		movs	r2, #15
 1673 0058 1A62     		str	r2, [r3, #32]
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1674              		.loc 1 1839 0
 1675 005a 2268     		ldr	r2, [r4]
 1676 005c 9369     		ldr	r3, [r2, #24]
 1677 005e 43F00803 		orr	r3, r3, #8
 1678 0062 9361     		str	r3, [r2, #24]
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1679              		.loc 1 1842 0
 1680 0064 2023     		movs	r3, #32
 1681 0066 C4F88430 		str	r3, [r4, #132]
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1682              		.loc 1 1845 0
 1683 006a 10BD     		pop	{r4, pc}
 1684              	.LVL132:
 1685              	.L117:
 1686              		.align	2
 1687              	.L116:
 1688 006c FEFFFFEF 		.word	-268435458
 1689              		.cfi_endproc
 1690              	.LFE159:
 1692              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1693              		.align	2
 1694              		.weak	HAL_UART_TxCpltCallback
 1695              		.thumb
 1696              		.thumb_func
 1698              	HAL_UART_TxCpltCallback:
 1699              	.LFB164:
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1700              		.loc 1 2412 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705              	.LVL133:
 1706 0000 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE164:
 1710 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1711              		.align	2
 1712              		.thumb
 1713              		.thumb_func
 1715              	UART_DMATransmitCplt:
 1716              	.LFB189:
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1717              		.loc 1 3336 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              	.LVL134:
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1722              		.loc 1 3336 0
 1723 0000 08B5     		push	{r3, lr}
 1724              	.LCFI12:
 1725              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 102


 1726              		.cfi_offset 3, -8
 1727              		.cfi_offset 14, -4
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1728              		.loc 1 3337 0
 1729 0002 836B     		ldr	r3, [r0, #56]
 1730              	.LVL135:
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1731              		.loc 1 3340 0
 1732 0004 C269     		ldr	r2, [r0, #28]
 1733 0006 B2F5807F 		cmp	r2, #256
 1734 000a 0DD0     		beq	.L120
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1735              		.loc 1 3342 0
 1736 000c 0022     		movs	r2, #0
 1737 000e A3F85620 		strh	r2, [r3, #86]	@ movhi
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1738              		.loc 1 3346 0
 1739 0012 1968     		ldr	r1, [r3]
 1740 0014 8A68     		ldr	r2, [r1, #8]
 1741 0016 22F08002 		bic	r2, r2, #128
 1742 001a 8A60     		str	r2, [r1, #8]
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1743              		.loc 1 3349 0
 1744 001c 1A68     		ldr	r2, [r3]
 1745 001e 1368     		ldr	r3, [r2]
 1746              	.LVL136:
 1747 0020 43F04003 		orr	r3, r3, #64
 1748 0024 1360     		str	r3, [r2]
 1749 0026 08BD     		pop	{r3, pc}
 1750              	.LVL137:
 1751              	.L120:
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1752              		.loc 1 3359 0
 1753 0028 1846     		mov	r0, r3
 1754              	.LVL138:
 1755 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1756              	.LVL139:
 1757 002e 08BD     		pop	{r3, pc}
 1758              		.cfi_endproc
 1759              	.LFE189:
 1761              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1762              		.align	2
 1763              		.thumb
 1764              		.thumb_func
 1766              	UART_EndTransmit_IT:
 1767              	.LFB203:
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 103


3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1768              		.loc 1 3816 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 0
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772              	.LVL140:
 1773 0000 08B5     		push	{r3, lr}
 1774              	.LCFI13:
 1775              		.cfi_def_cfa_offset 8
 1776              		.cfi_offset 3, -8
 1777              		.cfi_offset 14, -4
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1778              		.loc 1 3818 0
 1779 0002 0168     		ldr	r1, [r0]
 1780 0004 0A68     		ldr	r2, [r1]
 1781 0006 22F04002 		bic	r2, r2, #64
 1782 000a 0A60     		str	r2, [r1]
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1783              		.loc 1 3821 0
 1784 000c 2022     		movs	r2, #32
 1785 000e C0F88020 		str	r2, [r0, #128]
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 1786              		.loc 1 3824 0
 1787 0012 0022     		movs	r2, #0
 1788 0014 0267     		str	r2, [r0, #112]
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1789              		.loc 1 3831 0
 1790 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1791              	.LVL141:
 1792 001a 08BD     		pop	{r3, pc}
 1793              		.cfi_endproc
 1794              	.LFE203:
 1796              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1797              		.align	2
 1798              		.weak	HAL_UART_TxHalfCpltCallback
 1799              		.thumb
 1800              		.thumb_func
 1802              	HAL_UART_TxHalfCpltCallback:
 1803              	.LFB165:
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1804              		.loc 1 2427 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 104


 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 1808              		@ link register save eliminated.
 1809              	.LVL142:
 1810 0000 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE165:
 1814 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1815              		.align	2
 1816              		.thumb
 1817              		.thumb_func
 1819              	UART_DMATxHalfCplt:
 1820              	.LFB190:
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1821              		.loc 1 3370 0
 1822              		.cfi_startproc
 1823              		@ args = 0, pretend = 0, frame = 0
 1824              		@ frame_needed = 0, uses_anonymous_args = 0
 1825              	.LVL143:
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1826              		.loc 1 3370 0
 1827 0000 08B5     		push	{r3, lr}
 1828              	.LCFI14:
 1829              		.cfi_def_cfa_offset 8
 1830              		.cfi_offset 3, -8
 1831              		.cfi_offset 14, -4
 1832              	.LVL144:
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1833              		.loc 1 3378 0
 1834 0002 806B     		ldr	r0, [r0, #56]
 1835              	.LVL145:
 1836 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1837              	.LVL146:
 1838 0008 08BD     		pop	{r3, pc}
 1839              		.cfi_endproc
 1840              	.LFE190:
 1842 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1843              		.align	2
 1844              		.weak	HAL_UART_RxCpltCallback
 1845              		.thumb
 1846              		.thumb_func
 1848              	HAL_UART_RxCpltCallback:
 1849              	.LFB166:
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1850              		.loc 1 2442 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
 1855              	.LVL147:
 1856 0000 7047     		bx	lr
 1857              		.cfi_endproc
 1858              	.LFE166:
 1860 0002 00BF     		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1861              		.align	2
 1862              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 105


 1863              		.thumb_func
 1865              	UART_RxISR_8BIT:
 1866              	.LFB204:
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1867              		.loc 1 3841 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              	.LVL148:
 1872              		.loc 1 3841 0
 1873 0000 08B5     		push	{r3, lr}
 1874              	.LCFI15:
 1875              		.cfi_def_cfa_offset 8
 1876              		.cfi_offset 3, -8
 1877              		.cfi_offset 14, -4
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1878              		.loc 1 3842 0
 1879 0002 B0F86020 		ldrh	r2, [r0, #96]
 1880              	.LVL149:
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1881              		.loc 1 3846 0
 1882 0006 D0F88430 		ldr	r3, [r0, #132]
 1883 000a 222B     		cmp	r3, #34
 1884 000c 25D1     		bne	.L130
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1885              		.loc 1 3848 0
 1886 000e 0368     		ldr	r3, [r0]
 1887 0010 5B6A     		ldr	r3, [r3, #36]
 1888              	.LVL150:
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1889              		.loc 1 3849 0
 1890 0012 816D     		ldr	r1, [r0, #88]
 1891 0014 D2B2     		uxtb	r2, r2
 1892              	.LVL151:
 1893 0016 1A40     		ands	r2, r2, r3
 1894 0018 0A70     		strb	r2, [r1]
 1895              	.LVL152:
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1896              		.loc 1 3850 0
 1897 001a 836D     		ldr	r3, [r0, #88]
 1898              	.LVL153:
 1899 001c 0133     		adds	r3, r3, #1
 1900 001e 8365     		str	r3, [r0, #88]
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 106


 1901              		.loc 1 3851 0
 1902 0020 B0F85E30 		ldrh	r3, [r0, #94]
 1903 0024 9BB2     		uxth	r3, r3
 1904 0026 013B     		subs	r3, r3, #1
 1905 0028 9BB2     		uxth	r3, r3
 1906 002a A0F85E30 		strh	r3, [r0, #94]	@ movhi
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1907              		.loc 1 3853 0
 1908 002e B0F85E30 		ldrh	r3, [r0, #94]
 1909 0032 9BB2     		uxth	r3, r3
 1910 0034 B3B9     		cbnz	r3, .L129
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 1911              		.loc 1 3856 0
 1912 0036 0268     		ldr	r2, [r0]
 1913 0038 1368     		ldr	r3, [r2]
 1914 003a 23F49073 		bic	r3, r3, #288
 1915 003e 1360     		str	r3, [r2]
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1916              		.loc 1 3859 0
 1917 0040 0268     		ldr	r2, [r0]
 1918 0042 9368     		ldr	r3, [r2, #8]
 1919 0044 23F00103 		bic	r3, r3, #1
 1920 0048 9360     		str	r3, [r2, #8]
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1921              		.loc 1 3862 0
 1922 004a 2023     		movs	r3, #32
 1923 004c C0F88430 		str	r3, [r0, #132]
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 1924              		.loc 1 3865 0
 1925 0050 0023     		movs	r3, #0
 1926 0052 C366     		str	r3, [r0, #108]
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1927              		.loc 1 3872 0
 1928 0054 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1929              	.LVL154:
 1930 0058 08BD     		pop	{r3, pc}
 1931              	.LVL155:
 1932              	.L130:
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 107


3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1933              		.loc 1 3879 0
 1934 005a 0268     		ldr	r2, [r0]
 1935              	.LVL156:
 1936 005c 9369     		ldr	r3, [r2, #24]
 1937 005e 43F00803 		orr	r3, r3, #8
 1938 0062 9361     		str	r3, [r2, #24]
 1939              	.LVL157:
 1940              	.L129:
 1941 0064 08BD     		pop	{r3, pc}
 1942              		.cfi_endproc
 1943              	.LFE204:
 1945 0066 00BF     		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1946              		.align	2
 1947              		.thumb
 1948              		.thumb_func
 1950              	UART_RxISR_16BIT:
 1951              	.LFB205:
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1952              		.loc 1 3891 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 1956              	.LVL158:
 1957 0000 08B5     		push	{r3, lr}
 1958              	.LCFI16:
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 3, -8
 1961              		.cfi_offset 14, -4
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1962              		.loc 1 3893 0
 1963 0002 B0F86020 		ldrh	r2, [r0, #96]
 1964              	.LVL159:
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1965              		.loc 1 3897 0
 1966 0006 D0F88430 		ldr	r3, [r0, #132]
 1967 000a 222B     		cmp	r3, #34
 1968 000c 24D1     		bne	.L134
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 108


 1969              		.loc 1 3899 0
 1970 000e 0368     		ldr	r3, [r0]
 1971 0010 596A     		ldr	r1, [r3, #36]
 1972              	.LVL160:
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1973              		.loc 1 3900 0
 1974 0012 836D     		ldr	r3, [r0, #88]
 1975              	.LVL161:
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1976              		.loc 1 3901 0
 1977 0014 0A40     		ands	r2, r2, r1
 1978              	.LVL162:
 1979 0016 1A80     		strh	r2, [r3]	@ movhi
 1980              	.LVL163:
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 1981              		.loc 1 3902 0
 1982 0018 836D     		ldr	r3, [r0, #88]
 1983              	.LVL164:
 1984 001a 0233     		adds	r3, r3, #2
 1985 001c 8365     		str	r3, [r0, #88]
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 1986              		.loc 1 3903 0
 1987 001e B0F85E30 		ldrh	r3, [r0, #94]
 1988 0022 9BB2     		uxth	r3, r3
 1989 0024 013B     		subs	r3, r3, #1
 1990 0026 9BB2     		uxth	r3, r3
 1991 0028 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1992              		.loc 1 3905 0
 1993 002c B0F85E30 		ldrh	r3, [r0, #94]
 1994 0030 9BB2     		uxth	r3, r3
 1995 0032 B3B9     		cbnz	r3, .L133
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 1996              		.loc 1 3908 0
 1997 0034 0268     		ldr	r2, [r0]
 1998 0036 1368     		ldr	r3, [r2]
 1999 0038 23F49073 		bic	r3, r3, #288
 2000 003c 1360     		str	r3, [r2]
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2001              		.loc 1 3911 0
 2002 003e 0268     		ldr	r2, [r0]
 2003 0040 9368     		ldr	r3, [r2, #8]
 2004 0042 23F00103 		bic	r3, r3, #1
 2005 0046 9360     		str	r3, [r2, #8]
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 2006              		.loc 1 3914 0
 2007 0048 2023     		movs	r3, #32
 2008 004a C0F88430 		str	r3, [r0, #132]
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 109


3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 2009              		.loc 1 3917 0
 2010 004e 0023     		movs	r3, #0
 2011 0050 C366     		str	r3, [r0, #108]
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 2012              		.loc 1 3924 0
 2013 0052 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2014              	.LVL165:
 2015 0056 08BD     		pop	{r3, pc}
 2016              	.LVL166:
 2017              	.L134:
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2018              		.loc 1 3931 0
 2019 0058 0268     		ldr	r2, [r0]
 2020              	.LVL167:
 2021 005a 9369     		ldr	r3, [r2, #24]
 2022 005c 43F00803 		orr	r3, r3, #8
 2023 0060 9361     		str	r3, [r2, #24]
 2024              	.LVL168:
 2025              	.L133:
 2026 0062 08BD     		pop	{r3, pc}
 2027              		.cfi_endproc
 2028              	.LFE205:
 2030              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 2031              		.align	2
 2032              		.thumb
 2033              		.thumb_func
 2035              	UART_RxISR_8BIT_FIFOEN:
 2036              	.LFB206:
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2037              		.loc 1 3943 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 110


 2041              	.LVL169:
 2042 0000 70B5     		push	{r4, r5, r6, lr}
 2043              	.LCFI17:
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 4, -16
 2046              		.cfi_offset 5, -12
 2047              		.cfi_offset 6, -8
 2048              		.cfi_offset 14, -4
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2049              		.loc 1 3944 0
 2050 0002 B0F86060 		ldrh	r6, [r0, #96]
 2051              	.LVL170:
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t   nb_rx_data;
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2052              		.loc 1 3950 0
 2053 0006 D0F88430 		ldr	r3, [r0, #132]
 2054 000a 222B     		cmp	r3, #34
 2055 000c 42D1     		bne	.L138
 2056 000e 0446     		mov	r4, r0
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 2057              		.loc 1 3952 0
 2058 0010 B0F86850 		ldrh	r5, [r0, #104]
 2059              	.LVL171:
 2060 0014 27E0     		b	.L139
 2061              	.LVL172:
 2062              	.L141:
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 2063              		.loc 1 3954 0
 2064 0016 2368     		ldr	r3, [r4]
 2065 0018 5B6A     		ldr	r3, [r3, #36]
 2066              	.LVL173:
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2067              		.loc 1 3955 0
 2068 001a A26D     		ldr	r2, [r4, #88]
 2069 001c F1B2     		uxtb	r1, r6
 2070 001e 0B40     		ands	r3, r3, r1
 2071              	.LVL174:
 2072 0020 1370     		strb	r3, [r2]
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr++;
 2073              		.loc 1 3956 0
 2074 0022 A36D     		ldr	r3, [r4, #88]
 2075 0024 0133     		adds	r3, r3, #1
 2076 0026 A365     		str	r3, [r4, #88]
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 2077              		.loc 1 3957 0
 2078 0028 B4F85E30 		ldrh	r3, [r4, #94]
 2079 002c 9BB2     		uxth	r3, r3
 2080 002e 013B     		subs	r3, r3, #1
 2081 0030 9BB2     		uxth	r3, r3
 2082 0032 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 111


3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 2083              		.loc 1 3959 0
 2084 0036 B4F85E30 		ldrh	r3, [r4, #94]
 2085 003a 9BB2     		uxth	r3, r3
 2086 003c 8BB9     		cbnz	r3, .L140
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2087              		.loc 1 3962 0
 2088 003e 2268     		ldr	r2, [r4]
 2089 0040 1368     		ldr	r3, [r2]
 2090 0042 23F48073 		bic	r3, r3, #256
 2091 0046 1360     		str	r3, [r2]
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 2092              		.loc 1 3965 0
 2093 0048 2268     		ldr	r2, [r4]
 2094 004a 9168     		ldr	r1, [r2, #8]
 2095 004c 144B     		ldr	r3, .L144
 2096 004e 0B40     		ands	r3, r3, r1
 2097 0050 9360     		str	r3, [r2, #8]
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2098              		.loc 1 3968 0
 2099 0052 2023     		movs	r3, #32
 2100 0054 C4F88430 		str	r3, [r4, #132]
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 2101              		.loc 1 3971 0
 2102 0058 0023     		movs	r3, #0
 2103 005a E366     		str	r3, [r4, #108]
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 2104              		.loc 1 3978 0
 2105 005c 2046     		mov	r0, r4
 2106 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2107              	.LVL175:
 2108              	.L140:
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2109              		.loc 1 3952 0 discriminator 2
 2110 0062 013D     		subs	r5, r5, #1
 2111              	.LVL176:
 2112 0064 ADB2     		uxth	r5, r5
 2113              	.LVL177:
 2114              	.L139:
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2115              		.loc 1 3952 0 is_stmt 0 discriminator 1
 2116 0066 002D     		cmp	r5, #0
 2117 0068 D5D1     		bne	.L141
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 112


3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 2118              		.loc 1 3987 0 is_stmt 1
 2119 006a B4F85E30 		ldrh	r3, [r4, #94]
 2120 006e 9BB2     		uxth	r3, r3
 2121              	.LVL178:
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2122              		.loc 1 3988 0
 2123 0070 ABB1     		cbz	r3, .L137
 2124              		.loc 1 3988 0 is_stmt 0 discriminator 1
 2125 0072 B4F86820 		ldrh	r2, [r4, #104]
 2126 0076 9342     		cmp	r3, r2
 2127 0078 11D2     		bcs	.L137
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 2128              		.loc 1 3991 0 is_stmt 1
 2129 007a 2268     		ldr	r2, [r4]
 2130 007c 9368     		ldr	r3, [r2, #8]
 2131              	.LVL179:
 2132 007e 23F08053 		bic	r3, r3, #268435456
 2133 0082 9360     		str	r3, [r2, #8]
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 2134              		.loc 1 3994 0
 2135 0084 074B     		ldr	r3, .L144+4
 2136 0086 E366     		str	r3, [r4, #108]
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 2137              		.loc 1 3997 0
 2138 0088 2268     		ldr	r2, [r4]
 2139 008a 1368     		ldr	r3, [r2]
 2140 008c 43F02003 		orr	r3, r3, #32
 2141 0090 1360     		str	r3, [r2]
 2142 0092 70BD     		pop	{r4, r5, r6, pc}
 2143              	.LVL180:
 2144              	.L138:
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2145              		.loc 1 4003 0
 2146 0094 0268     		ldr	r2, [r0]
 2147 0096 9369     		ldr	r3, [r2, #24]
 2148 0098 43F00803 		orr	r3, r3, #8
 2149 009c 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 113


 2150              	.LVL181:
 2151              	.L137:
 2152 009e 70BD     		pop	{r4, r5, r6, pc}
 2153              	.LVL182:
 2154              	.L145:
 2155              		.align	2
 2156              	.L144:
 2157 00a0 FEFFFFEF 		.word	-268435458
 2158 00a4 00000000 		.word	UART_RxISR_8BIT
 2159              		.cfi_endproc
 2160              	.LFE206:
 2162              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 2163              		.align	2
 2164              		.thumb
 2165              		.thumb_func
 2167              	UART_RxISR_16BIT_FIFOEN:
 2168              	.LFB207:
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2169              		.loc 1 4015 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              	.LVL183:
 2174 0000 70B5     		push	{r4, r5, r6, lr}
 2175              	.LCFI18:
 2176              		.cfi_def_cfa_offset 16
 2177              		.cfi_offset 4, -16
 2178              		.cfi_offset 5, -12
 2179              		.cfi_offset 6, -8
 2180              		.cfi_offset 14, -4
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2181              		.loc 1 4017 0
 2182 0002 B0F86060 		ldrh	r6, [r0, #96]
 2183              	.LVL184:
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t   nb_rx_data;
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2184              		.loc 1 4023 0
 2185 0006 D0F88430 		ldr	r3, [r0, #132]
 2186 000a 222B     		cmp	r3, #34
 2187 000c 41D1     		bne	.L147
 2188 000e 0446     		mov	r4, r0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 114


4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 2189              		.loc 1 4025 0
 2190 0010 B0F86850 		ldrh	r5, [r0, #104]
 2191              	.LVL185:
 2192 0014 26E0     		b	.L148
 2193              	.LVL186:
 2194              	.L150:
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 2195              		.loc 1 4027 0
 2196 0016 2368     		ldr	r3, [r4]
 2197 0018 5B6A     		ldr	r3, [r3, #36]
 2198              	.LVL187:
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 2199              		.loc 1 4028 0
 2200 001a A26D     		ldr	r2, [r4, #88]
 2201              	.LVL188:
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 2202              		.loc 1 4029 0
 2203 001c 3340     		ands	r3, r3, r6
 2204              	.LVL189:
 2205 001e 1380     		strh	r3, [r2]	@ movhi
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 2206              		.loc 1 4030 0
 2207 0020 A36D     		ldr	r3, [r4, #88]
 2208 0022 0233     		adds	r3, r3, #2
 2209 0024 A365     		str	r3, [r4, #88]
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 2210              		.loc 1 4031 0
 2211 0026 B4F85E30 		ldrh	r3, [r4, #94]
 2212 002a 9BB2     		uxth	r3, r3
 2213 002c 013B     		subs	r3, r3, #1
 2214 002e 9BB2     		uxth	r3, r3
 2215 0030 A4F85E30 		strh	r3, [r4, #94]	@ movhi
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 2216              		.loc 1 4033 0
 2217 0034 B4F85E30 		ldrh	r3, [r4, #94]
 2218 0038 9BB2     		uxth	r3, r3
 2219 003a 8BB9     		cbnz	r3, .L149
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2220              		.loc 1 4036 0
 2221 003c 2268     		ldr	r2, [r4]
 2222              	.LVL190:
 2223 003e 1368     		ldr	r3, [r2]
 2224 0040 23F48073 		bic	r3, r3, #256
 2225 0044 1360     		str	r3, [r2]
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 2226              		.loc 1 4039 0
 2227 0046 2268     		ldr	r2, [r4]
 2228 0048 9168     		ldr	r1, [r2, #8]
 2229 004a 154B     		ldr	r3, .L153
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 115


 2230 004c 0B40     		ands	r3, r3, r1
 2231 004e 9360     		str	r3, [r2, #8]
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2232              		.loc 1 4042 0
 2233 0050 2023     		movs	r3, #32
 2234 0052 C4F88430 		str	r3, [r4, #132]
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 2235              		.loc 1 4045 0
 2236 0056 0023     		movs	r3, #0
 2237 0058 E366     		str	r3, [r4, #108]
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 2238              		.loc 1 4052 0
 2239 005a 2046     		mov	r0, r4
 2240 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2241              	.LVL191:
 2242              	.L149:
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2243              		.loc 1 4025 0 discriminator 2
 2244 0060 013D     		subs	r5, r5, #1
 2245              	.LVL192:
 2246 0062 ADB2     		uxth	r5, r5
 2247              	.LVL193:
 2248              	.L148:
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2249              		.loc 1 4025 0 is_stmt 0 discriminator 1
 2250 0064 002D     		cmp	r5, #0
 2251 0066 D6D1     		bne	.L150
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 2252              		.loc 1 4061 0 is_stmt 1
 2253 0068 B4F85E30 		ldrh	r3, [r4, #94]
 2254 006c 9BB2     		uxth	r3, r3
 2255              	.LVL194:
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2256              		.loc 1 4062 0
 2257 006e ABB1     		cbz	r3, .L146
 2258              		.loc 1 4062 0 is_stmt 0 discriminator 1
 2259 0070 B4F86820 		ldrh	r2, [r4, #104]
 2260 0074 9342     		cmp	r3, r2
 2261 0076 11D2     		bcs	.L146
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 116


4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 2262              		.loc 1 4065 0 is_stmt 1
 2263 0078 2268     		ldr	r2, [r4]
 2264 007a 9368     		ldr	r3, [r2, #8]
 2265              	.LVL195:
 2266 007c 23F08053 		bic	r3, r3, #268435456
 2267 0080 9360     		str	r3, [r2, #8]
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 2268              		.loc 1 4068 0
 2269 0082 084B     		ldr	r3, .L153+4
 2270 0084 E366     		str	r3, [r4, #108]
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 2271              		.loc 1 4071 0
 2272 0086 2268     		ldr	r2, [r4]
 2273 0088 1368     		ldr	r3, [r2]
 2274 008a 43F02003 		orr	r3, r3, #32
 2275 008e 1360     		str	r3, [r2]
 2276 0090 70BD     		pop	{r4, r5, r6, pc}
 2277              	.LVL196:
 2278              	.L147:
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2279              		.loc 1 4077 0
 2280 0092 0268     		ldr	r2, [r0]
 2281 0094 9369     		ldr	r3, [r2, #24]
 2282 0096 43F00803 		orr	r3, r3, #8
 2283 009a 9361     		str	r3, [r2, #24]
 2284              	.LVL197:
 2285              	.L146:
 2286 009c 70BD     		pop	{r4, r5, r6, pc}
 2287              	.LVL198:
 2288              	.L154:
 2289 009e 00BF     		.align	2
 2290              	.L153:
 2291 00a0 FEFFFFEF 		.word	-268435458
 2292 00a4 00000000 		.word	UART_RxISR_16BIT
 2293              		.cfi_endproc
 2294              	.LFE207:
 2296              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2297              		.align	2
 2298              		.thumb
 2299              		.thumb_func
 2301              	UART_DMAReceiveCplt:
 2302              	.LFB191:
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2303              		.loc 1 3388 0
 2304              		.cfi_startproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 117


 2305              		@ args = 0, pretend = 0, frame = 0
 2306              		@ frame_needed = 0, uses_anonymous_args = 0
 2307              	.LVL199:
 2308 0000 08B5     		push	{r3, lr}
 2309              	.LCFI19:
 2310              		.cfi_def_cfa_offset 8
 2311              		.cfi_offset 3, -8
 2312              		.cfi_offset 14, -4
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2313              		.loc 1 3389 0
 2314 0002 836B     		ldr	r3, [r0, #56]
 2315              	.LVL200:
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2316              		.loc 1 3392 0
 2317 0004 C269     		ldr	r2, [r0, #28]
 2318 0006 B2F5807F 		cmp	r2, #256
 2319 000a 14D0     		beq	.L156
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2320              		.loc 1 3394 0
 2321 000c 0022     		movs	r2, #0
 2322 000e A3F85E20 		strh	r2, [r3, #94]	@ movhi
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2323              		.loc 1 3397 0
 2324 0012 1968     		ldr	r1, [r3]
 2325 0014 0A68     		ldr	r2, [r1]
 2326 0016 22F48072 		bic	r2, r2, #256
 2327 001a 0A60     		str	r2, [r1]
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2328              		.loc 1 3398 0
 2329 001c 1968     		ldr	r1, [r3]
 2330 001e 8A68     		ldr	r2, [r1, #8]
 2331 0020 22F00102 		bic	r2, r2, #1
 2332 0024 8A60     		str	r2, [r1, #8]
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2333              		.loc 1 3402 0
 2334 0026 1968     		ldr	r1, [r3]
 2335 0028 8A68     		ldr	r2, [r1, #8]
 2336 002a 22F04002 		bic	r2, r2, #64
 2337 002e 8A60     		str	r2, [r1, #8]
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2338              		.loc 1 3405 0
 2339 0030 2022     		movs	r2, #32
 2340 0032 C3F88420 		str	r2, [r3, #132]
 2341              	.L156:
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2342              		.loc 1 3413 0
 2343 0036 1846     		mov	r0, r3
 2344              	.LVL201:
 2345 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2346              	.LVL202:
 2347 003c 08BD     		pop	{r3, pc}
 2348              		.cfi_endproc
 2349              	.LFE191:
 2351 003e 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2352              		.align	2
 2353              		.weak	HAL_UART_RxHalfCpltCallback
 2354              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 118


 2355              		.thumb_func
 2357              	HAL_UART_RxHalfCpltCallback:
 2358              	.LFB167:
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2359              		.loc 1 2457 0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 0
 2362              		@ frame_needed = 0, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
 2364              	.LVL203:
 2365 0000 7047     		bx	lr
 2366              		.cfi_endproc
 2367              	.LFE167:
 2369 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2370              		.align	2
 2371              		.thumb
 2372              		.thumb_func
 2374              	UART_DMARxHalfCplt:
 2375              	.LFB192:
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2376              		.loc 1 3423 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 0
 2379              		@ frame_needed = 0, uses_anonymous_args = 0
 2380              	.LVL204:
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2381              		.loc 1 3423 0
 2382 0000 08B5     		push	{r3, lr}
 2383              	.LCFI20:
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 3, -8
 2386              		.cfi_offset 14, -4
 2387              	.LVL205:
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2388              		.loc 1 3431 0
 2389 0002 806B     		ldr	r0, [r0, #56]
 2390              	.LVL206:
 2391 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2392              	.LVL207:
 2393 0008 08BD     		pop	{r3, pc}
 2394              		.cfi_endproc
 2395              	.LFE192:
 2397 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2398              		.align	2
 2399              		.weak	HAL_UART_ErrorCallback
 2400              		.thumb
 2401              		.thumb_func
 2403              	HAL_UART_ErrorCallback:
 2404              	.LFB168:
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2405              		.loc 1 2472 0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410              	.LVL208:
 2411 0000 7047     		bx	lr
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 119


 2412              		.cfi_endproc
 2413              	.LFE168:
 2415 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2416              		.align	2
 2417              		.thumb
 2418              		.thumb_func
 2420              	UART_DMAError:
 2421              	.LFB193:
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2422              		.loc 1 3441 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              	.LVL209:
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2427              		.loc 1 3441 0
 2428 0000 38B5     		push	{r3, r4, r5, lr}
 2429              	.LCFI21:
 2430              		.cfi_def_cfa_offset 16
 2431              		.cfi_offset 3, -16
 2432              		.cfi_offset 4, -12
 2433              		.cfi_offset 5, -8
 2434              		.cfi_offset 14, -4
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2435              		.loc 1 3442 0
 2436 0002 846B     		ldr	r4, [r0, #56]
 2437              	.LVL210:
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2438              		.loc 1 3444 0
 2439 0004 D4F88020 		ldr	r2, [r4, #128]
 2440              	.LVL211:
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2441              		.loc 1 3445 0
 2442 0008 D4F88450 		ldr	r5, [r4, #132]
 2443              	.LVL212:
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2444              		.loc 1 3448 0
 2445 000c 2368     		ldr	r3, [r4]
 2446 000e 9B68     		ldr	r3, [r3, #8]
 2447 0010 13F0800F 		tst	r3, #128
 2448 0014 07D0     		beq	.L163
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2449              		.loc 1 3448 0 is_stmt 0 discriminator 1
 2450 0016 212A     		cmp	r2, #33
 2451 0018 05D1     		bne	.L163
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2452              		.loc 1 3451 0 is_stmt 1
 2453 001a 0023     		movs	r3, #0
 2454 001c A4F85630 		strh	r3, [r4, #86]	@ movhi
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2455              		.loc 1 3452 0
 2456 0020 2046     		mov	r0, r4
 2457              	.LVL213:
 2458 0022 FFF7FEFF 		bl	UART_EndTxTransfer
 2459              	.LVL214:
 2460              	.L163:
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 120


 2461              		.loc 1 3456 0
 2462 0026 2368     		ldr	r3, [r4]
 2463 0028 9B68     		ldr	r3, [r3, #8]
 2464 002a 13F0400F 		tst	r3, #64
 2465 002e 07D0     		beq	.L164
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2466              		.loc 1 3456 0 is_stmt 0 discriminator 1
 2467 0030 222D     		cmp	r5, #34
 2468 0032 05D1     		bne	.L164
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2469              		.loc 1 3459 0 is_stmt 1
 2470 0034 0023     		movs	r3, #0
 2471 0036 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2472              		.loc 1 3460 0
 2473 003a 2046     		mov	r0, r4
 2474 003c FFF7FEFF 		bl	UART_EndRxTransfer
 2475              	.LVL215:
 2476              	.L164:
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2477              		.loc 1 3463 0
 2478 0040 D4F88830 		ldr	r3, [r4, #136]
 2479 0044 43F01003 		orr	r3, r3, #16
 2480 0048 C4F88830 		str	r3, [r4, #136]
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2481              		.loc 1 3470 0
 2482 004c 2046     		mov	r0, r4
 2483 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2484              	.LVL216:
 2485 0052 38BD     		pop	{r3, r4, r5, pc}
 2486              		.cfi_endproc
 2487              	.LFE193:
 2489              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2490              		.align	2
 2491              		.global	HAL_UART_IRQHandler
 2492              		.thumb
 2493              		.thumb_func
 2495              	HAL_UART_IRQHandler:
 2496              	.LFB163:
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2497              		.loc 1 2180 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 0
 2500              		@ frame_needed = 0, uses_anonymous_args = 0
 2501              	.LVL217:
 2502 0000 70B5     		push	{r4, r5, r6, lr}
 2503              	.LCFI22:
 2504              		.cfi_def_cfa_offset 16
 2505              		.cfi_offset 4, -16
 2506              		.cfi_offset 5, -12
 2507              		.cfi_offset 6, -8
 2508              		.cfi_offset 14, -4
 2509 0002 0446     		mov	r4, r0
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2510              		.loc 1 2181 0
 2511 0004 0168     		ldr	r1, [r0]
 2512 0006 CB69     		ldr	r3, [r1, #28]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 121


 2513              	.LVL218:
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2514              		.loc 1 2182 0
 2515 0008 0D68     		ldr	r5, [r1]
 2516              	.LVL219:
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2517              		.loc 1 2183 0
 2518 000a 8868     		ldr	r0, [r1, #8]
 2519              	.LVL220:
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
 2520              		.loc 1 2189 0
 2521 000c 40F60F02 		movw	r2, #2063
 2522              	.LVL221:
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2523              		.loc 1 2190 0
 2524 0010 1A40     		ands	r2, r3, r2
 2525              	.LVL222:
 2526 0012 0FD1     		bne	.L167
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2527              		.loc 1 2193 0
 2528 0014 13F0200F 		tst	r3, #32
 2529 0018 0CD0     		beq	.L167
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2530              		.loc 1 2194 0
 2531 001a 15F0200F 		tst	r5, #32
 2532 001e 02D1     		bne	.L168
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2533              		.loc 1 2195 0
 2534 0020 10F0805F 		tst	r0, #268435456
 2535 0024 06D0     		beq	.L167
 2536              	.L168:
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2537              		.loc 1 2197 0
 2538 0026 E36E     		ldr	r3, [r4, #108]
 2539              	.LVL223:
 2540 0028 002B     		cmp	r3, #0
 2541 002a 00F0D180 		beq	.L166
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2542              		.loc 1 2199 0
 2543 002e 2046     		mov	r0, r4
 2544              	.LVL224:
 2545 0030 9847     		blx	r3
 2546              	.LVL225:
 2547 0032 70BD     		pop	{r4, r5, r6, pc}
 2548              	.LVL226:
 2549              	.L167:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 2550              		.loc 1 2206 0
 2551 0034 002A     		cmp	r2, #0
 2552 0036 00F09480 		beq	.L170
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 2553              		.loc 1 2207 0
 2554 003a 664A     		ldr	r2, .L190
 2555              	.LVL227:
 2556 003c 0240     		ands	r2, r0, r2
 2557 003e 03D1     		bne	.L171
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 122


 2558              		.loc 1 2208 0
 2559 0040 654E     		ldr	r6, .L190+4
 2560 0042 3542     		tst	r5, r6
 2561 0044 00F08D80 		beq	.L170
 2562              	.L171:
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2563              		.loc 1 2211 0
 2564 0048 13F0010F 		tst	r3, #1
 2565 004c 09D0     		beq	.L172
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2566              		.loc 1 2211 0 is_stmt 0 discriminator 1
 2567 004e 15F4807F 		tst	r5, #256
 2568 0052 06D0     		beq	.L172
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2569              		.loc 1 2213 0 is_stmt 1
 2570 0054 0126     		movs	r6, #1
 2571 0056 0E62     		str	r6, [r1, #32]
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2572              		.loc 1 2215 0
 2573 0058 D4F88810 		ldr	r1, [r4, #136]
 2574 005c 3143     		orrs	r1, r1, r6
 2575 005e C4F88810 		str	r1, [r4, #136]
 2576              	.L172:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2577              		.loc 1 2219 0
 2578 0062 13F0020F 		tst	r3, #2
 2579 0066 0BD0     		beq	.L173
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2580              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2581 0068 10F0010F 		tst	r0, #1
 2582 006c 08D0     		beq	.L173
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2583              		.loc 1 2221 0 is_stmt 1
 2584 006e 2168     		ldr	r1, [r4]
 2585 0070 0226     		movs	r6, #2
 2586 0072 0E62     		str	r6, [r1, #32]
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2587              		.loc 1 2223 0
 2588 0074 D4F88810 		ldr	r1, [r4, #136]
 2589 0078 41F00401 		orr	r1, r1, #4
 2590 007c C4F88810 		str	r1, [r4, #136]
 2591              	.L173:
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2592              		.loc 1 2227 0
 2593 0080 13F0040F 		tst	r3, #4
 2594 0084 0BD0     		beq	.L174
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2595              		.loc 1 2227 0 is_stmt 0 discriminator 1
 2596 0086 10F0010F 		tst	r0, #1
 2597 008a 08D0     		beq	.L174
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2598              		.loc 1 2229 0 is_stmt 1
 2599 008c 2168     		ldr	r1, [r4]
 2600 008e 0426     		movs	r6, #4
 2601 0090 0E62     		str	r6, [r1, #32]
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2602              		.loc 1 2231 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 123


 2603 0092 D4F88810 		ldr	r1, [r4, #136]
 2604 0096 41F00201 		orr	r1, r1, #2
 2605 009a C4F88810 		str	r1, [r4, #136]
 2606              	.L174:
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 2607              		.loc 1 2235 0
 2608 009e 13F0080F 		tst	r3, #8
 2609 00a2 0BD0     		beq	.L175
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2610              		.loc 1 2236 0
 2611 00a4 15F0200F 		tst	r5, #32
 2612 00a8 00D1     		bne	.L176
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2613              		.loc 1 2236 0 is_stmt 0 discriminator 1
 2614 00aa 3AB1     		cbz	r2, .L175
 2615              	.L176:
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2616              		.loc 1 2239 0 is_stmt 1
 2617 00ac 2268     		ldr	r2, [r4]
 2618 00ae 0821     		movs	r1, #8
 2619 00b0 1162     		str	r1, [r2, #32]
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2620              		.loc 1 2241 0
 2621 00b2 D4F88820 		ldr	r2, [r4, #136]
 2622 00b6 0A43     		orrs	r2, r2, r1
 2623 00b8 C4F88820 		str	r2, [r4, #136]
 2624              	.L175:
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2625              		.loc 1 2245 0
 2626 00bc 13F4006F 		tst	r3, #2048
 2627 00c0 0CD0     		beq	.L177
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2628              		.loc 1 2245 0 is_stmt 0 discriminator 1
 2629 00c2 15F0806F 		tst	r5, #67108864
 2630 00c6 09D0     		beq	.L177
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2631              		.loc 1 2247 0 is_stmt 1
 2632 00c8 2268     		ldr	r2, [r4]
 2633 00ca 4FF40061 		mov	r1, #2048
 2634 00ce 1162     		str	r1, [r2, #32]
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2635              		.loc 1 2249 0
 2636 00d0 D4F88820 		ldr	r2, [r4, #136]
 2637 00d4 42F02002 		orr	r2, r2, #32
 2638 00d8 C4F88820 		str	r2, [r4, #136]
 2639              	.L177:
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2640              		.loc 1 2253 0
 2641 00dc D4F88820 		ldr	r2, [r4, #136]
 2642 00e0 002A     		cmp	r2, #0
 2643 00e2 75D0     		beq	.L166
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2644              		.loc 1 2256 0
 2645 00e4 13F0200F 		tst	r3, #32
 2646 00e8 09D0     		beq	.L178
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2647              		.loc 1 2257 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 124


 2648 00ea 15F0200F 		tst	r5, #32
 2649 00ee 02D1     		bne	.L179
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2650              		.loc 1 2258 0
 2651 00f0 10F0805F 		tst	r0, #268435456
 2652 00f4 03D0     		beq	.L178
 2653              	.L179:
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 2654              		.loc 1 2260 0
 2655 00f6 E36E     		ldr	r3, [r4, #108]
 2656              	.LVL228:
 2657 00f8 0BB1     		cbz	r3, .L178
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 2658              		.loc 1 2262 0
 2659 00fa 2046     		mov	r0, r4
 2660              	.LVL229:
 2661 00fc 9847     		blx	r3
 2662              	.LVL230:
 2663              	.L178:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2664              		.loc 1 2271 0
 2665 00fe D4F88820 		ldr	r2, [r4, #136]
 2666              	.LVL231:
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2667              		.loc 1 2272 0
 2668 0102 2368     		ldr	r3, [r4]
 2669 0104 9B68     		ldr	r3, [r3, #8]
 2670 0106 13F0400F 		tst	r3, #64
 2671 010a 02D1     		bne	.L180
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2672              		.loc 1 2272 0 is_stmt 0 discriminator 1
 2673 010c 12F0280F 		tst	r2, #40
 2674 0110 20D0     		beq	.L181
 2675              	.L180:
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2676              		.loc 1 2278 0 is_stmt 1
 2677 0112 2046     		mov	r0, r4
 2678 0114 FFF7FEFF 		bl	UART_EndRxTransfer
 2679              	.LVL232:
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 2680              		.loc 1 2281 0
 2681 0118 2368     		ldr	r3, [r4]
 2682 011a 9A68     		ldr	r2, [r3, #8]
 2683 011c 12F0400F 		tst	r2, #64
 2684 0120 14D0     		beq	.L182
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2685              		.loc 1 2283 0
 2686 0122 9A68     		ldr	r2, [r3, #8]
 2687 0124 22F04002 		bic	r2, r2, #64
 2688 0128 9A60     		str	r2, [r3, #8]
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 2689              		.loc 1 2286 0
 2690 012a A36F     		ldr	r3, [r4, #120]
 2691 012c 53B1     		cbz	r3, .L183
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2692              		.loc 1 2290 0
 2693 012e 2B4A     		ldr	r2, .L190+8
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 125


 2694 0130 1A65     		str	r2, [r3, #80]
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
 2695              		.loc 1 2293 0
 2696 0132 A06F     		ldr	r0, [r4, #120]
 2697 0134 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2698              	.LVL233:
 2699 0138 0028     		cmp	r0, #0
 2700 013a 49D0     		beq	.L166
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 2701              		.loc 1 2296 0
 2702 013c A06F     		ldr	r0, [r4, #120]
 2703 013e 036D     		ldr	r3, [r0, #80]
 2704 0140 9847     		blx	r3
 2705              	.LVL234:
 2706 0142 70BD     		pop	{r4, r5, r6, pc}
 2707              	.LVL235:
 2708              	.L183:
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2709              		.loc 1 2307 0
 2710 0144 2046     		mov	r0, r4
 2711 0146 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2712              	.LVL236:
 2713 014a 70BD     		pop	{r4, r5, r6, pc}
 2714              	.LVL237:
 2715              	.L182:
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2716              		.loc 1 2320 0
 2717 014c 2046     		mov	r0, r4
 2718 014e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2719              	.LVL238:
 2720 0152 70BD     		pop	{r4, r5, r6, pc}
 2721              	.LVL239:
 2722              	.L181:
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2723              		.loc 1 2333 0
 2724 0154 2046     		mov	r0, r4
 2725 0156 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2726              	.LVL240:
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2727              		.loc 1 2335 0
 2728 015a 0023     		movs	r3, #0
 2729 015c C4F88830 		str	r3, [r4, #136]
 2730 0160 70BD     		pop	{r4, r5, r6, pc}
 2731              	.LVL241:
 2732              	.L170:
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2733              		.loc 1 2343 0
 2734 0162 13F4801F 		tst	r3, #1048576
 2735 0166 09D0     		beq	.L184
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2736              		.loc 1 2343 0 is_stmt 0 discriminator 1
 2737 0168 10F4800F 		tst	r0, #4194304
 2738 016c 06D0     		beq	.L184
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2739              		.loc 1 2345 0 is_stmt 1
 2740 016e 4FF48013 		mov	r3, #1048576
 2741              	.LVL242:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 126


 2742 0172 0B62     		str	r3, [r1, #32]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2743              		.loc 1 2355 0
 2744 0174 2046     		mov	r0, r4
 2745              	.LVL243:
 2746 0176 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2747              	.LVL244:
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2748              		.loc 1 2357 0
 2749 017a 70BD     		pop	{r4, r5, r6, pc}
 2750              	.LVL245:
 2751              	.L184:
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 2752              		.loc 1 2361 0
 2753 017c 13F0800F 		tst	r3, #128
 2754 0180 0AD0     		beq	.L185
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 2755              		.loc 1 2362 0
 2756 0182 15F0800F 		tst	r5, #128
 2757 0186 02D1     		bne	.L186
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2758              		.loc 1 2363 0
 2759 0188 10F4000F 		tst	r0, #8388608
 2760 018c 04D0     		beq	.L185
 2761              	.L186:
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2762              		.loc 1 2365 0
 2763 018e 236F     		ldr	r3, [r4, #112]
 2764              	.LVL246:
 2765 0190 F3B1     		cbz	r3, .L166
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2766              		.loc 1 2367 0
 2767 0192 2046     		mov	r0, r4
 2768              	.LVL247:
 2769 0194 9847     		blx	r3
 2770              	.LVL248:
 2771 0196 70BD     		pop	{r4, r5, r6, pc}
 2772              	.LVL249:
 2773              	.L185:
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2774              		.loc 1 2373 0
 2775 0198 13F0400F 		tst	r3, #64
 2776 019c 06D0     		beq	.L187
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2777              		.loc 1 2373 0 is_stmt 0 discriminator 1
 2778 019e 15F0400F 		tst	r5, #64
 2779 01a2 03D0     		beq	.L187
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 2780              		.loc 1 2375 0 is_stmt 1
 2781 01a4 2046     		mov	r0, r4
 2782              	.LVL250:
 2783 01a6 FFF7FEFF 		bl	UART_EndTransmit_IT
 2784              	.LVL251:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2785              		.loc 1 2376 0
 2786 01aa 70BD     		pop	{r4, r5, r6, pc}
 2787              	.LVL252:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 127


 2788              	.L187:
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2789              		.loc 1 2380 0
 2790 01ac 13F4000F 		tst	r3, #8388608
 2791 01b0 06D0     		beq	.L188
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2792              		.loc 1 2380 0 is_stmt 0 discriminator 1
 2793 01b2 15F0804F 		tst	r5, #1073741824
 2794 01b6 03D0     		beq	.L188
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2795              		.loc 1 2387 0 is_stmt 1
 2796 01b8 2046     		mov	r0, r4
 2797              	.LVL253:
 2798 01ba FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 2799              	.LVL254:
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2800              		.loc 1 2389 0
 2801 01be 70BD     		pop	{r4, r5, r6, pc}
 2802              	.LVL255:
 2803              	.L188:
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2804              		.loc 1 2393 0
 2805 01c0 13F0807F 		tst	r3, #16777216
 2806 01c4 04D0     		beq	.L166
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2807              		.loc 1 2393 0 is_stmt 0 discriminator 1
 2808 01c6 002D     		cmp	r5, #0
 2809 01c8 02DA     		bge	.L166
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2810              		.loc 1 2400 0 is_stmt 1
 2811 01ca 2046     		mov	r0, r4
 2812              	.LVL256:
 2813 01cc FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 2814              	.LVL257:
 2815              	.L166:
 2816 01d0 70BD     		pop	{r4, r5, r6, pc}
 2817              	.LVL258:
 2818              	.L191:
 2819 01d2 00BF     		.align	2
 2820              	.L190:
 2821 01d4 01000010 		.word	268435457
 2822 01d8 20010004 		.word	67109152
 2823 01dc 00000000 		.word	UART_DMAAbortOnError
 2824              		.cfi_endproc
 2825              	.LFE163:
 2827              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2828              		.align	2
 2829              		.thumb
 2830              		.thumb_func
 2832              	UART_DMAAbortOnError:
 2833              	.LFB194:
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2834              		.loc 1 3481 0
 2835              		.cfi_startproc
 2836              		@ args = 0, pretend = 0, frame = 0
 2837              		@ frame_needed = 0, uses_anonymous_args = 0
 2838              	.LVL259:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 128


 2839 0000 08B5     		push	{r3, lr}
 2840              	.LCFI23:
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 3, -8
 2843              		.cfi_offset 14, -4
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2844              		.loc 1 3482 0
 2845 0002 806B     		ldr	r0, [r0, #56]
 2846              	.LVL260:
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2847              		.loc 1 3483 0
 2848 0004 0023     		movs	r3, #0
 2849 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2850              		.loc 1 3484 0
 2851 000a A0F85630 		strh	r3, [r0, #86]	@ movhi
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2852              		.loc 1 3491 0
 2853 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2854              	.LVL261:
 2855 0012 08BD     		pop	{r3, pc}
 2856              		.cfi_endproc
 2857              	.LFE194:
 2859              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2860              		.align	2
 2861              		.weak	HAL_UART_AbortCpltCallback
 2862              		.thumb
 2863              		.thumb_func
 2865              	HAL_UART_AbortCpltCallback:
 2866              	.LFB169:
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2867              		.loc 1 2487 0
 2868              		.cfi_startproc
 2869              		@ args = 0, pretend = 0, frame = 0
 2870              		@ frame_needed = 0, uses_anonymous_args = 0
 2871              		@ link register save eliminated.
 2872              	.LVL262:
 2873 0000 7047     		bx	lr
 2874              		.cfi_endproc
 2875              	.LFE169:
 2877 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2878              		.align	2
 2879              		.global	HAL_UART_Abort_IT
 2880              		.thumb
 2881              		.thumb_func
 2883              	HAL_UART_Abort_IT:
 2884              	.LFB160:
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2885              		.loc 1 1862 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              	.LVL263:
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2890              		.loc 1 1862 0
 2891 0000 10B5     		push	{r4, lr}
 2892              	.LCFI24:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 129


 2893              		.cfi_def_cfa_offset 8
 2894              		.cfi_offset 4, -8
 2895              		.cfi_offset 14, -4
 2896 0002 0446     		mov	r4, r0
 2897              	.LVL264:
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 2898              		.loc 1 1866 0
 2899 0004 0268     		ldr	r2, [r0]
 2900 0006 1368     		ldr	r3, [r2]
 2901 0008 23F4F073 		bic	r3, r3, #480
 2902 000c 1360     		str	r3, [r2]
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2903              		.loc 1 1867 0
 2904 000e 0268     		ldr	r2, [r0]
 2905 0010 9168     		ldr	r1, [r2, #8]
 2906 0012 364B     		ldr	r3, .L209
 2907 0014 0B40     		ands	r3, r3, r1
 2908 0016 9360     		str	r3, [r2, #8]
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2909              		.loc 1 1872 0
 2910 0018 436F     		ldr	r3, [r0, #116]
 2911 001a 4BB1     		cbz	r3, .L196
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2912              		.loc 1 1876 0
 2913 001c 0268     		ldr	r2, [r0]
 2914 001e 9268     		ldr	r2, [r2, #8]
 2915 0020 12F0800F 		tst	r2, #128
 2916 0024 02D0     		beq	.L197
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2917              		.loc 1 1878 0
 2918 0026 324A     		ldr	r2, .L209+4
 2919 0028 1A65     		str	r2, [r3, #80]
 2920 002a 01E0     		b	.L196
 2921              	.L197:
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2922              		.loc 1 1882 0
 2923 002c 0022     		movs	r2, #0
 2924 002e 1A65     		str	r2, [r3, #80]
 2925              	.L196:
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2926              		.loc 1 1886 0
 2927 0030 A36F     		ldr	r3, [r4, #120]
 2928 0032 4BB1     		cbz	r3, .L198
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2929              		.loc 1 1890 0
 2930 0034 2268     		ldr	r2, [r4]
 2931 0036 9268     		ldr	r2, [r2, #8]
 2932 0038 12F0400F 		tst	r2, #64
 2933 003c 02D0     		beq	.L199
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2934              		.loc 1 1892 0
 2935 003e 2D4A     		ldr	r2, .L209+8
 2936 0040 1A65     		str	r2, [r3, #80]
 2937 0042 01E0     		b	.L198
 2938              	.L199:
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2939              		.loc 1 1896 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 130


 2940 0044 0022     		movs	r2, #0
 2941 0046 1A65     		str	r2, [r3, #80]
 2942              	.L198:
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2943              		.loc 1 1901 0
 2944 0048 2368     		ldr	r3, [r4]
 2945 004a 9A68     		ldr	r2, [r3, #8]
 2946 004c 12F0800F 		tst	r2, #128
 2947 0050 0DD0     		beq	.L204
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2948              		.loc 1 1904 0
 2949 0052 9A68     		ldr	r2, [r3, #8]
 2950 0054 22F08002 		bic	r2, r2, #128
 2951 0058 9A60     		str	r2, [r3, #8]
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2952              		.loc 1 1907 0
 2953 005a 606F     		ldr	r0, [r4, #116]
 2954              	.LVL265:
 2955 005c 48B1     		cbz	r0, .L205
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2956              		.loc 1 1913 0
 2957 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2958              	.LVL266:
 2959 0062 40B1     		cbz	r0, .L206
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2960              		.loc 1 1915 0
 2961 0064 636F     		ldr	r3, [r4, #116]
 2962 0066 0022     		movs	r2, #0
 2963 0068 1A65     		str	r2, [r3, #80]
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2964              		.loc 1 1863 0
 2965 006a 0122     		movs	r2, #1
 2966 006c 04E0     		b	.L200
 2967              	.LVL267:
 2968              	.L204:
 2969 006e 0122     		movs	r2, #1
 2970 0070 02E0     		b	.L200
 2971              	.LVL268:
 2972              	.L205:
 2973 0072 0122     		movs	r2, #1
 2974 0074 00E0     		b	.L200
 2975              	.L206:
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2976              		.loc 1 1919 0
 2977 0076 0022     		movs	r2, #0
 2978              	.L200:
 2979              	.LVL269:
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2980              		.loc 1 1925 0
 2981 0078 2368     		ldr	r3, [r4]
 2982 007a 9968     		ldr	r1, [r3, #8]
 2983 007c 11F0400F 		tst	r1, #64
 2984 0080 0ED0     		beq	.L201
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2985              		.loc 1 1927 0
 2986 0082 9968     		ldr	r1, [r3, #8]
 2987 0084 21F04001 		bic	r1, r1, #64
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 131


 2988 0088 9960     		str	r1, [r3, #8]
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2989              		.loc 1 1930 0
 2990 008a A06F     		ldr	r0, [r4, #120]
 2991 008c 40B1     		cbz	r0, .L201
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2992              		.loc 1 1936 0
 2993 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2994              	.LVL270:
 2995 0092 20B1     		cbz	r0, .L207
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
 2996              		.loc 1 1938 0
 2997 0094 A36F     		ldr	r3, [r4, #120]
 2998 0096 0022     		movs	r2, #0
 2999 0098 1A65     		str	r2, [r3, #80]
 3000              	.LVL271:
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3001              		.loc 1 1939 0
 3002 009a 0122     		movs	r2, #1
 3003 009c 00E0     		b	.L201
 3004              	.LVL272:
 3005              	.L207:
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3006              		.loc 1 1943 0
 3007 009e 0022     		movs	r2, #0
 3008              	.L201:
 3009              	.LVL273:
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3010              		.loc 1 1949 0
 3011 00a0 0AB3     		cbz	r2, .L202
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3012              		.loc 1 1952 0
 3013 00a2 0023     		movs	r3, #0
 3014 00a4 A4F85630 		strh	r3, [r4, #86]	@ movhi
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3015              		.loc 1 1953 0
 3016 00a8 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 3017              		.loc 1 1956 0
 3018 00ac E366     		str	r3, [r4, #108]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3019              		.loc 1 1957 0
 3020 00ae 2367     		str	r3, [r4, #112]
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3021              		.loc 1 1960 0
 3022 00b0 C4F88830 		str	r3, [r4, #136]
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3023              		.loc 1 1963 0
 3024 00b4 2368     		ldr	r3, [r4]
 3025 00b6 0F22     		movs	r2, #15
 3026              	.LVL274:
 3027 00b8 1A62     		str	r2, [r3, #32]
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3028              		.loc 1 1966 0
 3029 00ba 636E     		ldr	r3, [r4, #100]
 3030 00bc B3F1005F 		cmp	r3, #536870912
 3031 00c0 04D1     		bne	.L203
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 132


1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3032              		.loc 1 1968 0
 3033 00c2 2268     		ldr	r2, [r4]
 3034 00c4 9369     		ldr	r3, [r2, #24]
 3035 00c6 43F01003 		orr	r3, r3, #16
 3036 00ca 9361     		str	r3, [r2, #24]
 3037              	.L203:
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3038              		.loc 1 1972 0
 3039 00cc 2268     		ldr	r2, [r4]
 3040 00ce 9369     		ldr	r3, [r2, #24]
 3041 00d0 43F00803 		orr	r3, r3, #8
 3042 00d4 9361     		str	r3, [r2, #24]
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3043              		.loc 1 1975 0
 3044 00d6 2023     		movs	r3, #32
 3045 00d8 C4F88030 		str	r3, [r4, #128]
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3046              		.loc 1 1976 0
 3047 00dc C4F88430 		str	r3, [r4, #132]
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3048              		.loc 1 1984 0
 3049 00e0 2046     		mov	r0, r4
 3050 00e2 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3051              	.LVL275:
 3052              	.L202:
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3053              		.loc 1 1989 0
 3054 00e6 0020     		movs	r0, #0
 3055 00e8 10BD     		pop	{r4, pc}
 3056              	.LVL276:
 3057              	.L210:
 3058 00ea 00BF     		.align	2
 3059              	.L209:
 3060 00ec FEFF7FEF 		.word	-276824066
 3061 00f0 00000000 		.word	UART_DMATxAbortCallback
 3062 00f4 00000000 		.word	UART_DMARxAbortCallback
 3063              		.cfi_endproc
 3064              	.LFE160:
 3066              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3067              		.align	2
 3068              		.thumb
 3069              		.thumb_func
 3071              	UART_DMARxAbortCallback:
 3072              	.LFB196:
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3073              		.loc 1 3558 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 0, uses_anonymous_args = 0
 3077              	.LVL277:
 3078 0000 08B5     		push	{r3, lr}
 3079              	.LCFI25:
 3080              		.cfi_def_cfa_offset 8
 3081              		.cfi_offset 3, -8
 3082              		.cfi_offset 14, -4
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 133


 3083              		.loc 1 3559 0
 3084 0002 806B     		ldr	r0, [r0, #56]
 3085              	.LVL278:
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3086              		.loc 1 3561 0
 3087 0004 836F     		ldr	r3, [r0, #120]
 3088 0006 0022     		movs	r2, #0
 3089 0008 1A65     		str	r2, [r3, #80]
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3090              		.loc 1 3564 0
 3091 000a 436F     		ldr	r3, [r0, #116]
 3092 000c 0BB1     		cbz	r3, .L212
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3093              		.loc 1 3566 0
 3094 000e 1B6D     		ldr	r3, [r3, #80]
 3095 0010 ABB9     		cbnz	r3, .L211
 3096              	.L212:
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3097              		.loc 1 3573 0
 3098 0012 0023     		movs	r3, #0
 3099 0014 A0F85630 		strh	r3, [r0, #86]	@ movhi
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3100              		.loc 1 3574 0
 3101 0018 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3102              		.loc 1 3577 0
 3103 001c C0F88830 		str	r3, [r0, #136]
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3104              		.loc 1 3580 0
 3105 0020 0368     		ldr	r3, [r0]
 3106 0022 0F22     		movs	r2, #15
 3107 0024 1A62     		str	r2, [r3, #32]
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3108              		.loc 1 3583 0
 3109 0026 0268     		ldr	r2, [r0]
 3110 0028 9369     		ldr	r3, [r2, #24]
 3111 002a 43F00803 		orr	r3, r3, #8
 3112 002e 9361     		str	r3, [r2, #24]
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3113              		.loc 1 3586 0
 3114 0030 2023     		movs	r3, #32
 3115 0032 C0F88030 		str	r3, [r0, #128]
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3116              		.loc 1 3587 0
 3117 0036 C0F88430 		str	r3, [r0, #132]
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3118              		.loc 1 3595 0
 3119 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3120              	.LVL279:
 3121              	.L211:
 3122 003e 08BD     		pop	{r3, pc}
 3123              		.cfi_endproc
 3124              	.LFE196:
 3126              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3127              		.align	2
 3128              		.thumb
 3129              		.thumb_func
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 134


 3131              	UART_DMATxAbortCallback:
 3132              	.LFB195:
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3133              		.loc 1 3504 0
 3134              		.cfi_startproc
 3135              		@ args = 0, pretend = 0, frame = 0
 3136              		@ frame_needed = 0, uses_anonymous_args = 0
 3137              	.LVL280:
 3138 0000 08B5     		push	{r3, lr}
 3139              	.LCFI26:
 3140              		.cfi_def_cfa_offset 8
 3141              		.cfi_offset 3, -8
 3142              		.cfi_offset 14, -4
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3143              		.loc 1 3505 0
 3144 0002 806B     		ldr	r0, [r0, #56]
 3145              	.LVL281:
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3146              		.loc 1 3507 0
 3147 0004 436F     		ldr	r3, [r0, #116]
 3148 0006 0022     		movs	r2, #0
 3149 0008 1A65     		str	r2, [r3, #80]
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3150              		.loc 1 3510 0
 3151 000a 836F     		ldr	r3, [r0, #120]
 3152 000c 0BB1     		cbz	r3, .L216
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3153              		.loc 1 3512 0
 3154 000e 1B6D     		ldr	r3, [r3, #80]
 3155 0010 CBB9     		cbnz	r3, .L215
 3156              	.L216:
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3157              		.loc 1 3519 0
 3158 0012 0023     		movs	r3, #0
 3159 0014 A0F85630 		strh	r3, [r0, #86]	@ movhi
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3160              		.loc 1 3520 0
 3161 0018 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3162              		.loc 1 3523 0
 3163 001c C0F88830 		str	r3, [r0, #136]
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3164              		.loc 1 3526 0
 3165 0020 0368     		ldr	r3, [r0]
 3166 0022 0F22     		movs	r2, #15
 3167 0024 1A62     		str	r2, [r3, #32]
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3168              		.loc 1 3529 0
 3169 0026 436E     		ldr	r3, [r0, #100]
 3170 0028 B3F1005F 		cmp	r3, #536870912
 3171 002c 04D1     		bne	.L218
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3172              		.loc 1 3531 0
 3173 002e 0268     		ldr	r2, [r0]
 3174 0030 9369     		ldr	r3, [r2, #24]
 3175 0032 43F01003 		orr	r3, r3, #16
 3176 0036 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 135


 3177              	.L218:
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3178              		.loc 1 3535 0
 3179 0038 2023     		movs	r3, #32
 3180 003a C0F88030 		str	r3, [r0, #128]
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3181              		.loc 1 3536 0
 3182 003e C0F88430 		str	r3, [r0, #132]
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3183              		.loc 1 3544 0
 3184 0042 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3185              	.LVL282:
 3186              	.L215:
 3187 0046 08BD     		pop	{r3, pc}
 3188              		.cfi_endproc
 3189              	.LFE195:
 3191              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3192              		.align	2
 3193              		.weak	HAL_UART_AbortTransmitCpltCallback
 3194              		.thumb
 3195              		.thumb_func
 3197              	HAL_UART_AbortTransmitCpltCallback:
 3198              	.LFB170:
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3199              		.loc 1 2502 0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 0
 3202              		@ frame_needed = 0, uses_anonymous_args = 0
 3203              		@ link register save eliminated.
 3204              	.LVL283:
 3205 0000 7047     		bx	lr
 3206              		.cfi_endproc
 3207              	.LFE170:
 3209 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3210              		.align	2
 3211              		.global	HAL_UART_AbortTransmit_IT
 3212              		.thumb
 3213              		.thumb_func
 3215              	HAL_UART_AbortTransmit_IT:
 3216              	.LFB161:
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
 3217              		.loc 1 2006 0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 3221              	.LVL284:
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
 3222              		.loc 1 2006 0
 3223 0000 10B5     		push	{r4, lr}
 3224              	.LCFI27:
 3225              		.cfi_def_cfa_offset 8
 3226              		.cfi_offset 4, -8
 3227              		.cfi_offset 14, -4
 3228 0002 0446     		mov	r4, r0
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3229              		.loc 1 2008 0
 3230 0004 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 136


 3231 0006 1368     		ldr	r3, [r2]
 3232 0008 23F0C003 		bic	r3, r3, #192
 3233 000c 1360     		str	r3, [r2]
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3234              		.loc 1 2009 0
 3235 000e 0268     		ldr	r2, [r0]
 3236 0010 9368     		ldr	r3, [r2, #8]
 3237 0012 23F40003 		bic	r3, r3, #8388608
 3238 0016 9360     		str	r3, [r2, #8]
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3239              		.loc 1 2012 0
 3240 0018 0368     		ldr	r3, [r0]
 3241 001a 9A68     		ldr	r2, [r3, #8]
 3242 001c 12F0800F 		tst	r2, #128
 3243 0020 19D0     		beq	.L222
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3244              		.loc 1 2014 0
 3245 0022 9A68     		ldr	r2, [r3, #8]
 3246 0024 22F08002 		bic	r2, r2, #128
 3247 0028 9A60     		str	r2, [r3, #8]
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3248              		.loc 1 2017 0
 3249 002a 436F     		ldr	r3, [r0, #116]
 3250 002c 4BB1     		cbz	r3, .L223
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3251              		.loc 1 2021 0
 3252 002e 144A     		ldr	r2, .L227
 3253 0030 1A65     		str	r2, [r3, #80]
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3254              		.loc 1 2024 0
 3255 0032 406F     		ldr	r0, [r0, #116]
 3256              	.LVL285:
 3257 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3258              	.LVL286:
 3259 0038 F8B1     		cbz	r0, .L224
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3260              		.loc 1 2027 0
 3261 003a 606F     		ldr	r0, [r4, #116]
 3262 003c 036D     		ldr	r3, [r0, #80]
 3263 003e 9847     		blx	r3
 3264              	.LVL287:
 3265 0040 1BE0     		b	.L224
 3266              	.LVL288:
 3267              	.L223:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3268              		.loc 1 2033 0
 3269 0042 0023     		movs	r3, #0
 3270 0044 A0F85630 		strh	r3, [r0, #86]	@ movhi
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3271              		.loc 1 2036 0
 3272 0048 0367     		str	r3, [r0, #112]
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3273              		.loc 1 2039 0
 3274 004a 2023     		movs	r3, #32
 3275 004c C0F88030 		str	r3, [r0, #128]
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3276              		.loc 1 2047 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 137


 3277 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3278              	.LVL289:
 3279 0054 11E0     		b	.L224
 3280              	.LVL290:
 3281              	.L222:
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3282              		.loc 1 2054 0
 3283 0056 0022     		movs	r2, #0
 3284 0058 A0F85620 		strh	r2, [r0, #86]	@ movhi
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3285              		.loc 1 2057 0
 3286 005c 0267     		str	r2, [r0, #112]
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3287              		.loc 1 2060 0
 3288 005e 426E     		ldr	r2, [r0, #100]
 3289 0060 B2F1005F 		cmp	r2, #536870912
 3290 0064 03D1     		bne	.L225
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3291              		.loc 1 2062 0
 3292 0066 9A69     		ldr	r2, [r3, #24]
 3293 0068 42F01002 		orr	r2, r2, #16
 3294 006c 9A61     		str	r2, [r3, #24]
 3295              	.L225:
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3296              		.loc 1 2066 0
 3297 006e 2023     		movs	r3, #32
 3298 0070 C4F88030 		str	r3, [r4, #128]
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3299              		.loc 1 2074 0
 3300 0074 2046     		mov	r0, r4
 3301              	.LVL291:
 3302 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3303              	.LVL292:
 3304              	.L224:
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3305              		.loc 1 2079 0
 3306 007a 0020     		movs	r0, #0
 3307 007c 10BD     		pop	{r4, pc}
 3308              	.LVL293:
 3309              	.L228:
 3310 007e 00BF     		.align	2
 3311              	.L227:
 3312 0080 00000000 		.word	UART_DMATxOnlyAbortCallback
 3313              		.cfi_endproc
 3314              	.LFE161:
 3316              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3317              		.align	2
 3318              		.thumb
 3319              		.thumb_func
 3321              	UART_DMATxOnlyAbortCallback:
 3322              	.LFB197:
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3323              		.loc 1 3609 0
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 0
 3326              		@ frame_needed = 0, uses_anonymous_args = 0
 3327              	.LVL294:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 138


 3328 0000 08B5     		push	{r3, lr}
 3329              	.LCFI28:
 3330              		.cfi_def_cfa_offset 8
 3331              		.cfi_offset 3, -8
 3332              		.cfi_offset 14, -4
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3333              		.loc 1 3610 0
 3334 0002 806B     		ldr	r0, [r0, #56]
 3335              	.LVL295:
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3336              		.loc 1 3612 0
 3337 0004 0023     		movs	r3, #0
 3338 0006 A0F85630 		strh	r3, [r0, #86]	@ movhi
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3339              		.loc 1 3615 0
 3340 000a 436E     		ldr	r3, [r0, #100]
 3341 000c B3F1005F 		cmp	r3, #536870912
 3342 0010 04D1     		bne	.L230
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3343              		.loc 1 3617 0
 3344 0012 0268     		ldr	r2, [r0]
 3345 0014 9369     		ldr	r3, [r2, #24]
 3346 0016 43F01003 		orr	r3, r3, #16
 3347 001a 9361     		str	r3, [r2, #24]
 3348              	.L230:
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3349              		.loc 1 3621 0
 3350 001c 2023     		movs	r3, #32
 3351 001e C0F88030 		str	r3, [r0, #128]
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3352              		.loc 1 3629 0
 3353 0022 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3354              	.LVL296:
 3355 0026 08BD     		pop	{r3, pc}
 3356              		.cfi_endproc
 3357              	.LFE197:
 3359              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3360              		.align	2
 3361              		.weak	HAL_UART_AbortReceiveCpltCallback
 3362              		.thumb
 3363              		.thumb_func
 3365              	HAL_UART_AbortReceiveCpltCallback:
 3366              	.LFB171:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3367              		.loc 1 2517 0
 3368              		.cfi_startproc
 3369              		@ args = 0, pretend = 0, frame = 0
 3370              		@ frame_needed = 0, uses_anonymous_args = 0
 3371              		@ link register save eliminated.
 3372              	.LVL297:
 3373 0000 7047     		bx	lr
 3374              		.cfi_endproc
 3375              	.LFE171:
 3377 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3378              		.align	2
 3379              		.global	HAL_UART_AbortReceive_IT
 3380              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 139


 3381              		.thumb_func
 3383              	HAL_UART_AbortReceive_IT:
 3384              	.LFB162:
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3385              		.loc 1 2096 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              	.LVL298:
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3390              		.loc 1 2096 0
 3391 0000 10B5     		push	{r4, lr}
 3392              	.LCFI29:
 3393              		.cfi_def_cfa_offset 8
 3394              		.cfi_offset 4, -8
 3395              		.cfi_offset 14, -4
 3396 0002 0446     		mov	r4, r0
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3397              		.loc 1 2098 0
 3398 0004 0268     		ldr	r2, [r0]
 3399 0006 1368     		ldr	r3, [r2]
 3400 0008 23F49073 		bic	r3, r3, #288
 3401 000c 1360     		str	r3, [r2]
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3402              		.loc 1 2099 0
 3403 000e 0268     		ldr	r2, [r0]
 3404 0010 9168     		ldr	r1, [r2, #8]
 3405 0012 1B4B     		ldr	r3, .L238
 3406 0014 0B40     		ands	r3, r3, r1
 3407 0016 9360     		str	r3, [r2, #8]
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3408              		.loc 1 2102 0
 3409 0018 0368     		ldr	r3, [r0]
 3410 001a 9A68     		ldr	r2, [r3, #8]
 3411 001c 12F0400F 		tst	r2, #64
 3412 0020 21D0     		beq	.L234
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3413              		.loc 1 2104 0
 3414 0022 9A68     		ldr	r2, [r3, #8]
 3415 0024 22F04002 		bic	r2, r2, #64
 3416 0028 9A60     		str	r2, [r3, #8]
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3417              		.loc 1 2107 0
 3418 002a 836F     		ldr	r3, [r0, #120]
 3419 002c 4BB1     		cbz	r3, .L235
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3420              		.loc 1 2111 0
 3421 002e 154A     		ldr	r2, .L238+4
 3422 0030 1A65     		str	r2, [r3, #80]
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3423              		.loc 1 2114 0
 3424 0032 806F     		ldr	r0, [r0, #120]
 3425              	.LVL299:
 3426 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3427              	.LVL300:
 3428 0038 00B3     		cbz	r0, .L236
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 140


 3429              		.loc 1 2117 0
 3430 003a A06F     		ldr	r0, [r4, #120]
 3431 003c 036D     		ldr	r3, [r0, #80]
 3432 003e 9847     		blx	r3
 3433              	.LVL301:
 3434 0040 1CE0     		b	.L236
 3435              	.LVL302:
 3436              	.L235:
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3437              		.loc 1 2123 0
 3438 0042 0023     		movs	r3, #0
 3439 0044 A0F85E30 		strh	r3, [r0, #94]	@ movhi
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3440              		.loc 1 2126 0
 3441 0048 8365     		str	r3, [r0, #88]
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3442              		.loc 1 2129 0
 3443 004a 0368     		ldr	r3, [r0]
 3444 004c 0F22     		movs	r2, #15
 3445 004e 1A62     		str	r2, [r3, #32]
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3446              		.loc 1 2132 0
 3447 0050 0268     		ldr	r2, [r0]
 3448 0052 9369     		ldr	r3, [r2, #24]
 3449 0054 43F00803 		orr	r3, r3, #8
 3450 0058 9361     		str	r3, [r2, #24]
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3451              		.loc 1 2135 0
 3452 005a 2023     		movs	r3, #32
 3453 005c C0F88430 		str	r3, [r0, #132]
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3454              		.loc 1 2143 0
 3455 0060 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3456              	.LVL303:
 3457 0064 0AE0     		b	.L236
 3458              	.LVL304:
 3459              	.L234:
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3460              		.loc 1 2150 0
 3461 0066 0022     		movs	r2, #0
 3462 0068 A0F85E20 		strh	r2, [r0, #94]	@ movhi
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3463              		.loc 1 2153 0
 3464 006c 8265     		str	r2, [r0, #88]
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3465              		.loc 1 2156 0
 3466 006e 0F22     		movs	r2, #15
 3467 0070 1A62     		str	r2, [r3, #32]
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3468              		.loc 1 2159 0
 3469 0072 2023     		movs	r3, #32
 3470 0074 C0F88430 		str	r3, [r0, #132]
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3471              		.loc 1 2167 0
 3472 0078 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3473              	.LVL305:
 3474              	.L236:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 141


2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3475              		.loc 1 2172 0
 3476 007c 0020     		movs	r0, #0
 3477 007e 10BD     		pop	{r4, pc}
 3478              	.LVL306:
 3479              	.L239:
 3480              		.align	2
 3481              	.L238:
 3482 0080 FEFFFFEF 		.word	-268435458
 3483 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 3484              		.cfi_endproc
 3485              	.LFE162:
 3487              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3488              		.align	2
 3489              		.thumb
 3490              		.thumb_func
 3492              	UART_DMARxOnlyAbortCallback:
 3493              	.LFB198:
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3494              		.loc 1 3642 0
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              	.LVL307:
 3499 0000 08B5     		push	{r3, lr}
 3500              	.LCFI30:
 3501              		.cfi_def_cfa_offset 8
 3502              		.cfi_offset 3, -8
 3503              		.cfi_offset 14, -4
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3504              		.loc 1 3643 0
 3505 0002 806B     		ldr	r0, [r0, #56]
 3506              	.LVL308:
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3507              		.loc 1 3645 0
 3508 0004 0023     		movs	r3, #0
 3509 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3510              		.loc 1 3648 0
 3511 000a 0368     		ldr	r3, [r0]
 3512 000c 0F22     		movs	r2, #15
 3513 000e 1A62     		str	r2, [r3, #32]
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3514              		.loc 1 3651 0
 3515 0010 0268     		ldr	r2, [r0]
 3516 0012 9369     		ldr	r3, [r2, #24]
 3517 0014 43F00803 		orr	r3, r3, #8
 3518 0018 9361     		str	r3, [r2, #24]
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3519              		.loc 1 3654 0
 3520 001a 2023     		movs	r3, #32
 3521 001c C0F88430 		str	r3, [r0, #132]
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3522              		.loc 1 3662 0
 3523 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3524              	.LVL309:
 3525 0024 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 142


 3526              		.cfi_endproc
 3527              	.LFE198:
 3529 0026 00BF     		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3530              		.align	2
 3531              		.global	HAL_UART_ReceiverTimeout_Config
 3532              		.thumb
 3533              		.thumb_func
 3535              	HAL_UART_ReceiverTimeout_Config:
 3536              	.LFB172:
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3537              		.loc 1 2564 0
 3538              		.cfi_startproc
 3539              		@ args = 0, pretend = 0, frame = 0
 3540              		@ frame_needed = 0, uses_anonymous_args = 0
 3541              		@ link register save eliminated.
 3542              	.LVL310:
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3543              		.loc 1 2565 0
 3544 0000 0368     		ldr	r3, [r0]
 3545 0002 044A     		ldr	r2, .L244
 3546 0004 9342     		cmp	r3, r2
 3547 0006 04D0     		beq	.L242
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3548              		.loc 1 2568 0
 3549 0008 5A69     		ldr	r2, [r3, #20]
 3550 000a 02F07F42 		and	r2, r2, #-16777216
 3551 000e 1143     		orrs	r1, r1, r2
 3552              	.LVL311:
 3553 0010 5961     		str	r1, [r3, #20]
 3554              	.L242:
 3555 0012 7047     		bx	lr
 3556              	.L245:
 3557              		.align	2
 3558              	.L244:
 3559 0014 000C0058 		.word	1476398080
 3560              		.cfi_endproc
 3561              	.LFE172:
 3563              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3564              		.align	2
 3565              		.global	HAL_UART_EnableReceiverTimeout
 3566              		.thumb
 3567              		.thumb_func
 3569              	HAL_UART_EnableReceiverTimeout:
 3570              	.LFB173:
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3571              		.loc 1 2579 0
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 0
 3574              		@ frame_needed = 0, uses_anonymous_args = 0
 3575              		@ link register save eliminated.
 3576              	.LVL312:
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3577              		.loc 1 2580 0
 3578 0000 0368     		ldr	r3, [r0]
 3579 0002 114A     		ldr	r2, .L251
 3580 0004 9342     		cmp	r3, r2
 3581 0006 19D0     		beq	.L248
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 143


2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3582              		.loc 1 2582 0
 3583 0008 D0F88020 		ldr	r2, [r0, #128]
 3584 000c 202A     		cmp	r2, #32
 3585 000e 17D1     		bne	.L249
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3586              		.loc 1 2585 0
 3587 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3588 0014 012A     		cmp	r2, #1
 3589 0016 15D0     		beq	.L250
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3590              		.loc 1 2585 0 is_stmt 0 discriminator 2
 3591 0018 0122     		movs	r2, #1
 3592 001a 80F87C20 		strb	r2, [r0, #124]
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3593              		.loc 1 2587 0 is_stmt 1 discriminator 2
 3594 001e 2422     		movs	r2, #36
 3595 0020 C0F88020 		str	r2, [r0, #128]
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3596              		.loc 1 2590 0 discriminator 2
 3597 0024 5A68     		ldr	r2, [r3, #4]
 3598 0026 42F40002 		orr	r2, r2, #8388608
 3599 002a 5A60     		str	r2, [r3, #4]
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3600              		.loc 1 2592 0 discriminator 2
 3601 002c 2023     		movs	r3, #32
 3602 002e C0F88030 		str	r3, [r0, #128]
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3603              		.loc 1 2595 0 discriminator 2
 3604 0032 0023     		movs	r3, #0
 3605 0034 80F87C30 		strb	r3, [r0, #124]
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3606              		.loc 1 2597 0 discriminator 2
 3607 0038 1846     		mov	r0, r3
 3608              	.LVL313:
 3609 003a 7047     		bx	lr
 3610              	.LVL314:
 3611              	.L248:
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3612              		.loc 1 2606 0
 3613 003c 0120     		movs	r0, #1
 3614              	.LVL315:
 3615 003e 7047     		bx	lr
 3616              	.LVL316:
 3617              	.L249:
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3618              		.loc 1 2601 0
 3619 0040 0220     		movs	r0, #2
 3620              	.LVL317:
 3621 0042 7047     		bx	lr
 3622              	.LVL318:
 3623              	.L250:
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3624              		.loc 1 2585 0
 3625 0044 0220     		movs	r0, #2
 3626              	.LVL319:
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 144


 3627              		.loc 1 2608 0
 3628 0046 7047     		bx	lr
 3629              	.L252:
 3630              		.align	2
 3631              	.L251:
 3632 0048 000C0058 		.word	1476398080
 3633              		.cfi_endproc
 3634              	.LFE173:
 3636              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3637              		.align	2
 3638              		.global	HAL_UART_DisableReceiverTimeout
 3639              		.thumb
 3640              		.thumb_func
 3642              	HAL_UART_DisableReceiverTimeout:
 3643              	.LFB174:
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3644              		.loc 1 2617 0
 3645              		.cfi_startproc
 3646              		@ args = 0, pretend = 0, frame = 0
 3647              		@ frame_needed = 0, uses_anonymous_args = 0
 3648              		@ link register save eliminated.
 3649              	.LVL320:
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3650              		.loc 1 2618 0
 3651 0000 0368     		ldr	r3, [r0]
 3652 0002 114A     		ldr	r2, .L258
 3653 0004 9342     		cmp	r3, r2
 3654 0006 19D0     		beq	.L255
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3655              		.loc 1 2620 0
 3656 0008 D0F88020 		ldr	r2, [r0, #128]
 3657 000c 202A     		cmp	r2, #32
 3658 000e 17D1     		bne	.L256
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3659              		.loc 1 2623 0
 3660 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3661 0014 012A     		cmp	r2, #1
 3662 0016 15D0     		beq	.L257
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3663              		.loc 1 2623 0 is_stmt 0 discriminator 2
 3664 0018 0122     		movs	r2, #1
 3665 001a 80F87C20 		strb	r2, [r0, #124]
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3666              		.loc 1 2625 0 is_stmt 1 discriminator 2
 3667 001e 2422     		movs	r2, #36
 3668 0020 C0F88020 		str	r2, [r0, #128]
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3669              		.loc 1 2628 0 discriminator 2
 3670 0024 5A68     		ldr	r2, [r3, #4]
 3671 0026 22F40002 		bic	r2, r2, #8388608
 3672 002a 5A60     		str	r2, [r3, #4]
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3673              		.loc 1 2630 0 discriminator 2
 3674 002c 2023     		movs	r3, #32
 3675 002e C0F88030 		str	r3, [r0, #128]
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3676              		.loc 1 2633 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 145


 3677 0032 0023     		movs	r3, #0
 3678 0034 80F87C30 		strb	r3, [r0, #124]
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3679              		.loc 1 2635 0 discriminator 2
 3680 0038 1846     		mov	r0, r3
 3681              	.LVL321:
 3682 003a 7047     		bx	lr
 3683              	.LVL322:
 3684              	.L255:
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3685              		.loc 1 2644 0
 3686 003c 0120     		movs	r0, #1
 3687              	.LVL323:
 3688 003e 7047     		bx	lr
 3689              	.LVL324:
 3690              	.L256:
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 3691              		.loc 1 2639 0
 3692 0040 0220     		movs	r0, #2
 3693              	.LVL325:
 3694 0042 7047     		bx	lr
 3695              	.LVL326:
 3696              	.L257:
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3697              		.loc 1 2623 0
 3698 0044 0220     		movs	r0, #2
 3699              	.LVL327:
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3700              		.loc 1 2646 0
 3701 0046 7047     		bx	lr
 3702              	.L259:
 3703              		.align	2
 3704              	.L258:
 3705 0048 000C0058 		.word	1476398080
 3706              		.cfi_endproc
 3707              	.LFE174:
 3709              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3710              		.align	2
 3711              		.global	HAL_MultiProcessor_EnterMuteMode
 3712              		.thumb
 3713              		.thumb_func
 3715              	HAL_MultiProcessor_EnterMuteMode:
 3716              	.LFB177:
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3717              		.loc 1 2695 0
 3718              		.cfi_startproc
 3719              		@ args = 0, pretend = 0, frame = 0
 3720              		@ frame_needed = 0, uses_anonymous_args = 0
 3721              		@ link register save eliminated.
 3722              	.LVL328:
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3723              		.loc 1 2696 0
 3724 0000 0268     		ldr	r2, [r0]
 3725 0002 9369     		ldr	r3, [r2, #24]
 3726 0004 43F00403 		orr	r3, r3, #4
 3727 0008 9361     		str	r3, [r2, #24]
 3728 000a 7047     		bx	lr
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 146


 3729              		.cfi_endproc
 3730              	.LFE177:
 3732              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3733              		.align	2
 3734              		.global	HAL_HalfDuplex_EnableTransmitter
 3735              		.thumb
 3736              		.thumb_func
 3738              	HAL_HalfDuplex_EnableTransmitter:
 3739              	.LFB178:
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3740              		.loc 1 2705 0
 3741              		.cfi_startproc
 3742              		@ args = 0, pretend = 0, frame = 0
 3743              		@ frame_needed = 0, uses_anonymous_args = 0
 3744              		@ link register save eliminated.
 3745              	.LVL329:
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3746              		.loc 1 2706 0
 3747 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3748 0004 012B     		cmp	r3, #1
 3749 0006 17D0     		beq	.L263
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3750              		.loc 1 2706 0 is_stmt 0 discriminator 2
 3751 0008 0123     		movs	r3, #1
 3752 000a 80F87C30 		strb	r3, [r0, #124]
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3753              		.loc 1 2707 0 is_stmt 1 discriminator 2
 3754 000e 2423     		movs	r3, #36
 3755 0010 C0F88030 		str	r3, [r0, #128]
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3756              		.loc 1 2710 0 discriminator 2
 3757 0014 0268     		ldr	r2, [r0]
 3758 0016 1368     		ldr	r3, [r2]
 3759 0018 23F00C03 		bic	r3, r3, #12
 3760 001c 1360     		str	r3, [r2]
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3761              		.loc 1 2713 0 discriminator 2
 3762 001e 0268     		ldr	r2, [r0]
 3763 0020 1368     		ldr	r3, [r2]
 3764 0022 43F00803 		orr	r3, r3, #8
 3765 0026 1360     		str	r3, [r2]
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3766              		.loc 1 2715 0 discriminator 2
 3767 0028 2023     		movs	r3, #32
 3768 002a C0F88030 		str	r3, [r0, #128]
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3769              		.loc 1 2717 0 discriminator 2
 3770 002e 0023     		movs	r3, #0
 3771 0030 80F87C30 		strb	r3, [r0, #124]
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3772              		.loc 1 2719 0 discriminator 2
 3773 0034 1846     		mov	r0, r3
 3774              	.LVL330:
 3775 0036 7047     		bx	lr
 3776              	.LVL331:
 3777              	.L263:
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 147


 3778              		.loc 1 2706 0
 3779 0038 0220     		movs	r0, #2
 3780              	.LVL332:
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3781              		.loc 1 2720 0
 3782 003a 7047     		bx	lr
 3783              		.cfi_endproc
 3784              	.LFE178:
 3786              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3787              		.align	2
 3788              		.global	HAL_HalfDuplex_EnableReceiver
 3789              		.thumb
 3790              		.thumb_func
 3792              	HAL_HalfDuplex_EnableReceiver:
 3793              	.LFB179:
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 3794              		.loc 1 2728 0
 3795              		.cfi_startproc
 3796              		@ args = 0, pretend = 0, frame = 0
 3797              		@ frame_needed = 0, uses_anonymous_args = 0
 3798              		@ link register save eliminated.
 3799              	.LVL333:
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3800              		.loc 1 2729 0
 3801 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3802 0004 012B     		cmp	r3, #1
 3803 0006 17D0     		beq	.L266
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3804              		.loc 1 2729 0 is_stmt 0 discriminator 2
 3805 0008 0123     		movs	r3, #1
 3806 000a 80F87C30 		strb	r3, [r0, #124]
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3807              		.loc 1 2730 0 is_stmt 1 discriminator 2
 3808 000e 2423     		movs	r3, #36
 3809 0010 C0F88030 		str	r3, [r0, #128]
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3810              		.loc 1 2733 0 discriminator 2
 3811 0014 0268     		ldr	r2, [r0]
 3812 0016 1368     		ldr	r3, [r2]
 3813 0018 23F00C03 		bic	r3, r3, #12
 3814 001c 1360     		str	r3, [r2]
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3815              		.loc 1 2736 0 discriminator 2
 3816 001e 0268     		ldr	r2, [r0]
 3817 0020 1368     		ldr	r3, [r2]
 3818 0022 43F00403 		orr	r3, r3, #4
 3819 0026 1360     		str	r3, [r2]
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3820              		.loc 1 2738 0 discriminator 2
 3821 0028 2023     		movs	r3, #32
 3822 002a C0F88030 		str	r3, [r0, #128]
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3823              		.loc 1 2740 0 discriminator 2
 3824 002e 0023     		movs	r3, #0
 3825 0030 80F87C30 		strb	r3, [r0, #124]
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3826              		.loc 1 2742 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 148


 3827 0034 1846     		mov	r0, r3
 3828              	.LVL334:
 3829 0036 7047     		bx	lr
 3830              	.LVL335:
 3831              	.L266:
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3832              		.loc 1 2729 0
 3833 0038 0220     		movs	r0, #2
 3834              	.LVL336:
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3835              		.loc 1 2743 0
 3836 003a 7047     		bx	lr
 3837              		.cfi_endproc
 3838              	.LFE179:
 3840              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3841              		.align	2
 3842              		.global	HAL_LIN_SendBreak
 3843              		.thumb
 3844              		.thumb_func
 3846              	HAL_LIN_SendBreak:
 3847              	.LFB180:
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 3848              		.loc 1 2752 0
 3849              		.cfi_startproc
 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 0, uses_anonymous_args = 0
 3852              		@ link register save eliminated.
 3853              	.LVL337:
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3854              		.loc 1 2756 0
 3855 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3856 0004 012B     		cmp	r3, #1
 3857 0006 12D0     		beq	.L269
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3858              		.loc 1 2756 0 is_stmt 0 discriminator 2
 3859 0008 0123     		movs	r3, #1
 3860 000a 80F87C30 		strb	r3, [r0, #124]
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3861              		.loc 1 2758 0 is_stmt 1 discriminator 2
 3862 000e 2423     		movs	r3, #36
 3863 0010 C0F88030 		str	r3, [r0, #128]
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3864              		.loc 1 2761 0 discriminator 2
 3865 0014 0268     		ldr	r2, [r0]
 3866 0016 9369     		ldr	r3, [r2, #24]
 3867 0018 43F00203 		orr	r3, r3, #2
 3868 001c 9361     		str	r3, [r2, #24]
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3869              		.loc 1 2763 0 discriminator 2
 3870 001e 2023     		movs	r3, #32
 3871 0020 C0F88030 		str	r3, [r0, #128]
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3872              		.loc 1 2765 0 discriminator 2
 3873 0024 0023     		movs	r3, #0
 3874 0026 80F87C30 		strb	r3, [r0, #124]
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3875              		.loc 1 2767 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 149


 3876 002a 1846     		mov	r0, r3
 3877              	.LVL338:
 3878 002c 7047     		bx	lr
 3879              	.LVL339:
 3880              	.L269:
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3881              		.loc 1 2756 0
 3882 002e 0220     		movs	r0, #2
 3883              	.LVL340:
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3884              		.loc 1 2768 0
 3885 0030 7047     		bx	lr
 3886              		.cfi_endproc
 3887              	.LFE180:
 3889 0032 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3890              		.align	2
 3891              		.global	HAL_UART_GetState
 3892              		.thumb
 3893              		.thumb_func
 3895              	HAL_UART_GetState:
 3896              	.LFB181:
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
 3897              		.loc 1 2797 0
 3898              		.cfi_startproc
 3899              		@ args = 0, pretend = 0, frame = 0
 3900              		@ frame_needed = 0, uses_anonymous_args = 0
 3901              		@ link register save eliminated.
 3902              	.LVL341:
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
 3903              		.loc 1 2800 0
 3904 0000 D0F88020 		ldr	r2, [r0, #128]
 3905              	.LVL342:
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3906              		.loc 1 2801 0
 3907 0004 D0F88400 		ldr	r0, [r0, #132]
 3908              	.LVL343:
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3909              		.loc 1 2804 0
 3910 0008 1043     		orrs	r0, r0, r2
 3911              	.LVL344:
 3912 000a 7047     		bx	lr
 3913              		.cfi_endproc
 3914              	.LFE181:
 3916              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3917              		.align	2
 3918              		.global	HAL_UART_GetError
 3919              		.thumb
 3920              		.thumb_func
 3922              	HAL_UART_GetError:
 3923              	.LFB182:
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
 3924              		.loc 1 2813 0
 3925              		.cfi_startproc
 3926              		@ args = 0, pretend = 0, frame = 0
 3927              		@ frame_needed = 0, uses_anonymous_args = 0
 3928              		@ link register save eliminated.
 3929              	.LVL345:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 150


2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3930              		.loc 1 2814 0
 3931 0000 D0F88800 		ldr	r0, [r0, #136]
 3932              	.LVL346:
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 3933              		.loc 1 2815 0
 3934 0004 7047     		bx	lr
 3935              		.cfi_endproc
 3936              	.LFE182:
 3938              		.global	__aeabi_uldivmod
 3939 0006 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 3940              		.align	2
 3941              		.global	UART_SetConfig
 3942              		.thumb
 3943              		.thumb_func
 3945              	UART_SetConfig:
 3946              	.LFB183:
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
 3947              		.loc 1 2858 0
 3948              		.cfi_startproc
 3949              		@ args = 0, pretend = 0, frame = 24
 3950              		@ frame_needed = 0, uses_anonymous_args = 0
 3951              	.LVL347:
 3952 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3953              	.LCFI31:
 3954              		.cfi_def_cfa_offset 28
 3955              		.cfi_offset 4, -28
 3956              		.cfi_offset 5, -24
 3957              		.cfi_offset 6, -20
 3958              		.cfi_offset 7, -16
 3959              		.cfi_offset 8, -12
 3960              		.cfi_offset 9, -8
 3961              		.cfi_offset 14, -4
 3962 0004 87B0     		sub	sp, sp, #28
 3963              	.LCFI32:
 3964              		.cfi_def_cfa_offset 56
 3965 0006 0446     		mov	r4, r0
 3966              	.LVL348:
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 3967              		.loc 1 2895 0
 3968 0008 8268     		ldr	r2, [r0, #8]
 3969 000a 0369     		ldr	r3, [r0, #16]
 3970 000c 1A43     		orrs	r2, r2, r3
 3971 000e 4369     		ldr	r3, [r0, #20]
 3972 0010 1A43     		orrs	r2, r2, r3
 3973 0012 C369     		ldr	r3, [r0, #28]
 3974 0014 1A43     		orrs	r2, r2, r3
 3975              	.LVL349:
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3976              		.loc 1 2896 0
 3977 0016 436E     		ldr	r3, [r0, #100]
 3978 0018 1A43     		orrs	r2, r2, r3
 3979              	.LVL350:
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3980              		.loc 1 2897 0
 3981 001a 0168     		ldr	r1, [r0]
 3982 001c 0868     		ldr	r0, [r1]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 151


 3983              	.LVL351:
 3984 001e 7C4B     		ldr	r3, .L397
 3985 0020 0340     		ands	r3, r3, r0
 3986 0022 1343     		orrs	r3, r3, r2
 3987 0024 0B60     		str	r3, [r1]
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3988              		.loc 1 2902 0
 3989 0026 2168     		ldr	r1, [r4]
 3990 0028 4B68     		ldr	r3, [r1, #4]
 3991 002a 23F44052 		bic	r2, r3, #12288
 3992              	.LVL352:
 3993 002e E368     		ldr	r3, [r4, #12]
 3994 0030 1343     		orrs	r3, r3, r2
 3995 0032 4B60     		str	r3, [r1, #4]
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3996              		.loc 1 2910 0
 3997 0034 A169     		ldr	r1, [r4, #24]
 3998              	.LVL353:
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3999              		.loc 1 2912 0
 4000 0036 2268     		ldr	r2, [r4]
 4001 0038 764B     		ldr	r3, .L397+4
 4002 003a 9A42     		cmp	r2, r3
 4003 003c 01D0     		beq	.L273
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4004              		.loc 1 2914 0
 4005 003e 236A     		ldr	r3, [r4, #32]
 4006 0040 1943     		orrs	r1, r1, r3
 4007              	.LVL354:
 4008              	.L273:
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4009              		.loc 1 2916 0
 4010 0042 9068     		ldr	r0, [r2, #8]
 4011 0044 744B     		ldr	r3, .L397+8
 4012 0046 0340     		ands	r3, r3, r0
 4013 0048 0B43     		orrs	r3, r3, r1
 4014 004a 9360     		str	r3, [r2, #8]
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4015              		.loc 1 2921 0
 4016 004c 2168     		ldr	r1, [r4]
 4017              	.LVL355:
 4018 004e CB6A     		ldr	r3, [r1, #44]
 4019 0050 23F00F02 		bic	r2, r3, #15
 4020 0054 636A     		ldr	r3, [r4, #36]
 4021 0056 1343     		orrs	r3, r3, r2
 4022 0058 CB62     		str	r3, [r1, #44]
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4023              		.loc 1 2924 0
 4024 005a 2368     		ldr	r3, [r4]
 4025 005c 6F4A     		ldr	r2, .L397+12
 4026 005e 9342     		cmp	r3, r2
 4027 0060 3CD1     		bne	.L274
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4028              		.loc 1 2924 0 is_stmt 0 discriminator 1
 4029 0062 6F4A     		ldr	r2, .L397+16
 4030 0064 526D     		ldr	r2, [r2, #84]
 4031 0066 02F03802 		and	r2, r2, #56
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 152


 4032 006a 282A     		cmp	r2, #40
 4033 006c 34D8     		bhi	.L275
 4034 006e DFE812F0 		tbh	[pc, r2, lsl #1]
 4035              	.L277:
 4036 0072 2900     		.2byte	(.L276-.L277)/2
 4037 0074 3300     		.2byte	(.L275-.L277)/2
 4038 0076 3300     		.2byte	(.L275-.L277)/2
 4039 0078 3300     		.2byte	(.L275-.L277)/2
 4040 007a 3300     		.2byte	(.L275-.L277)/2
 4041 007c 3300     		.2byte	(.L275-.L277)/2
 4042 007e 3300     		.2byte	(.L275-.L277)/2
 4043 0080 3300     		.2byte	(.L275-.L277)/2
 4044 0082 3201     		.2byte	(.L375-.L277)/2
 4045 0084 3300     		.2byte	(.L275-.L277)/2
 4046 0086 3300     		.2byte	(.L275-.L277)/2
 4047 0088 3300     		.2byte	(.L275-.L277)/2
 4048 008a 3300     		.2byte	(.L275-.L277)/2
 4049 008c 3300     		.2byte	(.L275-.L277)/2
 4050 008e 3300     		.2byte	(.L275-.L277)/2
 4051 0090 3300     		.2byte	(.L275-.L277)/2
 4052 0092 2B00     		.2byte	(.L279-.L277)/2
 4053 0094 3300     		.2byte	(.L275-.L277)/2
 4054 0096 3300     		.2byte	(.L275-.L277)/2
 4055 0098 3300     		.2byte	(.L275-.L277)/2
 4056 009a 3300     		.2byte	(.L275-.L277)/2
 4057 009c 3300     		.2byte	(.L275-.L277)/2
 4058 009e 3300     		.2byte	(.L275-.L277)/2
 4059 00a0 3300     		.2byte	(.L275-.L277)/2
 4060 00a2 2D00     		.2byte	(.L280-.L277)/2
 4061 00a4 3300     		.2byte	(.L275-.L277)/2
 4062 00a6 3300     		.2byte	(.L275-.L277)/2
 4063 00a8 3300     		.2byte	(.L275-.L277)/2
 4064 00aa 3300     		.2byte	(.L275-.L277)/2
 4065 00ac 3300     		.2byte	(.L275-.L277)/2
 4066 00ae 3300     		.2byte	(.L275-.L277)/2
 4067 00b0 3300     		.2byte	(.L275-.L277)/2
 4068 00b2 2F00     		.2byte	(.L281-.L277)/2
 4069 00b4 3300     		.2byte	(.L275-.L277)/2
 4070 00b6 3300     		.2byte	(.L275-.L277)/2
 4071 00b8 3300     		.2byte	(.L275-.L277)/2
 4072 00ba 3300     		.2byte	(.L275-.L277)/2
 4073 00bc 3300     		.2byte	(.L275-.L277)/2
 4074 00be 3300     		.2byte	(.L275-.L277)/2
 4075 00c0 3300     		.2byte	(.L275-.L277)/2
 4076 00c2 3100     		.2byte	(.L282-.L277)/2
 4077              		.p2align 1
 4078              	.L276:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4079              		.loc 1 2924 0
 4080 00c4 0122     		movs	r2, #1
 4081 00c6 19E1     		b	.L278
 4082              	.L279:
 4083              	.LVL356:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4084              		.loc 1 2924 0 discriminator 6
 4085 00c8 0822     		movs	r2, #8
 4086 00ca 17E1     		b	.L278
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 153


 4087              	.LVL357:
 4088              	.L280:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4089              		.loc 1 2924 0 discriminator 7
 4090 00cc 1022     		movs	r2, #16
 4091 00ce 15E1     		b	.L278
 4092              	.LVL358:
 4093              	.L281:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4094              		.loc 1 2924 0 discriminator 8
 4095 00d0 2022     		movs	r2, #32
 4096 00d2 13E1     		b	.L278
 4097              	.LVL359:
 4098              	.L282:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4099              		.loc 1 2924 0 discriminator 9
 4100 00d4 4022     		movs	r2, #64
 4101 00d6 11E1     		b	.L278
 4102              	.LVL360:
 4103              	.L275:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4104              		.loc 1 2924 0 discriminator 3
 4105 00d8 8022     		movs	r2, #128
 4106 00da 0FE1     		b	.L278
 4107              	.LVL361:
 4108              	.L274:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4109              		.loc 1 2924 0 discriminator 2
 4110 00dc 514A     		ldr	r2, .L397+20
 4111 00de 9342     		cmp	r3, r2
 4112 00e0 19D1     		bne	.L283
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4113              		.loc 1 2924 0 discriminator 10
 4114 00e2 4F4A     		ldr	r2, .L397+16
 4115 00e4 526D     		ldr	r2, [r2, #84]
 4116 00e6 02F00702 		and	r2, r2, #7
 4117 00ea 052A     		cmp	r2, #5
 4118 00ec 11D8     		bhi	.L284
 4119 00ee DFE812F0 		tbh	[pc, r2, lsl #1]
 4120              	.L286:
 4121 00f2 0600     		.2byte	(.L285-.L286)/2
 4122 00f4 F400     		.2byte	(.L376-.L286)/2
 4123 00f6 0800     		.2byte	(.L287-.L286)/2
 4124 00f8 0A00     		.2byte	(.L288-.L286)/2
 4125 00fa 0C00     		.2byte	(.L289-.L286)/2
 4126 00fc 0E00     		.2byte	(.L290-.L286)/2
 4127              		.p2align 1
 4128              	.L285:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4129              		.loc 1 2924 0
 4130 00fe 0022     		movs	r2, #0
 4131 0100 FCE0     		b	.L278
 4132              	.L287:
 4133              	.LVL362:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4134              		.loc 1 2924 0 discriminator 15
 4135 0102 0822     		movs	r2, #8
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 154


 4136 0104 FAE0     		b	.L278
 4137              	.LVL363:
 4138              	.L288:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4139              		.loc 1 2924 0 discriminator 16
 4140 0106 1022     		movs	r2, #16
 4141 0108 F8E0     		b	.L278
 4142              	.LVL364:
 4143              	.L289:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4144              		.loc 1 2924 0 discriminator 17
 4145 010a 2022     		movs	r2, #32
 4146 010c F6E0     		b	.L278
 4147              	.LVL365:
 4148              	.L290:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4149              		.loc 1 2924 0 discriminator 18
 4150 010e 4022     		movs	r2, #64
 4151 0110 F4E0     		b	.L278
 4152              	.LVL366:
 4153              	.L284:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4154              		.loc 1 2924 0 discriminator 12
 4155 0112 8022     		movs	r2, #128
 4156 0114 F2E0     		b	.L278
 4157              	.LVL367:
 4158              	.L283:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4159              		.loc 1 2924 0 discriminator 11
 4160 0116 444A     		ldr	r2, .L397+24
 4161 0118 9342     		cmp	r3, r2
 4162 011a 19D1     		bne	.L291
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4163              		.loc 1 2924 0 discriminator 19
 4164 011c 404A     		ldr	r2, .L397+16
 4165 011e 526D     		ldr	r2, [r2, #84]
 4166 0120 02F00702 		and	r2, r2, #7
 4167 0124 052A     		cmp	r2, #5
 4168 0126 11D8     		bhi	.L292
 4169 0128 DFE812F0 		tbh	[pc, r2, lsl #1]
 4170              	.L294:
 4171 012c 0600     		.2byte	(.L293-.L294)/2
 4172 012e D900     		.2byte	(.L377-.L294)/2
 4173 0130 0800     		.2byte	(.L295-.L294)/2
 4174 0132 0A00     		.2byte	(.L296-.L294)/2
 4175 0134 0C00     		.2byte	(.L297-.L294)/2
 4176 0136 0E00     		.2byte	(.L298-.L294)/2
 4177              		.p2align 1
 4178              	.L293:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4179              		.loc 1 2924 0
 4180 0138 0022     		movs	r2, #0
 4181 013a DFE0     		b	.L278
 4182              	.L295:
 4183              	.LVL368:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4184              		.loc 1 2924 0 discriminator 24
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 155


 4185 013c 0822     		movs	r2, #8
 4186 013e DDE0     		b	.L278
 4187              	.LVL369:
 4188              	.L296:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4189              		.loc 1 2924 0 discriminator 25
 4190 0140 1022     		movs	r2, #16
 4191 0142 DBE0     		b	.L278
 4192              	.LVL370:
 4193              	.L297:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4194              		.loc 1 2924 0 discriminator 26
 4195 0144 2022     		movs	r2, #32
 4196 0146 D9E0     		b	.L278
 4197              	.LVL371:
 4198              	.L298:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4199              		.loc 1 2924 0 discriminator 27
 4200 0148 4022     		movs	r2, #64
 4201 014a D7E0     		b	.L278
 4202              	.LVL372:
 4203              	.L292:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4204              		.loc 1 2924 0 discriminator 21
 4205 014c 8022     		movs	r2, #128
 4206 014e D5E0     		b	.L278
 4207              	.LVL373:
 4208              	.L291:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4209              		.loc 1 2924 0 discriminator 20
 4210 0150 364A     		ldr	r2, .L397+28
 4211 0152 9342     		cmp	r3, r2
 4212 0154 16D1     		bne	.L299
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4213              		.loc 1 2924 0 discriminator 28
 4214 0156 324A     		ldr	r2, .L397+16
 4215 0158 526D     		ldr	r2, [r2, #84]
 4216 015a 02F00702 		and	r2, r2, #7
 4217 015e 052A     		cmp	r2, #5
 4218 0160 0ED8     		bhi	.L300
 4219 0162 DFE802F0 		tbb	[pc, r2]
 4220              	.L302:
 4221 0166 03       		.byte	(.L301-.L302)/2
 4222 0167 BE       		.byte	(.L378-.L302)/2
 4223 0168 05       		.byte	(.L303-.L302)/2
 4224 0169 07       		.byte	(.L304-.L302)/2
 4225 016a 09       		.byte	(.L305-.L302)/2
 4226 016b 0B       		.byte	(.L306-.L302)/2
 4227              		.p2align 1
 4228              	.L301:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4229              		.loc 1 2924 0
 4230 016c 0022     		movs	r2, #0
 4231 016e C5E0     		b	.L278
 4232              	.L303:
 4233              	.LVL374:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 156


 4234              		.loc 1 2924 0 discriminator 33
 4235 0170 0822     		movs	r2, #8
 4236 0172 C3E0     		b	.L278
 4237              	.LVL375:
 4238              	.L304:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4239              		.loc 1 2924 0 discriminator 34
 4240 0174 1022     		movs	r2, #16
 4241 0176 C1E0     		b	.L278
 4242              	.LVL376:
 4243              	.L305:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4244              		.loc 1 2924 0 discriminator 35
 4245 0178 2022     		movs	r2, #32
 4246 017a BFE0     		b	.L278
 4247              	.LVL377:
 4248              	.L306:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4249              		.loc 1 2924 0 discriminator 36
 4250 017c 4022     		movs	r2, #64
 4251 017e BDE0     		b	.L278
 4252              	.LVL378:
 4253              	.L300:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4254              		.loc 1 2924 0 discriminator 30
 4255 0180 8022     		movs	r2, #128
 4256 0182 BBE0     		b	.L278
 4257              	.LVL379:
 4258              	.L299:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4259              		.loc 1 2924 0 discriminator 29
 4260 0184 2A4A     		ldr	r2, .L397+32
 4261 0186 9342     		cmp	r3, r2
 4262 0188 16D1     		bne	.L307
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4263              		.loc 1 2924 0 discriminator 37
 4264 018a 254A     		ldr	r2, .L397+16
 4265 018c 526D     		ldr	r2, [r2, #84]
 4266 018e 02F00702 		and	r2, r2, #7
 4267 0192 052A     		cmp	r2, #5
 4268 0194 0ED8     		bhi	.L308
 4269 0196 DFE802F0 		tbb	[pc, r2]
 4270              	.L310:
 4271 019a 03       		.byte	(.L309-.L310)/2
 4272 019b A6       		.byte	(.L379-.L310)/2
 4273 019c 05       		.byte	(.L311-.L310)/2
 4274 019d 07       		.byte	(.L312-.L310)/2
 4275 019e 09       		.byte	(.L313-.L310)/2
 4276 019f 0B       		.byte	(.L314-.L310)/2
 4277              		.p2align 1
 4278              	.L309:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4279              		.loc 1 2924 0
 4280 01a0 0022     		movs	r2, #0
 4281 01a2 ABE0     		b	.L278
 4282              	.L311:
 4283              	.LVL380:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 157


2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4284              		.loc 1 2924 0 discriminator 42
 4285 01a4 0822     		movs	r2, #8
 4286 01a6 A9E0     		b	.L278
 4287              	.LVL381:
 4288              	.L312:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4289              		.loc 1 2924 0 discriminator 43
 4290 01a8 1022     		movs	r2, #16
 4291 01aa A7E0     		b	.L278
 4292              	.LVL382:
 4293              	.L313:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4294              		.loc 1 2924 0 discriminator 44
 4295 01ac 2022     		movs	r2, #32
 4296 01ae A5E0     		b	.L278
 4297              	.LVL383:
 4298              	.L314:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4299              		.loc 1 2924 0 discriminator 45
 4300 01b0 4022     		movs	r2, #64
 4301 01b2 A3E0     		b	.L278
 4302              	.LVL384:
 4303              	.L308:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4304              		.loc 1 2924 0 discriminator 39
 4305 01b4 8022     		movs	r2, #128
 4306 01b6 A1E0     		b	.L278
 4307              	.LVL385:
 4308              	.L307:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4309              		.loc 1 2924 0 discriminator 38
 4310 01b8 1E4A     		ldr	r2, .L397+36
 4311 01ba 9342     		cmp	r3, r2
 4312 01bc 3CD1     		bne	.L315
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4313              		.loc 1 2924 0 discriminator 46
 4314 01be 184A     		ldr	r2, .L397+16
 4315 01c0 526D     		ldr	r2, [r2, #84]
 4316 01c2 02F03802 		and	r2, r2, #56
 4317 01c6 282A     		cmp	r2, #40
 4318 01c8 20D8     		bhi	.L316
 4319 01ca DFE802F0 		tbb	[pc, r2]
 4320              	.L318:
 4321 01ce 15       		.byte	(.L317-.L318)/2
 4322 01cf 1F       		.byte	(.L316-.L318)/2
 4323 01d0 1F       		.byte	(.L316-.L318)/2
 4324 01d1 1F       		.byte	(.L316-.L318)/2
 4325 01d2 1F       		.byte	(.L316-.L318)/2
 4326 01d3 1F       		.byte	(.L316-.L318)/2
 4327 01d4 1F       		.byte	(.L316-.L318)/2
 4328 01d5 1F       		.byte	(.L316-.L318)/2
 4329 01d6 8E       		.byte	(.L380-.L318)/2
 4330 01d7 1F       		.byte	(.L316-.L318)/2
 4331 01d8 1F       		.byte	(.L316-.L318)/2
 4332 01d9 1F       		.byte	(.L316-.L318)/2
 4333 01da 1F       		.byte	(.L316-.L318)/2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 158


 4334 01db 1F       		.byte	(.L316-.L318)/2
 4335 01dc 1F       		.byte	(.L316-.L318)/2
 4336 01dd 1F       		.byte	(.L316-.L318)/2
 4337 01de 17       		.byte	(.L319-.L318)/2
 4338 01df 1F       		.byte	(.L316-.L318)/2
 4339 01e0 1F       		.byte	(.L316-.L318)/2
 4340 01e1 1F       		.byte	(.L316-.L318)/2
 4341 01e2 1F       		.byte	(.L316-.L318)/2
 4342 01e3 1F       		.byte	(.L316-.L318)/2
 4343 01e4 1F       		.byte	(.L316-.L318)/2
 4344 01e5 1F       		.byte	(.L316-.L318)/2
 4345 01e6 19       		.byte	(.L320-.L318)/2
 4346 01e7 1F       		.byte	(.L316-.L318)/2
 4347 01e8 1F       		.byte	(.L316-.L318)/2
 4348 01e9 1F       		.byte	(.L316-.L318)/2
 4349 01ea 1F       		.byte	(.L316-.L318)/2
 4350 01eb 1F       		.byte	(.L316-.L318)/2
 4351 01ec 1F       		.byte	(.L316-.L318)/2
 4352 01ed 1F       		.byte	(.L316-.L318)/2
 4353 01ee 1B       		.byte	(.L321-.L318)/2
 4354 01ef 1F       		.byte	(.L316-.L318)/2
 4355 01f0 1F       		.byte	(.L316-.L318)/2
 4356 01f1 1F       		.byte	(.L316-.L318)/2
 4357 01f2 1F       		.byte	(.L316-.L318)/2
 4358 01f3 1F       		.byte	(.L316-.L318)/2
 4359 01f4 1F       		.byte	(.L316-.L318)/2
 4360 01f5 1F       		.byte	(.L316-.L318)/2
 4361 01f6 1D       		.byte	(.L322-.L318)/2
 4362 01f7 00       		.p2align 1
 4363              	.L317:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4364              		.loc 1 2924 0
 4365 01f8 0122     		movs	r2, #1
 4366 01fa 7FE0     		b	.L278
 4367              	.L319:
 4368              	.LVL386:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4369              		.loc 1 2924 0 discriminator 51
 4370 01fc 0822     		movs	r2, #8
 4371 01fe 7DE0     		b	.L278
 4372              	.LVL387:
 4373              	.L320:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4374              		.loc 1 2924 0 discriminator 52
 4375 0200 1022     		movs	r2, #16
 4376 0202 7BE0     		b	.L278
 4377              	.LVL388:
 4378              	.L321:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4379              		.loc 1 2924 0 discriminator 53
 4380 0204 2022     		movs	r2, #32
 4381 0206 79E0     		b	.L278
 4382              	.LVL389:
 4383              	.L322:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4384              		.loc 1 2924 0 discriminator 54
 4385 0208 4022     		movs	r2, #64
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 159


 4386 020a 77E0     		b	.L278
 4387              	.LVL390:
 4388              	.L316:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4389              		.loc 1 2924 0 discriminator 48
 4390 020c 8022     		movs	r2, #128
 4391 020e 75E0     		b	.L278
 4392              	.L398:
 4393              		.align	2
 4394              	.L397:
 4395 0210 F369FFCF 		.word	-805344781
 4396 0214 000C0058 		.word	1476398080
 4397 0218 FFF4FF11 		.word	301987071
 4398 021c 00100140 		.word	1073811456
 4399 0220 00440258 		.word	1476543488
 4400 0224 00440040 		.word	1073759232
 4401 0228 00480040 		.word	1073760256
 4402 022c 004C0040 		.word	1073761280
 4403 0230 00500040 		.word	1073762304
 4404 0234 00140140 		.word	1073812480
 4405              	.LVL391:
 4406              	.L315:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4407              		.loc 1 2924 0 discriminator 47
 4408 0238 884A     		ldr	r2, .L399
 4409 023a 9342     		cmp	r3, r2
 4410 023c 16D1     		bne	.L323
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4411              		.loc 1 2924 0 discriminator 55
 4412 023e 884A     		ldr	r2, .L399+4
 4413 0240 526D     		ldr	r2, [r2, #84]
 4414 0242 02F00702 		and	r2, r2, #7
 4415 0246 052A     		cmp	r2, #5
 4416 0248 0ED8     		bhi	.L324
 4417 024a DFE802F0 		tbb	[pc, r2]
 4418              	.L326:
 4419 024e 03       		.byte	(.L325-.L326)/2
 4420 024f 50       		.byte	(.L381-.L326)/2
 4421 0250 05       		.byte	(.L327-.L326)/2
 4422 0251 07       		.byte	(.L328-.L326)/2
 4423 0252 09       		.byte	(.L329-.L326)/2
 4424 0253 0B       		.byte	(.L330-.L326)/2
 4425              		.p2align 1
 4426              	.L325:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4427              		.loc 1 2924 0
 4428 0254 0022     		movs	r2, #0
 4429 0256 51E0     		b	.L278
 4430              	.L327:
 4431              	.LVL392:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4432              		.loc 1 2924 0 discriminator 60
 4433 0258 0822     		movs	r2, #8
 4434 025a 4FE0     		b	.L278
 4435              	.LVL393:
 4436              	.L328:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 160


 4437              		.loc 1 2924 0 discriminator 61
 4438 025c 1022     		movs	r2, #16
 4439 025e 4DE0     		b	.L278
 4440              	.LVL394:
 4441              	.L329:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4442              		.loc 1 2924 0 discriminator 62
 4443 0260 2022     		movs	r2, #32
 4444 0262 4BE0     		b	.L278
 4445              	.LVL395:
 4446              	.L330:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4447              		.loc 1 2924 0 discriminator 63
 4448 0264 4022     		movs	r2, #64
 4449 0266 49E0     		b	.L278
 4450              	.LVL396:
 4451              	.L324:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4452              		.loc 1 2924 0 discriminator 57
 4453 0268 8022     		movs	r2, #128
 4454 026a 47E0     		b	.L278
 4455              	.LVL397:
 4456              	.L323:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4457              		.loc 1 2924 0 discriminator 56
 4458 026c 7D4A     		ldr	r2, .L399+8
 4459 026e 9342     		cmp	r3, r2
 4460 0270 16D1     		bne	.L331
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4461              		.loc 1 2924 0 discriminator 64
 4462 0272 7B4A     		ldr	r2, .L399+4
 4463 0274 526D     		ldr	r2, [r2, #84]
 4464 0276 02F00702 		and	r2, r2, #7
 4465 027a 052A     		cmp	r2, #5
 4466 027c 0ED8     		bhi	.L332
 4467 027e DFE802F0 		tbb	[pc, r2]
 4468              	.L334:
 4469 0282 03       		.byte	(.L333-.L334)/2
 4470 0283 38       		.byte	(.L382-.L334)/2
 4471 0284 05       		.byte	(.L335-.L334)/2
 4472 0285 07       		.byte	(.L336-.L334)/2
 4473 0286 09       		.byte	(.L337-.L334)/2
 4474 0287 0B       		.byte	(.L338-.L334)/2
 4475              		.p2align 1
 4476              	.L333:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4477              		.loc 1 2924 0
 4478 0288 0022     		movs	r2, #0
 4479 028a 37E0     		b	.L278
 4480              	.L335:
 4481              	.LVL398:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4482              		.loc 1 2924 0 discriminator 69
 4483 028c 0822     		movs	r2, #8
 4484 028e 35E0     		b	.L278
 4485              	.LVL399:
 4486              	.L336:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 161


2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4487              		.loc 1 2924 0 discriminator 70
 4488 0290 1022     		movs	r2, #16
 4489 0292 33E0     		b	.L278
 4490              	.LVL400:
 4491              	.L337:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4492              		.loc 1 2924 0 discriminator 71
 4493 0294 2022     		movs	r2, #32
 4494 0296 31E0     		b	.L278
 4495              	.LVL401:
 4496              	.L338:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4497              		.loc 1 2924 0 discriminator 72
 4498 0298 4022     		movs	r2, #64
 4499 029a 2FE0     		b	.L278
 4500              	.LVL402:
 4501              	.L332:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4502              		.loc 1 2924 0 discriminator 66
 4503 029c 8022     		movs	r2, #128
 4504 029e 2DE0     		b	.L278
 4505              	.LVL403:
 4506              	.L331:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4507              		.loc 1 2924 0 discriminator 65
 4508 02a0 714A     		ldr	r2, .L399+12
 4509 02a2 9342     		cmp	r3, r2
 4510 02a4 27D1     		bne	.L383
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4511              		.loc 1 2924 0 discriminator 73
 4512 02a6 02F50E32 		add	r2, r2, #145408
 4513 02aa 926D     		ldr	r2, [r2, #88]
 4514 02ac 02F00702 		and	r2, r2, #7
 4515 02b0 052A     		cmp	r2, #5
 4516 02b2 0ED8     		bhi	.L339
 4517 02b4 DFE802F0 		tbb	[pc, r2]
 4518              	.L341:
 4519 02b8 03       		.byte	(.L340-.L341)/2
 4520 02b9 21       		.byte	(.L384-.L341)/2
 4521 02ba 05       		.byte	(.L342-.L341)/2
 4522 02bb 07       		.byte	(.L343-.L341)/2
 4523 02bc 09       		.byte	(.L344-.L341)/2
 4524 02bd 0B       		.byte	(.L345-.L341)/2
 4525              		.p2align 1
 4526              	.L340:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4527              		.loc 1 2924 0
 4528 02be 0222     		movs	r2, #2
 4529 02c0 1CE0     		b	.L278
 4530              	.L342:
 4531              	.LVL404:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4532              		.loc 1 2924 0 discriminator 78
 4533 02c2 0822     		movs	r2, #8
 4534 02c4 1AE0     		b	.L278
 4535              	.LVL405:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 162


 4536              	.L343:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4537              		.loc 1 2924 0 discriminator 79
 4538 02c6 1022     		movs	r2, #16
 4539 02c8 18E0     		b	.L278
 4540              	.LVL406:
 4541              	.L344:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4542              		.loc 1 2924 0 discriminator 80
 4543 02ca 2022     		movs	r2, #32
 4544 02cc 16E0     		b	.L278
 4545              	.LVL407:
 4546              	.L345:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4547              		.loc 1 2924 0 discriminator 81
 4548 02ce 4022     		movs	r2, #64
 4549 02d0 14E0     		b	.L278
 4550              	.LVL408:
 4551              	.L339:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4552              		.loc 1 2924 0 discriminator 75
 4553 02d2 8022     		movs	r2, #128
 4554 02d4 12E0     		b	.L278
 4555              	.LVL409:
 4556              	.L375:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4557              		.loc 1 2924 0
 4558 02d6 0422     		movs	r2, #4
 4559 02d8 10E0     		b	.L278
 4560              	.L376:
 4561 02da 0422     		movs	r2, #4
 4562 02dc 0EE0     		b	.L278
 4563              	.L377:
 4564 02de 0422     		movs	r2, #4
 4565 02e0 0CE0     		b	.L278
 4566              	.L378:
 4567 02e2 0422     		movs	r2, #4
 4568 02e4 0AE0     		b	.L278
 4569              	.L379:
 4570 02e6 0422     		movs	r2, #4
 4571 02e8 08E0     		b	.L278
 4572              	.L380:
 4573 02ea 0422     		movs	r2, #4
 4574 02ec 06E0     		b	.L278
 4575              	.L381:
 4576 02ee 0422     		movs	r2, #4
 4577 02f0 04E0     		b	.L278
 4578              	.L382:
 4579 02f2 0422     		movs	r2, #4
 4580 02f4 02E0     		b	.L278
 4581              	.L383:
 4582 02f6 8022     		movs	r2, #128
 4583 02f8 00E0     		b	.L278
 4584              	.L384:
 4585 02fa 0422     		movs	r2, #4
 4586              	.L278:
 4587              	.LVL410:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 163


2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4588              		.loc 1 2927 0 is_stmt 1
 4589 02fc 5A49     		ldr	r1, .L399+12
 4590 02fe 8B42     		cmp	r3, r1
 4591 0300 6BD1     		bne	.L346
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4592              		.loc 1 2930 0
 4593 0302 082A     		cmp	r2, #8
 4594 0304 19D0     		beq	.L348
 4595 0306 04D8     		bhi	.L349
 4596 0308 022A     		cmp	r2, #2
 4597 030a 0CD0     		beq	.L350
 4598 030c 042A     		cmp	r2, #4
 4599 030e 0ED0     		beq	.L351
 4600 0310 27E0     		b	.L347
 4601              	.L349:
 4602 0312 202A     		cmp	r2, #32
 4603 0314 04D0     		beq	.L352
 4604 0316 402A     		cmp	r2, #64
 4605 0318 26D0     		beq	.L385
 4606 031a 102A     		cmp	r2, #16
 4607 031c 21D1     		bne	.L347
 4608 031e 12E0     		b	.L354
 4609              	.L352:
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4610              		.loc 1 2954 0
 4611 0320 5248     		ldr	r0, .L399+16
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4612              		.loc 1 2863 0
 4613 0322 0025     		movs	r5, #0
 4614 0324 26E0     		b	.L353
 4615              	.L350:
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4616              		.loc 1 2933 0
 4617 0326 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 4618              	.LVL411:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4619              		.loc 1 2863 0
 4620 032a 0025     		movs	r5, #0
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
 4621              		.loc 1 2934 0
 4622 032c 22E0     		b	.L353
 4623              	.LVL412:
 4624              	.L351:
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 4625              		.loc 1 2936 0
 4626 032e 03A8     		add	r0, sp, #12
 4627 0330 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 4628              	.LVL413:
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4629              		.loc 1 2937 0
 4630 0334 0498     		ldr	r0, [sp, #16]
 4631              	.LVL414:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4632              		.loc 1 2863 0
 4633 0336 0025     		movs	r5, #0
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 164


 4634              		.loc 1 2938 0
 4635 0338 1CE0     		b	.L353
 4636              	.LVL415:
 4637              	.L348:
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 4638              		.loc 1 2940 0
 4639 033a 6846     		mov	r0, sp
 4640 033c FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 4641              	.LVL416:
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4642              		.loc 1 2941 0
 4643 0340 0198     		ldr	r0, [sp, #4]
 4644              	.LVL417:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4645              		.loc 1 2863 0
 4646 0342 0025     		movs	r5, #0
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4647              		.loc 1 2942 0
 4648 0344 16E0     		b	.L353
 4649              	.LVL418:
 4650              	.L354:
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 4651              		.loc 1 2944 0
 4652 0346 464B     		ldr	r3, .L399+4
 4653 0348 1B68     		ldr	r3, [r3]
 4654 034a 13F0200F 		tst	r3, #32
 4655 034e 0FD0     		beq	.L386
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 4656              		.loc 1 2946 0
 4657 0350 434B     		ldr	r3, .L399+4
 4658 0352 1868     		ldr	r0, [r3]
 4659 0354 C0F3C100 		ubfx	r0, r0, #3, #2
 4660 0358 454B     		ldr	r3, .L399+20
 4661 035a 23FA00F0 		lsr	r0, r3, r0
 4662              	.LVL419:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4663              		.loc 1 2863 0
 4664 035e 0025     		movs	r5, #0
 4665 0360 08E0     		b	.L353
 4666              	.LVL420:
 4667              	.L347:
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 4668              		.loc 1 2960 0
 4669 0362 0020     		movs	r0, #0
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4670              		.loc 1 2961 0
 4671 0364 0125     		movs	r5, #1
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4672              		.loc 1 2962 0
 4673 0366 05E0     		b	.L353
 4674              	.LVL421:
 4675              	.L385:
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4676              		.loc 1 2957 0
 4677 0368 4FF40040 		mov	r0, #32768
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4678              		.loc 1 2863 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 165


 4679 036c 0025     		movs	r5, #0
 4680 036e 01E0     		b	.L353
 4681              	.L386:
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 4682              		.loc 1 2950 0
 4683 0370 3F48     		ldr	r0, .L399+20
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4684              		.loc 1 2863 0
 4685 0372 0025     		movs	r5, #0
 4686              	.LVL422:
 4687              	.L353:
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4688              		.loc 1 2966 0
 4689 0374 0028     		cmp	r0, #0
 4690 0376 00F02881 		beq	.L355
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4691              		.loc 1 2969 0
 4692 037a 626A     		ldr	r2, [r4, #36]
 4693 037c 3D4B     		ldr	r3, .L399+24
 4694 037e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4695 0382 B0FBF2F3 		udiv	r3, r0, r2
 4696              	.LVL423:
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4697              		.loc 1 2972 0
 4698 0386 6668     		ldr	r6, [r4, #4]
 4699 0388 06EB4601 		add	r1, r6, r6, lsl #1
 4700 038c 8B42     		cmp	r3, r1
 4701 038e C0F01381 		bcc	.L387
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4702              		.loc 1 2972 0 is_stmt 0 discriminator 1
 4703 0392 B3EB063F 		cmp	r3, r6, lsl #12
 4704 0396 00F21181 		bhi	.L388
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 4705              		.loc 1 2981 0 is_stmt 1
 4706 039a 0027     		movs	r7, #0
 4707 039c 92B2     		uxth	r2, r2
 4708 039e 0023     		movs	r3, #0
 4709              	.LVL424:
 4710 03a0 3946     		mov	r1, r7
 4711 03a2 FFF7FEFF 		bl	__aeabi_uldivmod
 4712              	.LVL425:
 4713 03a6 4FEA0129 		lsl	r9, r1, #8
 4714 03aa 49EA1069 		orr	r9, r9, r0, lsr #24
 4715 03ae 4FEA0028 		lsl	r8, r0, #8
 4716 03b2 7008     		lsrs	r0, r6, #1
 4717 03b4 3246     		mov	r2, r6
 4718 03b6 3B46     		mov	r3, r7
 4719 03b8 18EB0006 		adds	r6, r8, r0
 4720 03bc 49F10007 		adc	r7, r9, #0
 4721 03c0 3046     		mov	r0, r6
 4722 03c2 3946     		mov	r1, r7
 4723 03c4 FFF7FEFF 		bl	__aeabi_uldivmod
 4724              	.LVL426:
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 4725              		.loc 1 2982 0
 4726 03c8 A0F54072 		sub	r2, r0, #768
 4727 03cc 2A4B     		ldr	r3, .L399+28
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 166


 4728 03ce 9A42     		cmp	r2, r3
 4729 03d0 00F2F680 		bhi	.L389
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 4730              		.loc 1 2984 0
 4731 03d4 2368     		ldr	r3, [r4]
 4732 03d6 D860     		str	r0, [r3, #12]
 4733 03d8 F7E0     		b	.L355
 4734              	.LVL427:
 4735              	.L346:
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4736              		.loc 1 2994 0
 4737 03da E369     		ldr	r3, [r4, #28]
 4738 03dc B3F5004F 		cmp	r3, #32768
 4739 03e0 40F08180 		bne	.L356
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4740              		.loc 1 2996 0
 4741 03e4 402A     		cmp	r2, #64
 4742 03e6 57D8     		bhi	.L357
 4743 03e8 DFE802F0 		tbb	[pc, r2]
 4744              	.L359:
 4745 03ec 24       		.byte	(.L358-.L359)/2
 4746 03ed 28       		.byte	(.L360-.L359)/2
 4747 03ee 56       		.byte	(.L357-.L359)/2
 4748 03ef 56       		.byte	(.L357-.L359)/2
 4749 03f0 2C       		.byte	(.L361-.L359)/2
 4750 03f1 56       		.byte	(.L357-.L359)/2
 4751 03f2 56       		.byte	(.L357-.L359)/2
 4752 03f3 56       		.byte	(.L357-.L359)/2
 4753 03f4 32       		.byte	(.L362-.L359)/2
 4754 03f5 56       		.byte	(.L357-.L359)/2
 4755 03f6 56       		.byte	(.L357-.L359)/2
 4756 03f7 56       		.byte	(.L357-.L359)/2
 4757 03f8 56       		.byte	(.L357-.L359)/2
 4758 03f9 56       		.byte	(.L357-.L359)/2
 4759 03fa 56       		.byte	(.L357-.L359)/2
 4760 03fb 56       		.byte	(.L357-.L359)/2
 4761 03fc 48       		.byte	(.L363-.L359)/2
 4762 03fd 56       		.byte	(.L357-.L359)/2
 4763 03fe 56       		.byte	(.L357-.L359)/2
 4764 03ff 56       		.byte	(.L357-.L359)/2
 4765 0400 56       		.byte	(.L357-.L359)/2
 4766 0401 56       		.byte	(.L357-.L359)/2
 4767 0402 56       		.byte	(.L357-.L359)/2
 4768 0403 56       		.byte	(.L357-.L359)/2
 4769 0404 56       		.byte	(.L357-.L359)/2
 4770 0405 56       		.byte	(.L357-.L359)/2
 4771 0406 56       		.byte	(.L357-.L359)/2
 4772 0407 56       		.byte	(.L357-.L359)/2
 4773 0408 56       		.byte	(.L357-.L359)/2
 4774 0409 56       		.byte	(.L357-.L359)/2
 4775 040a 56       		.byte	(.L357-.L359)/2
 4776 040b 56       		.byte	(.L357-.L359)/2
 4777 040c 21       		.byte	(.L364-.L359)/2
 4778 040d 56       		.byte	(.L357-.L359)/2
 4779 040e 56       		.byte	(.L357-.L359)/2
 4780 040f 56       		.byte	(.L357-.L359)/2
 4781 0410 56       		.byte	(.L357-.L359)/2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 167


 4782 0411 56       		.byte	(.L357-.L359)/2
 4783 0412 56       		.byte	(.L357-.L359)/2
 4784 0413 56       		.byte	(.L357-.L359)/2
 4785 0414 56       		.byte	(.L357-.L359)/2
 4786 0415 56       		.byte	(.L357-.L359)/2
 4787 0416 56       		.byte	(.L357-.L359)/2
 4788 0417 56       		.byte	(.L357-.L359)/2
 4789 0418 56       		.byte	(.L357-.L359)/2
 4790 0419 56       		.byte	(.L357-.L359)/2
 4791 041a 56       		.byte	(.L357-.L359)/2
 4792 041b 56       		.byte	(.L357-.L359)/2
 4793 041c 56       		.byte	(.L357-.L359)/2
 4794 041d 56       		.byte	(.L357-.L359)/2
 4795 041e 56       		.byte	(.L357-.L359)/2
 4796 041f 56       		.byte	(.L357-.L359)/2
 4797 0420 56       		.byte	(.L357-.L359)/2
 4798 0421 56       		.byte	(.L357-.L359)/2
 4799 0422 56       		.byte	(.L357-.L359)/2
 4800 0423 56       		.byte	(.L357-.L359)/2
 4801 0424 56       		.byte	(.L357-.L359)/2
 4802 0425 56       		.byte	(.L357-.L359)/2
 4803 0426 56       		.byte	(.L357-.L359)/2
 4804 0427 56       		.byte	(.L357-.L359)/2
 4805 0428 56       		.byte	(.L357-.L359)/2
 4806 0429 56       		.byte	(.L357-.L359)/2
 4807 042a 56       		.byte	(.L357-.L359)/2
 4808 042b 56       		.byte	(.L357-.L359)/2
 4809 042c 59       		.byte	(.L390-.L359)/2
 4810 042d 00       		.p2align 1
 4811              	.L364:
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4812              		.loc 1 3023 0
 4813 042e 0F48     		ldr	r0, .L399+16
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4814              		.loc 1 2863 0
 4815 0430 0025     		movs	r5, #0
 4816 0432 3AE0     		b	.L365
 4817              	.L358:
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4818              		.loc 1 2999 0
 4819 0434 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4820              	.LVL428:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4821              		.loc 1 2863 0
 4822 0438 0025     		movs	r5, #0
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
 4823              		.loc 1 3000 0
 4824 043a 36E0     		b	.L365
 4825              	.LVL429:
 4826              	.L360:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4827              		.loc 1 3002 0
 4828 043c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4829              	.LVL430:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4830              		.loc 1 2863 0
 4831 0440 0025     		movs	r5, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 168


3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
 4832              		.loc 1 3003 0
 4833 0442 32E0     		b	.L365
 4834              	.LVL431:
 4835              	.L361:
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 4836              		.loc 1 3005 0
 4837 0444 03A8     		add	r0, sp, #12
 4838 0446 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 4839              	.LVL432:
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4840              		.loc 1 3006 0
 4841 044a 0498     		ldr	r0, [sp, #16]
 4842              	.LVL433:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4843              		.loc 1 2863 0
 4844 044c 0025     		movs	r5, #0
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
 4845              		.loc 1 3007 0
 4846 044e 2CE0     		b	.L365
 4847              	.LVL434:
 4848              	.L362:
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 4849              		.loc 1 3009 0
 4850 0450 6846     		mov	r0, sp
 4851 0452 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 4852              	.LVL435:
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4853              		.loc 1 3010 0
 4854 0456 0198     		ldr	r0, [sp, #4]
 4855              	.LVL436:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4856              		.loc 1 2863 0
 4857 0458 0025     		movs	r5, #0
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4858              		.loc 1 3011 0
 4859 045a 26E0     		b	.L365
 4860              	.L400:
 4861              		.align	2
 4862              	.L399:
 4863 045c 00780040 		.word	1073772544
 4864 0460 00440258 		.word	1476543488
 4865 0464 007C0040 		.word	1073773568
 4866 0468 000C0058 		.word	1476398080
 4867 046c 00093D00 		.word	4000000
 4868 0470 0090D003 		.word	64000000
 4869 0474 00000000 		.word	.LANCHOR0
 4870 0478 FFFC0F00 		.word	1047807
 4871              	.LVL437:
 4872              	.L363:
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 4873              		.loc 1 3013 0
 4874 047c 594B     		ldr	r3, .L401
 4875 047e 1B68     		ldr	r3, [r3]
 4876 0480 13F0200F 		tst	r3, #32
 4877 0484 0FD0     		beq	.L391
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 169


 4878              		.loc 1 3015 0
 4879 0486 574B     		ldr	r3, .L401
 4880 0488 1868     		ldr	r0, [r3]
 4881 048a C0F3C100 		ubfx	r0, r0, #3, #2
 4882 048e 564B     		ldr	r3, .L401+4
 4883 0490 23FA00F0 		lsr	r0, r3, r0
 4884              	.LVL438:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4885              		.loc 1 2863 0
 4886 0494 0025     		movs	r5, #0
 4887 0496 08E0     		b	.L365
 4888              	.LVL439:
 4889              	.L357:
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 4890              		.loc 1 3029 0
 4891 0498 0020     		movs	r0, #0
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4892              		.loc 1 3030 0
 4893 049a 0125     		movs	r5, #1
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4894              		.loc 1 3031 0
 4895 049c 05E0     		b	.L365
 4896              	.LVL440:
 4897              	.L390:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 4898              		.loc 1 3026 0
 4899 049e 4FF40040 		mov	r0, #32768
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4900              		.loc 1 2863 0
 4901 04a2 0025     		movs	r5, #0
 4902 04a4 01E0     		b	.L365
 4903              	.L391:
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 4904              		.loc 1 3019 0
 4905 04a6 5048     		ldr	r0, .L401+4
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 4906              		.loc 1 2863 0
 4907 04a8 0025     		movs	r5, #0
 4908              	.LVL441:
 4909              	.L365:
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4910              		.loc 1 3035 0
 4911 04aa 0028     		cmp	r0, #0
 4912 04ac 00F08D80 		beq	.L355
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 4913              		.loc 1 3037 0
 4914 04b0 626A     		ldr	r2, [r4, #36]
 4915 04b2 4E4B     		ldr	r3, .L401+8
 4916 04b4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4917 04b8 B0FBF3F0 		udiv	r0, r0, r3
 4918              	.LVL442:
 4919 04bc 6368     		ldr	r3, [r4, #4]
 4920 04be 5A08     		lsrs	r2, r3, #1
 4921 04c0 02EB4000 		add	r0, r2, r0, lsl #1
 4922 04c4 B0FBF3F3 		udiv	r3, r0, r3
 4923              	.LVL443:
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 170


 4924              		.loc 1 3038 0
 4925 04c8 9AB2     		uxth	r2, r3
 4926 04ca 103A     		subs	r2, r2, #16
 4927 04cc 4FF6EF71 		movw	r1, #65519
 4928 04d0 8A42     		cmp	r2, r1
 4929 04d2 77D8     		bhi	.L392
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4930              		.loc 1 3040 0
 4931 04d4 9AB2     		uxth	r2, r3
 4932 04d6 22F00F02 		bic	r2, r2, #15
 4933              	.LVL444:
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 4934              		.loc 1 3041 0
 4935 04da C3F34203 		ubfx	r3, r3, #1, #3
 4936              	.LVL445:
 4937 04de 1343     		orrs	r3, r3, r2
 4938              	.LVL446:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4939              		.loc 1 3042 0
 4940 04e0 2268     		ldr	r2, [r4]
 4941 04e2 D360     		str	r3, [r2, #12]
 4942              	.LVL447:
 4943 04e4 71E0     		b	.L355
 4944              	.LVL448:
 4945              	.L356:
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4946              		.loc 1 3052 0
 4947 04e6 402A     		cmp	r2, #64
 4948 04e8 47D8     		bhi	.L366
 4949 04ea DFE802F0 		tbb	[pc, r2]
 4950              	.L368:
 4951 04ee 24       		.byte	(.L367-.L368)/2
 4952 04ef 28       		.byte	(.L369-.L368)/2
 4953 04f0 46       		.byte	(.L366-.L368)/2
 4954 04f1 46       		.byte	(.L366-.L368)/2
 4955 04f2 2C       		.byte	(.L370-.L368)/2
 4956 04f3 46       		.byte	(.L366-.L368)/2
 4957 04f4 46       		.byte	(.L366-.L368)/2
 4958 04f5 46       		.byte	(.L366-.L368)/2
 4959 04f6 32       		.byte	(.L371-.L368)/2
 4960 04f7 46       		.byte	(.L366-.L368)/2
 4961 04f8 46       		.byte	(.L366-.L368)/2
 4962 04f9 46       		.byte	(.L366-.L368)/2
 4963 04fa 46       		.byte	(.L366-.L368)/2
 4964 04fb 46       		.byte	(.L366-.L368)/2
 4965 04fc 46       		.byte	(.L366-.L368)/2
 4966 04fd 46       		.byte	(.L366-.L368)/2
 4967 04fe 38       		.byte	(.L372-.L368)/2
 4968 04ff 46       		.byte	(.L366-.L368)/2
 4969 0500 46       		.byte	(.L366-.L368)/2
 4970 0501 46       		.byte	(.L366-.L368)/2
 4971 0502 46       		.byte	(.L366-.L368)/2
 4972 0503 46       		.byte	(.L366-.L368)/2
 4973 0504 46       		.byte	(.L366-.L368)/2
 4974 0505 46       		.byte	(.L366-.L368)/2
 4975 0506 46       		.byte	(.L366-.L368)/2
 4976 0507 46       		.byte	(.L366-.L368)/2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 171


 4977 0508 46       		.byte	(.L366-.L368)/2
 4978 0509 46       		.byte	(.L366-.L368)/2
 4979 050a 46       		.byte	(.L366-.L368)/2
 4980 050b 46       		.byte	(.L366-.L368)/2
 4981 050c 46       		.byte	(.L366-.L368)/2
 4982 050d 46       		.byte	(.L366-.L368)/2
 4983 050e 21       		.byte	(.L373-.L368)/2
 4984 050f 46       		.byte	(.L366-.L368)/2
 4985 0510 46       		.byte	(.L366-.L368)/2
 4986 0511 46       		.byte	(.L366-.L368)/2
 4987 0512 46       		.byte	(.L366-.L368)/2
 4988 0513 46       		.byte	(.L366-.L368)/2
 4989 0514 46       		.byte	(.L366-.L368)/2
 4990 0515 46       		.byte	(.L366-.L368)/2
 4991 0516 46       		.byte	(.L366-.L368)/2
 4992 0517 46       		.byte	(.L366-.L368)/2
 4993 0518 46       		.byte	(.L366-.L368)/2
 4994 0519 46       		.byte	(.L366-.L368)/2
 4995 051a 46       		.byte	(.L366-.L368)/2
 4996 051b 46       		.byte	(.L366-.L368)/2
 4997 051c 46       		.byte	(.L366-.L368)/2
 4998 051d 46       		.byte	(.L366-.L368)/2
 4999 051e 46       		.byte	(.L366-.L368)/2
 5000 051f 46       		.byte	(.L366-.L368)/2
 5001 0520 46       		.byte	(.L366-.L368)/2
 5002 0521 46       		.byte	(.L366-.L368)/2
 5003 0522 46       		.byte	(.L366-.L368)/2
 5004 0523 46       		.byte	(.L366-.L368)/2
 5005 0524 46       		.byte	(.L366-.L368)/2
 5006 0525 46       		.byte	(.L366-.L368)/2
 5007 0526 46       		.byte	(.L366-.L368)/2
 5008 0527 46       		.byte	(.L366-.L368)/2
 5009 0528 46       		.byte	(.L366-.L368)/2
 5010 0529 46       		.byte	(.L366-.L368)/2
 5011 052a 46       		.byte	(.L366-.L368)/2
 5012 052b 46       		.byte	(.L366-.L368)/2
 5013 052c 46       		.byte	(.L366-.L368)/2
 5014 052d 46       		.byte	(.L366-.L368)/2
 5015 052e 49       		.byte	(.L393-.L368)/2
 5016 052f 00       		.p2align 1
 5017              	.L373:
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5018              		.loc 1 3079 0
 5019 0530 2F48     		ldr	r0, .L401+12
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5020              		.loc 1 2863 0
 5021 0532 0025     		movs	r5, #0
 5022 0534 2AE0     		b	.L374
 5023              	.L367:
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5024              		.loc 1 3055 0
 5025 0536 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5026              	.LVL449:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5027              		.loc 1 2863 0
 5028 053a 0025     		movs	r5, #0
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 172


 5029              		.loc 1 3056 0
 5030 053c 26E0     		b	.L374
 5031              	.LVL450:
 5032              	.L369:
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5033              		.loc 1 3058 0
 5034 053e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5035              	.LVL451:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5036              		.loc 1 2863 0
 5037 0542 0025     		movs	r5, #0
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
 5038              		.loc 1 3059 0
 5039 0544 22E0     		b	.L374
 5040              	.LVL452:
 5041              	.L370:
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 5042              		.loc 1 3061 0
 5043 0546 03A8     		add	r0, sp, #12
 5044 0548 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 5045              	.LVL453:
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5046              		.loc 1 3062 0
 5047 054c 0498     		ldr	r0, [sp, #16]
 5048              	.LVL454:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5049              		.loc 1 2863 0
 5050 054e 0025     		movs	r5, #0
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
 5051              		.loc 1 3063 0
 5052 0550 1CE0     		b	.L374
 5053              	.LVL455:
 5054              	.L371:
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 5055              		.loc 1 3065 0
 5056 0552 6846     		mov	r0, sp
 5057 0554 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 5058              	.LVL456:
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5059              		.loc 1 3066 0
 5060 0558 0198     		ldr	r0, [sp, #4]
 5061              	.LVL457:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5062              		.loc 1 2863 0
 5063 055a 0025     		movs	r5, #0
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 5064              		.loc 1 3067 0
 5065 055c 16E0     		b	.L374
 5066              	.LVL458:
 5067              	.L372:
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5068              		.loc 1 3069 0
 5069 055e 214B     		ldr	r3, .L401
 5070 0560 1B68     		ldr	r3, [r3]
 5071 0562 13F0200F 		tst	r3, #32
 5072 0566 0FD0     		beq	.L394
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 173


 5073              		.loc 1 3071 0
 5074 0568 1E4B     		ldr	r3, .L401
 5075 056a 1868     		ldr	r0, [r3]
 5076 056c C0F3C100 		ubfx	r0, r0, #3, #2
 5077 0570 1D4B     		ldr	r3, .L401+4
 5078 0572 23FA00F0 		lsr	r0, r3, r0
 5079              	.LVL459:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5080              		.loc 1 2863 0
 5081 0576 0025     		movs	r5, #0
 5082 0578 08E0     		b	.L374
 5083              	.LVL460:
 5084              	.L366:
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 5085              		.loc 1 3085 0
 5086 057a 0020     		movs	r0, #0
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5087              		.loc 1 3086 0
 5088 057c 0125     		movs	r5, #1
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5089              		.loc 1 3087 0
 5090 057e 05E0     		b	.L374
 5091              	.LVL461:
 5092              	.L393:
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 5093              		.loc 1 3082 0
 5094 0580 4FF40040 		mov	r0, #32768
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5095              		.loc 1 2863 0
 5096 0584 0025     		movs	r5, #0
 5097 0586 01E0     		b	.L374
 5098              	.L394:
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5099              		.loc 1 3075 0
 5100 0588 1748     		ldr	r0, .L401+4
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
 5101              		.loc 1 2863 0
 5102 058a 0025     		movs	r5, #0
 5103              	.LVL462:
 5104              	.L374:
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5105              		.loc 1 3090 0
 5106 058c E8B1     		cbz	r0, .L355
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5107              		.loc 1 3093 0
 5108 058e 626A     		ldr	r2, [r4, #36]
 5109 0590 164B     		ldr	r3, .L401+8
 5110 0592 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 5111 0596 B0FBF3F0 		udiv	r0, r0, r3
 5112              	.LVL463:
 5113 059a 6368     		ldr	r3, [r4, #4]
 5114 059c 00EB5300 		add	r0, r0, r3, lsr #1
 5115 05a0 B0FBF3F0 		udiv	r0, r0, r3
 5116 05a4 80B2     		uxth	r0, r0
 5117              	.LVL464:
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5118              		.loc 1 3094 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 174


 5119 05a6 A0F11002 		sub	r2, r0, #16
 5120 05aa 4FF6EF73 		movw	r3, #65519
 5121 05ae 9A42     		cmp	r2, r3
 5122 05b0 0AD8     		bhi	.L395
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5123              		.loc 1 3096 0
 5124 05b2 2368     		ldr	r3, [r4]
 5125 05b4 D860     		str	r0, [r3, #12]
 5126 05b6 08E0     		b	.L355
 5127              	.LVL465:
 5128              	.L387:
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5129              		.loc 1 2975 0
 5130 05b8 0125     		movs	r5, #1
 5131              	.LVL466:
 5132 05ba 06E0     		b	.L355
 5133              	.LVL467:
 5134              	.L388:
 5135 05bc 0125     		movs	r5, #1
 5136              	.LVL468:
 5137 05be 04E0     		b	.L355
 5138              	.LVL469:
 5139              	.L389:
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5140              		.loc 1 2988 0
 5141 05c0 0125     		movs	r5, #1
 5142              	.LVL470:
 5143 05c2 02E0     		b	.L355
 5144              	.LVL471:
 5145              	.L392:
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5146              		.loc 1 3046 0
 5147 05c4 0125     		movs	r5, #1
 5148              	.LVL472:
 5149 05c6 00E0     		b	.L355
 5150              	.LVL473:
 5151              	.L395:
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5152              		.loc 1 3100 0
 5153 05c8 0125     		movs	r5, #1
 5154              	.LVL474:
 5155              	.L355:
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 5156              		.loc 1 3106 0
 5157 05ca 0123     		movs	r3, #1
 5158 05cc A4F86A30 		strh	r3, [r4, #106]	@ movhi
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5159              		.loc 1 3107 0
 5160 05d0 A4F86830 		strh	r3, [r4, #104]	@ movhi
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 5161              		.loc 1 3110 0
 5162 05d4 0023     		movs	r3, #0
 5163 05d6 E366     		str	r3, [r4, #108]
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5164              		.loc 1 3111 0
 5165 05d8 2367     		str	r3, [r4, #112]
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 175


 5166              		.loc 1 3114 0
 5167 05da 2846     		mov	r0, r5
 5168 05dc 07B0     		add	sp, sp, #28
 5169              	.LCFI33:
 5170              		.cfi_def_cfa_offset 28
 5171              		@ sp needed
 5172 05de BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5173              	.LVL475:
 5174              	.L402:
 5175 05e2 00BF     		.align	2
 5176              	.L401:
 5177 05e4 00440258 		.word	1476543488
 5178 05e8 0090D003 		.word	64000000
 5179 05ec 00000000 		.word	.LANCHOR0
 5180 05f0 00093D00 		.word	4000000
 5181              		.cfi_endproc
 5182              	.LFE183:
 5184              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5185              		.align	2
 5186              		.global	UART_AdvFeatureConfig
 5187              		.thumb
 5188              		.thumb_func
 5190              	UART_AdvFeatureConfig:
 5191              	.LFB184:
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 5192              		.loc 1 3122 0
 5193              		.cfi_startproc
 5194              		@ args = 0, pretend = 0, frame = 0
 5195              		@ frame_needed = 0, uses_anonymous_args = 0
 5196              		@ link register save eliminated.
 5197              	.LVL476:
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5198              		.loc 1 3127 0
 5199 0000 836A     		ldr	r3, [r0, #40]
 5200 0002 13F0010F 		tst	r3, #1
 5201 0006 06D0     		beq	.L404
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5202              		.loc 1 3130 0
 5203 0008 0168     		ldr	r1, [r0]
 5204 000a 4B68     		ldr	r3, [r1, #4]
 5205 000c 23F40032 		bic	r2, r3, #131072
 5206 0010 C36A     		ldr	r3, [r0, #44]
 5207 0012 1343     		orrs	r3, r3, r2
 5208 0014 4B60     		str	r3, [r1, #4]
 5209              	.L404:
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5210              		.loc 1 3134 0
 5211 0016 836A     		ldr	r3, [r0, #40]
 5212 0018 13F0020F 		tst	r3, #2
 5213 001c 06D0     		beq	.L405
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5214              		.loc 1 3137 0
 5215 001e 0168     		ldr	r1, [r0]
 5216 0020 4B68     		ldr	r3, [r1, #4]
 5217 0022 23F48032 		bic	r2, r3, #65536
 5218 0026 036B     		ldr	r3, [r0, #48]
 5219 0028 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 176


 5220 002a 4B60     		str	r3, [r1, #4]
 5221              	.L405:
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5222              		.loc 1 3141 0
 5223 002c 836A     		ldr	r3, [r0, #40]
 5224 002e 13F0040F 		tst	r3, #4
 5225 0032 06D0     		beq	.L406
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5226              		.loc 1 3144 0
 5227 0034 0168     		ldr	r1, [r0]
 5228 0036 4B68     		ldr	r3, [r1, #4]
 5229 0038 23F48022 		bic	r2, r3, #262144
 5230 003c 436B     		ldr	r3, [r0, #52]
 5231 003e 1343     		orrs	r3, r3, r2
 5232 0040 4B60     		str	r3, [r1, #4]
 5233              	.L406:
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5234              		.loc 1 3148 0
 5235 0042 836A     		ldr	r3, [r0, #40]
 5236 0044 13F0080F 		tst	r3, #8
 5237 0048 06D0     		beq	.L407
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5238              		.loc 1 3151 0
 5239 004a 0168     		ldr	r1, [r0]
 5240 004c 4B68     		ldr	r3, [r1, #4]
 5241 004e 23F40042 		bic	r2, r3, #32768
 5242 0052 836B     		ldr	r3, [r0, #56]
 5243 0054 1343     		orrs	r3, r3, r2
 5244 0056 4B60     		str	r3, [r1, #4]
 5245              	.L407:
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5246              		.loc 1 3155 0
 5247 0058 836A     		ldr	r3, [r0, #40]
 5248 005a 13F0100F 		tst	r3, #16
 5249 005e 06D0     		beq	.L408
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5250              		.loc 1 3158 0
 5251 0060 0168     		ldr	r1, [r0]
 5252 0062 8B68     		ldr	r3, [r1, #8]
 5253 0064 23F48052 		bic	r2, r3, #4096
 5254 0068 C36B     		ldr	r3, [r0, #60]
 5255 006a 1343     		orrs	r3, r3, r2
 5256 006c 8B60     		str	r3, [r1, #8]
 5257              	.L408:
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5258              		.loc 1 3162 0
 5259 006e 836A     		ldr	r3, [r0, #40]
 5260 0070 13F0200F 		tst	r3, #32
 5261 0074 06D0     		beq	.L409
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5262              		.loc 1 3165 0
 5263 0076 0168     		ldr	r1, [r0]
 5264 0078 8B68     		ldr	r3, [r1, #8]
 5265 007a 23F40052 		bic	r2, r3, #8192
 5266 007e 036C     		ldr	r3, [r0, #64]
 5267 0080 1343     		orrs	r3, r3, r2
 5268 0082 8B60     		str	r3, [r1, #8]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 177


 5269              	.L409:
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5270              		.loc 1 3169 0
 5271 0084 836A     		ldr	r3, [r0, #40]
 5272 0086 13F0400F 		tst	r3, #64
 5273 008a 11D0     		beq	.L410
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 5274              		.loc 1 3173 0
 5275 008c 0168     		ldr	r1, [r0]
 5276 008e 4B68     		ldr	r3, [r1, #4]
 5277 0090 23F48012 		bic	r2, r3, #1048576
 5278 0094 436C     		ldr	r3, [r0, #68]
 5279 0096 1343     		orrs	r3, r3, r2
 5280 0098 4B60     		str	r3, [r1, #4]
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5281              		.loc 1 3175 0
 5282 009a 436C     		ldr	r3, [r0, #68]
 5283 009c B3F5801F 		cmp	r3, #1048576
 5284 00a0 06D1     		bne	.L410
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5285              		.loc 1 3178 0
 5286 00a2 0168     		ldr	r1, [r0]
 5287 00a4 4B68     		ldr	r3, [r1, #4]
 5288 00a6 23F4C002 		bic	r2, r3, #6291456
 5289 00aa 836C     		ldr	r3, [r0, #72]
 5290 00ac 1343     		orrs	r3, r3, r2
 5291 00ae 4B60     		str	r3, [r1, #4]
 5292              	.L410:
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5293              		.loc 1 3183 0
 5294 00b0 836A     		ldr	r3, [r0, #40]
 5295 00b2 13F0800F 		tst	r3, #128
 5296 00b6 06D0     		beq	.L403
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5297              		.loc 1 3186 0
 5298 00b8 0168     		ldr	r1, [r0]
 5299 00ba 4B68     		ldr	r3, [r1, #4]
 5300 00bc 23F40022 		bic	r2, r3, #524288
 5301 00c0 C36C     		ldr	r3, [r0, #76]
 5302 00c2 1343     		orrs	r3, r3, r2
 5303 00c4 4B60     		str	r3, [r1, #4]
 5304              	.L403:
 5305 00c6 7047     		bx	lr
 5306              		.cfi_endproc
 5307              	.LFE184:
 5309              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5310              		.align	2
 5311              		.global	UART_WaitOnFlagUntilTimeout
 5312              		.thumb
 5313              		.thumb_func
 5315              	UART_WaitOnFlagUntilTimeout:
 5316              	.LFB186:
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
 5317              		.loc 1 3247 0
 5318              		.cfi_startproc
 5319              		@ args = 4, pretend = 0, frame = 0
 5320              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 178


 5321              	.LVL477:
 5322 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5323              	.LCFI34:
 5324              		.cfi_def_cfa_offset 24
 5325              		.cfi_offset 4, -24
 5326              		.cfi_offset 5, -20
 5327              		.cfi_offset 6, -16
 5328              		.cfi_offset 7, -12
 5329              		.cfi_offset 8, -8
 5330              		.cfi_offset 14, -4
 5331 0004 0446     		mov	r4, r0
 5332 0006 0F46     		mov	r7, r1
 5333 0008 1646     		mov	r6, r2
 5334 000a 9846     		mov	r8, r3
 5335 000c 069D     		ldr	r5, [sp, #24]
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5336              		.loc 1 3249 0
 5337 000e 41E0     		b	.L414
 5338              	.LVL478:
 5339              	.L418:
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5340              		.loc 1 3252 0
 5341 0010 B5F1FF3F 		cmp	r5, #-1
 5342 0014 3ED0     		beq	.L414
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5343              		.loc 1 3254 0
 5344 0016 FFF7FEFF 		bl	HAL_GetTick
 5345              	.LVL479:
 5346 001a C8EB0000 		rsb	r0, r8, r0
 5347 001e 8542     		cmp	r5, r0
 5348 0020 00D3     		bcc	.L415
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5349              		.loc 1 3254 0 is_stmt 0 discriminator 1
 5350 0022 A5B9     		cbnz	r5, .L416
 5351              	.L415:
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5352              		.loc 1 3257 0 is_stmt 1
 5353 0024 2268     		ldr	r2, [r4]
 5354 0026 1368     		ldr	r3, [r2]
 5355 0028 23F4D073 		bic	r3, r3, #416
 5356 002c 1360     		str	r3, [r2]
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5357              		.loc 1 3258 0
 5358 002e 2268     		ldr	r2, [r4]
 5359 0030 9368     		ldr	r3, [r2, #8]
 5360 0032 23F00103 		bic	r3, r3, #1
 5361 0036 9360     		str	r3, [r2, #8]
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5362              		.loc 1 3260 0
 5363 0038 2023     		movs	r3, #32
 5364 003a C4F88030 		str	r3, [r4, #128]
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5365              		.loc 1 3261 0
 5366 003e C4F88430 		str	r3, [r4, #132]
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5367              		.loc 1 3263 0
 5368 0042 0023     		movs	r3, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 179


 5369 0044 84F87C30 		strb	r3, [r4, #124]
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5370              		.loc 1 3265 0
 5371 0048 0320     		movs	r0, #3
 5372 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5373              	.LVL480:
 5374              	.L416:
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5375              		.loc 1 3268 0
 5376 004e 2368     		ldr	r3, [r4]
 5377 0050 1A68     		ldr	r2, [r3]
 5378 0052 12F0040F 		tst	r2, #4
 5379 0056 1DD0     		beq	.L414
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5380              		.loc 1 3270 0
 5381 0058 DA69     		ldr	r2, [r3, #28]
 5382 005a 12F4006F 		tst	r2, #2048
 5383 005e 19D0     		beq	.L414
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5384              		.loc 1 3273 0
 5385 0060 4FF40062 		mov	r2, #2048
 5386 0064 1A62     		str	r2, [r3, #32]
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5387              		.loc 1 3276 0
 5388 0066 2268     		ldr	r2, [r4]
 5389 0068 1368     		ldr	r3, [r2]
 5390 006a 23F4D073 		bic	r3, r3, #416
 5391 006e 1360     		str	r3, [r2]
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5392              		.loc 1 3277 0
 5393 0070 2268     		ldr	r2, [r4]
 5394 0072 9368     		ldr	r3, [r2, #8]
 5395 0074 23F00103 		bic	r3, r3, #1
 5396 0078 9360     		str	r3, [r2, #8]
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5397              		.loc 1 3279 0
 5398 007a 2023     		movs	r3, #32
 5399 007c C4F88030 		str	r3, [r4, #128]
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 5400              		.loc 1 3280 0
 5401 0080 C4F88430 		str	r3, [r4, #132]
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5402              		.loc 1 3281 0
 5403 0084 C4F88830 		str	r3, [r4, #136]
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5404              		.loc 1 3284 0
 5405 0088 0023     		movs	r3, #0
 5406 008a 84F87C30 		strb	r3, [r4, #124]
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 5407              		.loc 1 3286 0
 5408 008e 0320     		movs	r0, #3
 5409 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5410              	.LVL481:
 5411              	.L414:
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5412              		.loc 1 3249 0
 5413 0094 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 180


 5414 0096 DB69     		ldr	r3, [r3, #28]
 5415 0098 37EA0303 		bics	r3, r7, r3
 5416 009c 0CBF     		ite	eq
 5417 009e 0123     		moveq	r3, #1
 5418 00a0 0023     		movne	r3, #0
 5419 00a2 B342     		cmp	r3, r6
 5420 00a4 B4D0     		beq	.L418
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5421              		.loc 1 3291 0
 5422 00a6 0020     		movs	r0, #0
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5423              		.loc 1 3292 0
 5424 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5425              		.cfi_endproc
 5426              	.LFE186:
 5428              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 5429              		.align	2
 5430              		.global	HAL_UART_Transmit
 5431              		.thumb
 5432              		.thumb_func
 5434              	HAL_UART_Transmit:
 5435              	.LFB148:
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
 5436              		.loc 1 1034 0
 5437              		.cfi_startproc
 5438              		@ args = 0, pretend = 0, frame = 0
 5439              		@ frame_needed = 0, uses_anonymous_args = 0
 5440              	.LVL482:
 5441 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5442              	.LCFI35:
 5443              		.cfi_def_cfa_offset 24
 5444              		.cfi_offset 4, -24
 5445              		.cfi_offset 5, -20
 5446              		.cfi_offset 6, -16
 5447              		.cfi_offset 7, -12
 5448              		.cfi_offset 8, -8
 5449              		.cfi_offset 14, -4
 5450 0004 82B0     		sub	sp, sp, #8
 5451              	.LCFI36:
 5452              		.cfi_def_cfa_offset 32
 5453 0006 1E46     		mov	r6, r3
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5454              		.loc 1 1040 0
 5455 0008 D0F88030 		ldr	r3, [r0, #128]
 5456              	.LVL483:
 5457 000c 202B     		cmp	r3, #32
 5458 000e 59D1     		bne	.L427
 5459 0010 0446     		mov	r4, r0
 5460 0012 0D46     		mov	r5, r1
 5461 0014 9046     		mov	r8, r2
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5462              		.loc 1 1042 0
 5463 0016 002A     		cmp	r2, #0
 5464 0018 18BF     		it	ne
 5465 001a 0029     		cmpne	r1, #0
 5466 001c 54D0     		beq	.L428
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 181


 5467              		.loc 1 1047 0
 5468 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5469 0022 012B     		cmp	r3, #1
 5470 0024 52D0     		beq	.L429
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5471              		.loc 1 1047 0 is_stmt 0 discriminator 2
 5472 0026 0123     		movs	r3, #1
 5473 0028 80F87C30 		strb	r3, [r0, #124]
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 5474              		.loc 1 1049 0 is_stmt 1 discriminator 2
 5475 002c 0023     		movs	r3, #0
 5476 002e C0F88830 		str	r3, [r0, #136]
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5477              		.loc 1 1050 0 discriminator 2
 5478 0032 2123     		movs	r3, #33
 5479 0034 C0F88030 		str	r3, [r0, #128]
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5480              		.loc 1 1053 0 discriminator 2
 5481 0038 FFF7FEFF 		bl	HAL_GetTick
 5482              	.LVL484:
 5483 003c 0746     		mov	r7, r0
 5484              	.LVL485:
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 5485              		.loc 1 1055 0 discriminator 2
 5486 003e A4F85480 		strh	r8, [r4, #84]	@ movhi
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5487              		.loc 1 1056 0 discriminator 2
 5488 0042 A4F85680 		strh	r8, [r4, #86]	@ movhi
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5489              		.loc 1 1059 0 discriminator 2
 5490 0046 A368     		ldr	r3, [r4, #8]
 5491 0048 B3F5805F 		cmp	r3, #4096
 5492 004c 04D1     		bne	.L430
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5493              		.loc 1 1059 0 is_stmt 0 discriminator 1
 5494 004e 2369     		ldr	r3, [r4, #16]
 5495 0050 2BB1     		cbz	r3, .L431
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5496              		.loc 1 1067 0 is_stmt 1
 5497 0052 4FF00008 		mov	r8, #0
 5498 0056 04E0     		b	.L422
 5499              	.L430:
 5500 0058 4FF00008 		mov	r8, #0
 5501 005c 01E0     		b	.L422
 5502              	.L431:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5503              		.loc 1 1062 0
 5504 005e A846     		mov	r8, r5
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5505              		.loc 1 1061 0
 5506 0060 0025     		movs	r5, #0
 5507              	.LVL486:
 5508              	.L422:
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5509              		.loc 1 1070 0
 5510 0062 0023     		movs	r3, #0
 5511 0064 84F87C30 		strb	r3, [r4, #124]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 182


1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5512              		.loc 1 1072 0
 5513 0068 1AE0     		b	.L423
 5514              	.LVL487:
 5515              	.L426:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5516              		.loc 1 1074 0
 5517 006a 0096     		str	r6, [sp]
 5518 006c 3B46     		mov	r3, r7
 5519 006e 0022     		movs	r2, #0
 5520 0070 8021     		movs	r1, #128
 5521 0072 2046     		mov	r0, r4
 5522 0074 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5523              	.LVL488:
 5524 0078 50BB     		cbnz	r0, .L432
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5525              		.loc 1 1078 0
 5526 007a 35B9     		cbnz	r5, .L424
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 5527              		.loc 1 1080 0
 5528 007c 2268     		ldr	r2, [r4]
 5529 007e 38F8023B 		ldrh	r3, [r8], #2
 5530              	.LVL489:
 5531 0082 C3F30803 		ubfx	r3, r3, #0, #9
 5532 0086 9362     		str	r3, [r2, #40]
 5533              	.LVL490:
 5534 0088 03E0     		b	.L425
 5535              	.L424:
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 5536              		.loc 1 1085 0
 5537 008a 2368     		ldr	r3, [r4]
 5538 008c 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 5539              	.LVL491:
 5540 0090 9A62     		str	r2, [r3, #40]
 5541              	.LVL492:
 5542              	.L425:
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5543              		.loc 1 1088 0
 5544 0092 B4F85630 		ldrh	r3, [r4, #86]
 5545 0096 9BB2     		uxth	r3, r3
 5546 0098 013B     		subs	r3, r3, #1
 5547 009a 9BB2     		uxth	r3, r3
 5548 009c A4F85630 		strh	r3, [r4, #86]	@ movhi
 5549              	.L423:
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5550              		.loc 1 1072 0
 5551 00a0 B4F85630 		ldrh	r3, [r4, #86]
 5552 00a4 9BB2     		uxth	r3, r3
 5553 00a6 002B     		cmp	r3, #0
 5554 00a8 DFD1     		bne	.L426
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5555              		.loc 1 1091 0
 5556 00aa 0096     		str	r6, [sp]
 5557 00ac 3B46     		mov	r3, r7
 5558 00ae 0022     		movs	r2, #0
 5559 00b0 4021     		movs	r1, #64
 5560 00b2 2046     		mov	r0, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 183


 5561 00b4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5562              	.LVL493:
 5563 00b8 0346     		mov	r3, r0
 5564 00ba 58B9     		cbnz	r0, .L433
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5565              		.loc 1 1097 0
 5566 00bc 2022     		movs	r2, #32
 5567 00be C4F88020 		str	r2, [r4, #128]
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5568              		.loc 1 1099 0
 5569 00c2 08E0     		b	.L421
 5570              	.LVL494:
 5571              	.L427:
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5572              		.loc 1 1103 0
 5573 00c4 0223     		movs	r3, #2
 5574 00c6 06E0     		b	.L421
 5575              	.L428:
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5576              		.loc 1 1044 0
 5577 00c8 0123     		movs	r3, #1
 5578 00ca 04E0     		b	.L421
 5579              	.L429:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5580              		.loc 1 1047 0
 5581 00cc 0223     		movs	r3, #2
 5582 00ce 02E0     		b	.L421
 5583              	.LVL495:
 5584              	.L432:
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5585              		.loc 1 1076 0
 5586 00d0 0323     		movs	r3, #3
 5587 00d2 00E0     		b	.L421
 5588              	.L433:
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5589              		.loc 1 1093 0
 5590 00d4 0323     		movs	r3, #3
 5591              	.LVL496:
 5592              	.L421:
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5593              		.loc 1 1105 0
 5594 00d6 1846     		mov	r0, r3
 5595 00d8 02B0     		add	sp, sp, #8
 5596              	.LCFI37:
 5597              		.cfi_def_cfa_offset 24
 5598              		@ sp needed
 5599 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5600              		.cfi_endproc
 5601              	.LFE148:
 5603 00de 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 5604              		.align	2
 5605              		.global	HAL_UART_Receive
 5606              		.thumb
 5607              		.thumb_func
 5609              	HAL_UART_Receive:
 5610              	.LFB149:
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 184


 5611              		.loc 1 1123 0
 5612              		.cfi_startproc
 5613              		@ args = 0, pretend = 0, frame = 0
 5614              		@ frame_needed = 0, uses_anonymous_args = 0
 5615              	.LVL497:
 5616 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5617              	.LCFI38:
 5618              		.cfi_def_cfa_offset 28
 5619              		.cfi_offset 4, -28
 5620              		.cfi_offset 5, -24
 5621              		.cfi_offset 6, -20
 5622              		.cfi_offset 7, -16
 5623              		.cfi_offset 8, -12
 5624              		.cfi_offset 9, -8
 5625              		.cfi_offset 14, -4
 5626 0004 83B0     		sub	sp, sp, #12
 5627              	.LCFI39:
 5628              		.cfi_def_cfa_offset 40
 5629 0006 1E46     		mov	r6, r3
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5630              		.loc 1 1130 0
 5631 0008 D0F88430 		ldr	r3, [r0, #132]
 5632              	.LVL498:
 5633 000c 202B     		cmp	r3, #32
 5634 000e 7FD1     		bne	.L449
 5635 0010 0446     		mov	r4, r0
 5636 0012 0D46     		mov	r5, r1
 5637 0014 9046     		mov	r8, r2
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5638              		.loc 1 1132 0
 5639 0016 002A     		cmp	r2, #0
 5640 0018 18BF     		it	ne
 5641 001a 0029     		cmpne	r1, #0
 5642 001c 7AD0     		beq	.L450
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5643              		.loc 1 1137 0
 5644 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5645 0022 012B     		cmp	r3, #1
 5646 0024 78D0     		beq	.L451
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5647              		.loc 1 1137 0 is_stmt 0 discriminator 2
 5648 0026 0123     		movs	r3, #1
 5649 0028 80F87C30 		strb	r3, [r0, #124]
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 5650              		.loc 1 1139 0 is_stmt 1 discriminator 2
 5651 002c 0023     		movs	r3, #0
 5652 002e C0F88830 		str	r3, [r0, #136]
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5653              		.loc 1 1140 0 discriminator 2
 5654 0032 2223     		movs	r3, #34
 5655 0034 C0F88430 		str	r3, [r0, #132]
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5656              		.loc 1 1143 0 discriminator 2
 5657 0038 FFF7FEFF 		bl	HAL_GetTick
 5658              	.LVL499:
 5659 003c 0746     		mov	r7, r0
 5660              	.LVL500:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 185


1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 5661              		.loc 1 1145 0 discriminator 2
 5662 003e A4F85C80 		strh	r8, [r4, #92]	@ movhi
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5663              		.loc 1 1146 0 discriminator 2
 5664 0042 A4F85E80 		strh	r8, [r4, #94]	@ movhi
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5665              		.loc 1 1149 0 discriminator 2
 5666 0046 A368     		ldr	r3, [r4, #8]
 5667 0048 B3F5805F 		cmp	r3, #4096
 5668 004c 0AD1     		bne	.L437
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5669              		.loc 1 1149 0 is_stmt 0 discriminator 1
 5670 004e 2269     		ldr	r2, [r4, #16]
 5671 0050 22B9     		cbnz	r2, .L438
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5672              		.loc 1 1149 0 discriminator 3
 5673 0052 40F2FF12 		movw	r2, #511
 5674 0056 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5675 005a 1EE0     		b	.L439
 5676              	.L438:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5677              		.loc 1 1149 0 discriminator 4
 5678 005c FF22     		movs	r2, #255
 5679 005e A4F86020 		strh	r2, [r4, #96]	@ movhi
 5680 0062 1AE0     		b	.L439
 5681              	.L437:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5682              		.loc 1 1149 0 discriminator 2
 5683 0064 4BB9     		cbnz	r3, .L440
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5684              		.loc 1 1149 0 discriminator 5
 5685 0066 2269     		ldr	r2, [r4, #16]
 5686 0068 1AB9     		cbnz	r2, .L441
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5687              		.loc 1 1149 0 discriminator 7
 5688 006a FF22     		movs	r2, #255
 5689 006c A4F86020 		strh	r2, [r4, #96]	@ movhi
 5690 0070 13E0     		b	.L439
 5691              	.L441:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5692              		.loc 1 1149 0 discriminator 8
 5693 0072 7F22     		movs	r2, #127
 5694 0074 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5695 0078 0FE0     		b	.L439
 5696              	.L440:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5697              		.loc 1 1149 0 discriminator 6
 5698 007a B3F1805F 		cmp	r3, #268435456
 5699 007e 09D1     		bne	.L442
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5700              		.loc 1 1149 0 discriminator 9
 5701 0080 2269     		ldr	r2, [r4, #16]
 5702 0082 1AB9     		cbnz	r2, .L443
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5703              		.loc 1 1149 0 discriminator 11
 5704 0084 7F22     		movs	r2, #127
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 186


 5705 0086 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5706 008a 06E0     		b	.L439
 5707              	.L443:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5708              		.loc 1 1149 0 discriminator 12
 5709 008c 3F22     		movs	r2, #63
 5710 008e A4F86020 		strh	r2, [r4, #96]	@ movhi
 5711 0092 02E0     		b	.L439
 5712              	.L442:
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5713              		.loc 1 1149 0 discriminator 10
 5714 0094 0022     		movs	r2, #0
 5715 0096 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5716              	.L439:
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5717              		.loc 1 1150 0 is_stmt 1
 5718 009a B4F86080 		ldrh	r8, [r4, #96]
 5719              	.LVL501:
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5720              		.loc 1 1153 0
 5721 009e B3F5805F 		cmp	r3, #4096
 5722 00a2 04D1     		bne	.L452
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5723              		.loc 1 1153 0 is_stmt 0 discriminator 1
 5724 00a4 2369     		ldr	r3, [r4, #16]
 5725 00a6 2BB1     		cbz	r3, .L453
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5726              		.loc 1 1161 0 is_stmt 1
 5727 00a8 4FF00009 		mov	r9, #0
 5728 00ac 04E0     		b	.L444
 5729              	.L452:
 5730 00ae 4FF00009 		mov	r9, #0
 5731 00b2 01E0     		b	.L444
 5732              	.L453:
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5733              		.loc 1 1156 0
 5734 00b4 A946     		mov	r9, r5
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5735              		.loc 1 1155 0
 5736 00b6 0025     		movs	r5, #0
 5737              	.LVL502:
 5738              	.L444:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5739              		.loc 1 1164 0
 5740 00b8 0023     		movs	r3, #0
 5741 00ba 84F87C30 		strb	r3, [r4, #124]
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5742              		.loc 1 1167 0
 5743 00be 1DE0     		b	.L445
 5744              	.LVL503:
 5745              	.L448:
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5746              		.loc 1 1169 0
 5747 00c0 0096     		str	r6, [sp]
 5748 00c2 3B46     		mov	r3, r7
 5749 00c4 0022     		movs	r2, #0
 5750 00c6 2021     		movs	r1, #32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 187


 5751 00c8 2046     		mov	r0, r4
 5752 00ca FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5753              	.LVL504:
 5754 00ce 28BB     		cbnz	r0, .L454
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5755              		.loc 1 1173 0
 5756 00d0 35B9     		cbnz	r5, .L446
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 5757              		.loc 1 1175 0
 5758 00d2 2368     		ldr	r3, [r4]
 5759 00d4 5B6A     		ldr	r3, [r3, #36]
 5760 00d6 08EA0303 		and	r3, r8, r3
 5761 00da 29F8023B 		strh	r3, [r9], #2	@ movhi
 5762              	.LVL505:
 5763 00de 06E0     		b	.L447
 5764              	.L446:
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 5765              		.loc 1 1180 0
 5766 00e0 2368     		ldr	r3, [r4]
 5767 00e2 5B6A     		ldr	r3, [r3, #36]
 5768 00e4 5FFA88F2 		uxtb	r2, r8
 5769 00e8 1340     		ands	r3, r3, r2
 5770 00ea 05F8013B 		strb	r3, [r5], #1
 5771              	.LVL506:
 5772              	.L447:
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5773              		.loc 1 1183 0
 5774 00ee B4F85E30 		ldrh	r3, [r4, #94]
 5775 00f2 9BB2     		uxth	r3, r3
 5776 00f4 013B     		subs	r3, r3, #1
 5777 00f6 9BB2     		uxth	r3, r3
 5778 00f8 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 5779              	.L445:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5780              		.loc 1 1167 0
 5781 00fc B4F85E30 		ldrh	r3, [r4, #94]
 5782 0100 9BB2     		uxth	r3, r3
 5783 0102 002B     		cmp	r3, #0
 5784 0104 DCD1     		bne	.L448
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5785              		.loc 1 1187 0
 5786 0106 2023     		movs	r3, #32
 5787 0108 C4F88430 		str	r3, [r4, #132]
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5788              		.loc 1 1189 0
 5789 010c 0020     		movs	r0, #0
 5790 010e 06E0     		b	.L436
 5791              	.LVL507:
 5792              	.L449:
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5793              		.loc 1 1193 0
 5794 0110 0220     		movs	r0, #2
 5795              	.LVL508:
 5796 0112 04E0     		b	.L436
 5797              	.LVL509:
 5798              	.L450:
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 188


 5799              		.loc 1 1134 0
 5800 0114 0120     		movs	r0, #1
 5801              	.LVL510:
 5802 0116 02E0     		b	.L436
 5803              	.LVL511:
 5804              	.L451:
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5805              		.loc 1 1137 0
 5806 0118 0220     		movs	r0, #2
 5807              	.LVL512:
 5808 011a 00E0     		b	.L436
 5809              	.LVL513:
 5810              	.L454:
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5811              		.loc 1 1171 0
 5812 011c 0320     		movs	r0, #3
 5813              	.LVL514:
 5814              	.L436:
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5815              		.loc 1 1195 0
 5816 011e 03B0     		add	sp, sp, #12
 5817              	.LCFI40:
 5818              		.cfi_def_cfa_offset 28
 5819              		@ sp needed
 5820 0120 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5821              		.cfi_endproc
 5822              	.LFE149:
 5824              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5825              		.align	2
 5826              		.global	UART_CheckIdleState
 5827              		.thumb
 5828              		.thumb_func
 5830              	UART_CheckIdleState:
 5831              	.LFB185:
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
 5832              		.loc 1 3196 0
 5833              		.cfi_startproc
 5834              		@ args = 0, pretend = 0, frame = 0
 5835              		@ frame_needed = 0, uses_anonymous_args = 0
 5836              	.LVL515:
 5837 0000 30B5     		push	{r4, r5, lr}
 5838              	.LCFI41:
 5839              		.cfi_def_cfa_offset 12
 5840              		.cfi_offset 4, -12
 5841              		.cfi_offset 5, -8
 5842              		.cfi_offset 14, -4
 5843 0002 83B0     		sub	sp, sp, #12
 5844              	.LCFI42:
 5845              		.cfi_def_cfa_offset 24
 5846 0004 0446     		mov	r4, r0
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5847              		.loc 1 3200 0
 5848 0006 0023     		movs	r3, #0
 5849 0008 C0F88830 		str	r3, [r0, #136]
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5850              		.loc 1 3203 0
 5851 000c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 189


 5852              	.LVL516:
 5853 0010 0546     		mov	r5, r0
 5854              	.LVL517:
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5855              		.loc 1 3206 0
 5856 0012 2368     		ldr	r3, [r4]
 5857 0014 1B68     		ldr	r3, [r3]
 5858 0016 13F0080F 		tst	r3, #8
 5859 001a 0AD0     		beq	.L457
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5860              		.loc 1 3209 0
 5861 001c 6FF07E43 		mvn	r3, #-33554432
 5862 0020 0093     		str	r3, [sp]
 5863 0022 0346     		mov	r3, r0
 5864 0024 0022     		movs	r2, #0
 5865 0026 4FF40011 		mov	r1, #2097152
 5866 002a 2046     		mov	r0, r4
 5867              	.LVL518:
 5868 002c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5869              	.LVL519:
 5870 0030 C0B9     		cbnz	r0, .L460
 5871              	.L457:
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5872              		.loc 1 3217 0
 5873 0032 2368     		ldr	r3, [r4]
 5874 0034 1B68     		ldr	r3, [r3]
 5875 0036 13F0040F 		tst	r3, #4
 5876 003a 0AD0     		beq	.L459
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5877              		.loc 1 3220 0
 5878 003c 6FF07E43 		mvn	r3, #-33554432
 5879 0040 0093     		str	r3, [sp]
 5880 0042 2B46     		mov	r3, r5
 5881 0044 0022     		movs	r2, #0
 5882 0046 4FF48001 		mov	r1, #4194304
 5883 004a 2046     		mov	r0, r4
 5884 004c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5885              	.LVL520:
 5886 0050 50B9     		cbnz	r0, .L461
 5887              	.L459:
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5888              		.loc 1 3228 0
 5889 0052 2023     		movs	r3, #32
 5890 0054 C4F88030 		str	r3, [r4, #128]
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5891              		.loc 1 3229 0
 5892 0058 C4F88430 		str	r3, [r4, #132]
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5893              		.loc 1 3231 0
 5894 005c 0020     		movs	r0, #0
 5895 005e 84F87C00 		strb	r0, [r4, #124]
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5896              		.loc 1 3233 0
 5897 0062 02E0     		b	.L458
 5898              	.L460:
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5899              		.loc 1 3212 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 190


 5900 0064 0320     		movs	r0, #3
 5901 0066 00E0     		b	.L458
 5902              	.L461:
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5903              		.loc 1 3223 0
 5904 0068 0320     		movs	r0, #3
 5905              	.L458:
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5906              		.loc 1 3234 0
 5907 006a 03B0     		add	sp, sp, #12
 5908              	.LCFI43:
 5909              		.cfi_def_cfa_offset 12
 5910              		@ sp needed
 5911 006c 30BD     		pop	{r4, r5, pc}
 5912              		.cfi_endproc
 5913              	.LFE185:
 5915 006e 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 5916              		.align	2
 5917              		.global	HAL_UART_Init
 5918              		.thumb
 5919              		.thumb_func
 5921              	HAL_UART_Init:
 5922              	.LFB141:
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5923              		.loc 1 298 0
 5924              		.cfi_startproc
 5925              		@ args = 0, pretend = 0, frame = 0
 5926              		@ frame_needed = 0, uses_anonymous_args = 0
 5927              	.LVL521:
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5928              		.loc 1 300 0
 5929 0000 68B3     		cbz	r0, .L467
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5930              		.loc 1 298 0
 5931 0002 10B5     		push	{r4, lr}
 5932              	.LCFI44:
 5933              		.cfi_def_cfa_offset 8
 5934              		.cfi_offset 4, -8
 5935              		.cfi_offset 14, -4
 5936 0004 0446     		mov	r4, r0
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5937              		.loc 1 316 0
 5938 0006 D0F88030 		ldr	r3, [r0, #128]
 5939 000a 1BB9     		cbnz	r3, .L465
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5940              		.loc 1 319 0
 5941 000c 80F87C30 		strb	r3, [r0, #124]
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5942              		.loc 1 333 0
 5943 0010 FFF7FEFF 		bl	HAL_UART_MspInit
 5944              	.LVL522:
 5945              	.L465:
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5946              		.loc 1 337 0
 5947 0014 2423     		movs	r3, #36
 5948 0016 C4F88030 		str	r3, [r4, #128]
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 191


 5949              		.loc 1 339 0
 5950 001a 2268     		ldr	r2, [r4]
 5951 001c 1368     		ldr	r3, [r2]
 5952 001e 23F00103 		bic	r3, r3, #1
 5953 0022 1360     		str	r3, [r2]
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5954              		.loc 1 342 0
 5955 0024 2046     		mov	r0, r4
 5956 0026 FFF7FEFF 		bl	UART_SetConfig
 5957              	.LVL523:
 5958 002a 0128     		cmp	r0, #1
 5959 002c 19D0     		beq	.L464
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5960              		.loc 1 347 0
 5961 002e A36A     		ldr	r3, [r4, #40]
 5962 0030 13B1     		cbz	r3, .L466
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5963              		.loc 1 349 0
 5964 0032 2046     		mov	r0, r4
 5965 0034 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5966              	.LVL524:
 5967              	.L466:
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5968              		.loc 1 355 0
 5969 0038 2268     		ldr	r2, [r4]
 5970 003a 5368     		ldr	r3, [r2, #4]
 5971 003c 23F49043 		bic	r3, r3, #18432
 5972 0040 5360     		str	r3, [r2, #4]
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5973              		.loc 1 356 0
 5974 0042 2268     		ldr	r2, [r4]
 5975 0044 9368     		ldr	r3, [r2, #8]
 5976 0046 23F02A03 		bic	r3, r3, #42
 5977 004a 9360     		str	r3, [r2, #8]
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5978              		.loc 1 358 0
 5979 004c 2268     		ldr	r2, [r4]
 5980 004e 1368     		ldr	r3, [r2]
 5981 0050 43F00103 		orr	r3, r3, #1
 5982 0054 1360     		str	r3, [r2]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5983              		.loc 1 361 0
 5984 0056 2046     		mov	r0, r4
 5985 0058 FFF7FEFF 		bl	UART_CheckIdleState
 5986              	.LVL525:
 5987 005c 10BD     		pop	{r4, pc}
 5988              	.LVL526:
 5989              	.L467:
 5990              	.LCFI45:
 5991              		.cfi_def_cfa_offset 0
 5992              		.cfi_restore 4
 5993              		.cfi_restore 14
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5994              		.loc 1 302 0
 5995 005e 0120     		movs	r0, #1
 5996              	.LVL527:
 5997 0060 7047     		bx	lr
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 192


 5998              	.LVL528:
 5999              	.L464:
 6000              	.LCFI46:
 6001              		.cfi_def_cfa_offset 8
 6002              		.cfi_offset 4, -8
 6003              		.cfi_offset 14, -4
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6004              		.loc 1 362 0
 6005 0062 10BD     		pop	{r4, pc}
 6006              		.cfi_endproc
 6007              	.LFE141:
 6009              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 6010              		.align	2
 6011              		.global	HAL_HalfDuplex_Init
 6012              		.thumb
 6013              		.thumb_func
 6015              	HAL_HalfDuplex_Init:
 6016              	.LFB142:
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6017              		.loc 1 371 0
 6018              		.cfi_startproc
 6019              		@ args = 0, pretend = 0, frame = 0
 6020              		@ frame_needed = 0, uses_anonymous_args = 0
 6021              	.LVL529:
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6022              		.loc 1 373 0
 6023 0000 0028     		cmp	r0, #0
 6024 0002 32D0     		beq	.L474
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6025              		.loc 1 371 0
 6026 0004 10B5     		push	{r4, lr}
 6027              	.LCFI47:
 6028              		.cfi_def_cfa_offset 8
 6029              		.cfi_offset 4, -8
 6030              		.cfi_offset 14, -4
 6031 0006 0446     		mov	r4, r0
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6032              		.loc 1 381 0
 6033 0008 D0F88030 		ldr	r3, [r0, #128]
 6034 000c 1BB9     		cbnz	r3, .L472
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6035              		.loc 1 384 0
 6036 000e 80F87C30 		strb	r3, [r0, #124]
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6037              		.loc 1 398 0
 6038 0012 FFF7FEFF 		bl	HAL_UART_MspInit
 6039              	.LVL530:
 6040              	.L472:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6041              		.loc 1 402 0
 6042 0016 2423     		movs	r3, #36
 6043 0018 C4F88030 		str	r3, [r4, #128]
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6044              		.loc 1 404 0
 6045 001c 2268     		ldr	r2, [r4]
 6046 001e 1368     		ldr	r3, [r2]
 6047 0020 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 193


 6048 0024 1360     		str	r3, [r2]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6049              		.loc 1 407 0
 6050 0026 2046     		mov	r0, r4
 6051 0028 FFF7FEFF 		bl	UART_SetConfig
 6052              	.LVL531:
 6053 002c 0128     		cmp	r0, #1
 6054 002e 1ED0     		beq	.L471
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6055              		.loc 1 412 0
 6056 0030 A36A     		ldr	r3, [r4, #40]
 6057 0032 13B1     		cbz	r3, .L473
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6058              		.loc 1 414 0
 6059 0034 2046     		mov	r0, r4
 6060 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 6061              	.LVL532:
 6062              	.L473:
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 6063              		.loc 1 420 0
 6064 003a 2268     		ldr	r2, [r4]
 6065 003c 5368     		ldr	r3, [r2, #4]
 6066 003e 23F49043 		bic	r3, r3, #18432
 6067 0042 5360     		str	r3, [r2, #4]
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6068              		.loc 1 421 0
 6069 0044 2268     		ldr	r2, [r4]
 6070 0046 9368     		ldr	r3, [r2, #8]
 6071 0048 23F02203 		bic	r3, r3, #34
 6072 004c 9360     		str	r3, [r2, #8]
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6073              		.loc 1 424 0
 6074 004e 2268     		ldr	r2, [r4]
 6075 0050 9368     		ldr	r3, [r2, #8]
 6076 0052 43F00803 		orr	r3, r3, #8
 6077 0056 9360     		str	r3, [r2, #8]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6078              		.loc 1 426 0
 6079 0058 2268     		ldr	r2, [r4]
 6080 005a 1368     		ldr	r3, [r2]
 6081 005c 43F00103 		orr	r3, r3, #1
 6082 0060 1360     		str	r3, [r2]
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6083              		.loc 1 429 0
 6084 0062 2046     		mov	r0, r4
 6085 0064 FFF7FEFF 		bl	UART_CheckIdleState
 6086              	.LVL533:
 6087 0068 10BD     		pop	{r4, pc}
 6088              	.LVL534:
 6089              	.L474:
 6090              	.LCFI48:
 6091              		.cfi_def_cfa_offset 0
 6092              		.cfi_restore 4
 6093              		.cfi_restore 14
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6094              		.loc 1 375 0
 6095 006a 0120     		movs	r0, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 194


 6096              	.LVL535:
 6097 006c 7047     		bx	lr
 6098              	.LVL536:
 6099              	.L471:
 6100              	.LCFI49:
 6101              		.cfi_def_cfa_offset 8
 6102              		.cfi_offset 4, -8
 6103              		.cfi_offset 14, -4
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6104              		.loc 1 430 0
 6105 006e 10BD     		pop	{r4, pc}
 6106              		.cfi_endproc
 6107              	.LFE142:
 6109              		.section	.text.HAL_LIN_Init,"ax",%progbits
 6110              		.align	2
 6111              		.global	HAL_LIN_Init
 6112              		.thumb
 6113              		.thumb_func
 6115              	HAL_LIN_Init:
 6116              	.LFB143:
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6117              		.loc 1 444 0
 6118              		.cfi_startproc
 6119              		@ args = 0, pretend = 0, frame = 0
 6120              		@ frame_needed = 0, uses_anonymous_args = 0
 6121              	.LVL537:
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6122              		.loc 1 446 0
 6123 0000 0028     		cmp	r0, #0
 6124 0002 40D0     		beq	.L481
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6125              		.loc 1 444 0
 6126 0004 38B5     		push	{r3, r4, r5, lr}
 6127              	.LCFI50:
 6128              		.cfi_def_cfa_offset 16
 6129              		.cfi_offset 3, -16
 6130              		.cfi_offset 4, -12
 6131              		.cfi_offset 5, -8
 6132              		.cfi_offset 14, -4
 6133 0006 0446     		mov	r4, r0
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6134              		.loc 1 457 0
 6135 0008 C369     		ldr	r3, [r0, #28]
 6136 000a B3F5004F 		cmp	r3, #32768
 6137 000e 3CD0     		beq	.L482
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6138              		.loc 1 462 0
 6139 0010 8368     		ldr	r3, [r0, #8]
 6140 0012 002B     		cmp	r3, #0
 6141 0014 3BD1     		bne	.L483
 6142 0016 0D46     		mov	r5, r1
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6143              		.loc 1 467 0
 6144 0018 D0F88030 		ldr	r3, [r0, #128]
 6145 001c 1BB9     		cbnz	r3, .L479
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6146              		.loc 1 470 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 195


 6147 001e 80F87C30 		strb	r3, [r0, #124]
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6148              		.loc 1 484 0
 6149 0022 FFF7FEFF 		bl	HAL_UART_MspInit
 6150              	.LVL538:
 6151              	.L479:
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6152              		.loc 1 488 0
 6153 0026 2423     		movs	r3, #36
 6154 0028 C4F88030 		str	r3, [r4, #128]
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6155              		.loc 1 490 0
 6156 002c 2268     		ldr	r2, [r4]
 6157 002e 1368     		ldr	r3, [r2]
 6158 0030 23F00103 		bic	r3, r3, #1
 6159 0034 1360     		str	r3, [r2]
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6160              		.loc 1 493 0
 6161 0036 2046     		mov	r0, r4
 6162 0038 FFF7FEFF 		bl	UART_SetConfig
 6163              	.LVL539:
 6164 003c 0128     		cmp	r0, #1
 6165 003e 27D0     		beq	.L478
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6166              		.loc 1 498 0
 6167 0040 A36A     		ldr	r3, [r4, #40]
 6168 0042 13B1     		cbz	r3, .L480
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6169              		.loc 1 500 0
 6170 0044 2046     		mov	r0, r4
 6171 0046 FFF7FEFF 		bl	UART_AdvFeatureConfig
 6172              	.LVL540:
 6173              	.L480:
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 6174              		.loc 1 506 0
 6175 004a 2268     		ldr	r2, [r4]
 6176 004c 5368     		ldr	r3, [r2, #4]
 6177 004e 23F40063 		bic	r3, r3, #2048
 6178 0052 5360     		str	r3, [r2, #4]
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6179              		.loc 1 507 0
 6180 0054 2268     		ldr	r2, [r4]
 6181 0056 9368     		ldr	r3, [r2, #8]
 6182 0058 23F02A03 		bic	r3, r3, #42
 6183 005c 9360     		str	r3, [r2, #8]
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6184              		.loc 1 510 0
 6185 005e 2268     		ldr	r2, [r4]
 6186 0060 5368     		ldr	r3, [r2, #4]
 6187 0062 43F48043 		orr	r3, r3, #16384
 6188 0066 5360     		str	r3, [r2, #4]
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6189              		.loc 1 513 0
 6190 0068 2368     		ldr	r3, [r4]
 6191 006a 5968     		ldr	r1, [r3, #4]
 6192 006c 21F02001 		bic	r1, r1, #32
 6193 0070 2943     		orrs	r1, r1, r5
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 196


 6194 0072 5960     		str	r1, [r3, #4]
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6195              		.loc 1 515 0
 6196 0074 2268     		ldr	r2, [r4]
 6197 0076 1368     		ldr	r3, [r2]
 6198 0078 43F00103 		orr	r3, r3, #1
 6199 007c 1360     		str	r3, [r2]
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6200              		.loc 1 518 0
 6201 007e 2046     		mov	r0, r4
 6202 0080 FFF7FEFF 		bl	UART_CheckIdleState
 6203              	.LVL541:
 6204 0084 38BD     		pop	{r3, r4, r5, pc}
 6205              	.LVL542:
 6206              	.L481:
 6207              	.LCFI51:
 6208              		.cfi_def_cfa_offset 0
 6209              		.cfi_restore 3
 6210              		.cfi_restore 4
 6211              		.cfi_restore 5
 6212              		.cfi_restore 14
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6213              		.loc 1 448 0
 6214 0086 0120     		movs	r0, #1
 6215              	.LVL543:
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6216              		.loc 1 519 0
 6217 0088 7047     		bx	lr
 6218              	.LVL544:
 6219              	.L482:
 6220              	.LCFI52:
 6221              		.cfi_def_cfa_offset 16
 6222              		.cfi_offset 3, -16
 6223              		.cfi_offset 4, -12
 6224              		.cfi_offset 5, -8
 6225              		.cfi_offset 14, -4
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6226              		.loc 1 459 0
 6227 008a 0120     		movs	r0, #1
 6228              	.LVL545:
 6229 008c 38BD     		pop	{r3, r4, r5, pc}
 6230              	.LVL546:
 6231              	.L483:
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6232              		.loc 1 464 0
 6233 008e 0120     		movs	r0, #1
 6234              	.LVL547:
 6235              	.L478:
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6236              		.loc 1 519 0
 6237 0090 38BD     		pop	{r3, r4, r5, pc}
 6238              		.cfi_endproc
 6239              	.LFE143:
 6241 0092 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 6242              		.align	2
 6243              		.global	HAL_MultiProcessor_Init
 6244              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 197


 6245              		.thumb_func
 6247              	HAL_MultiProcessor_Init:
 6248              	.LFB144:
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6249              		.loc 1 541 0
 6250              		.cfi_startproc
 6251              		@ args = 0, pretend = 0, frame = 0
 6252              		@ frame_needed = 0, uses_anonymous_args = 0
 6253              	.LVL548:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6254              		.loc 1 543 0
 6255 0000 0028     		cmp	r0, #0
 6256 0002 40D0     		beq	.L490
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 6257              		.loc 1 541 0
 6258 0004 70B5     		push	{r4, r5, r6, lr}
 6259              	.LCFI53:
 6260              		.cfi_def_cfa_offset 16
 6261              		.cfi_offset 4, -16
 6262              		.cfi_offset 5, -12
 6263              		.cfi_offset 6, -8
 6264              		.cfi_offset 14, -4
 6265 0006 0446     		mov	r4, r0
 6266 0008 1546     		mov	r5, r2
 6267 000a 0E46     		mov	r6, r1
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6268              		.loc 1 551 0
 6269 000c D0F88030 		ldr	r3, [r0, #128]
 6270 0010 1BB9     		cbnz	r3, .L487
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6271              		.loc 1 554 0
 6272 0012 80F87C30 		strb	r3, [r0, #124]
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6273              		.loc 1 568 0
 6274 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 6275              	.LVL549:
 6276              	.L487:
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6277              		.loc 1 572 0
 6278 001a 2423     		movs	r3, #36
 6279 001c C4F88030 		str	r3, [r4, #128]
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6280              		.loc 1 574 0
 6281 0020 2268     		ldr	r2, [r4]
 6282 0022 1368     		ldr	r3, [r2]
 6283 0024 23F00103 		bic	r3, r3, #1
 6284 0028 1360     		str	r3, [r2]
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6285              		.loc 1 577 0
 6286 002a 2046     		mov	r0, r4
 6287 002c FFF7FEFF 		bl	UART_SetConfig
 6288              	.LVL550:
 6289 0030 0128     		cmp	r0, #1
 6290 0032 2AD0     		beq	.L486
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6291              		.loc 1 582 0
 6292 0034 A36A     		ldr	r3, [r4, #40]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 198


 6293 0036 13B1     		cbz	r3, .L488
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6294              		.loc 1 584 0
 6295 0038 2046     		mov	r0, r4
 6296 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 6297              	.LVL551:
 6298              	.L488:
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 6299              		.loc 1 590 0
 6300 003e 2268     		ldr	r2, [r4]
 6301 0040 5368     		ldr	r3, [r2, #4]
 6302 0042 23F49043 		bic	r3, r3, #18432
 6303 0046 5360     		str	r3, [r2, #4]
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6304              		.loc 1 591 0
 6305 0048 2268     		ldr	r2, [r4]
 6306 004a 9368     		ldr	r3, [r2, #8]
 6307 004c 23F02A03 		bic	r3, r3, #42
 6308 0050 9360     		str	r3, [r2, #8]
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 6309              		.loc 1 593 0
 6310 0052 B5F5006F 		cmp	r5, #2048
 6311 0056 06D1     		bne	.L489
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6312              		.loc 1 596 0
 6313 0058 2368     		ldr	r3, [r4]
 6314 005a 5968     		ldr	r1, [r3, #4]
 6315 005c 21F07F41 		bic	r1, r1, #-16777216
 6316 0060 41EA0666 		orr	r6, r1, r6, lsl #24
 6317 0064 5E60     		str	r6, [r3, #4]
 6318              	.L489:
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6319              		.loc 1 600 0
 6320 0066 2168     		ldr	r1, [r4]
 6321 0068 0B68     		ldr	r3, [r1]
 6322 006a 23F40063 		bic	r3, r3, #2048
 6323 006e 45EA0302 		orr	r2, r5, r3
 6324 0072 0A60     		str	r2, [r1]
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6325              		.loc 1 602 0
 6326 0074 2268     		ldr	r2, [r4]
 6327 0076 1368     		ldr	r3, [r2]
 6328 0078 43F00103 		orr	r3, r3, #1
 6329 007c 1360     		str	r3, [r2]
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6330              		.loc 1 605 0
 6331 007e 2046     		mov	r0, r4
 6332 0080 FFF7FEFF 		bl	UART_CheckIdleState
 6333              	.LVL552:
 6334 0084 70BD     		pop	{r4, r5, r6, pc}
 6335              	.LVL553:
 6336              	.L490:
 6337              	.LCFI54:
 6338              		.cfi_def_cfa_offset 0
 6339              		.cfi_restore 4
 6340              		.cfi_restore 5
 6341              		.cfi_restore 6
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 199


 6342              		.cfi_restore 14
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6343              		.loc 1 545 0
 6344 0086 0120     		movs	r0, #1
 6345              	.LVL554:
 6346 0088 7047     		bx	lr
 6347              	.LVL555:
 6348              	.L486:
 6349              	.LCFI55:
 6350              		.cfi_def_cfa_offset 16
 6351              		.cfi_offset 4, -16
 6352              		.cfi_offset 5, -12
 6353              		.cfi_offset 6, -8
 6354              		.cfi_offset 14, -4
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6355              		.loc 1 606 0
 6356 008a 70BD     		pop	{r4, r5, r6, pc}
 6357              		.cfi_endproc
 6358              	.LFE144:
 6360              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 6361              		.align	2
 6362              		.global	HAL_MultiProcessor_EnableMuteMode
 6363              		.thumb
 6364              		.thumb_func
 6366              	HAL_MultiProcessor_EnableMuteMode:
 6367              	.LFB175:
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6368              		.loc 1 2655 0
 6369              		.cfi_startproc
 6370              		@ args = 0, pretend = 0, frame = 0
 6371              		@ frame_needed = 0, uses_anonymous_args = 0
 6372              	.LVL556:
 6373 0000 08B5     		push	{r3, lr}
 6374              	.LCFI56:
 6375              		.cfi_def_cfa_offset 8
 6376              		.cfi_offset 3, -8
 6377              		.cfi_offset 14, -4
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6378              		.loc 1 2656 0
 6379 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6380 0006 012B     		cmp	r3, #1
 6381 0008 10D0     		beq	.L495
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6382              		.loc 1 2656 0 is_stmt 0 discriminator 2
 6383 000a 0123     		movs	r3, #1
 6384 000c 80F87C30 		strb	r3, [r0, #124]
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6385              		.loc 1 2658 0 is_stmt 1 discriminator 2
 6386 0010 2423     		movs	r3, #36
 6387 0012 C0F88030 		str	r3, [r0, #128]
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6388              		.loc 1 2661 0 discriminator 2
 6389 0016 0268     		ldr	r2, [r0]
 6390 0018 1368     		ldr	r3, [r2]
 6391 001a 43F40053 		orr	r3, r3, #8192
 6392 001e 1360     		str	r3, [r2]
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 200


 6393              		.loc 1 2663 0 discriminator 2
 6394 0020 2023     		movs	r3, #32
 6395 0022 C0F88030 		str	r3, [r0, #128]
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6396              		.loc 1 2665 0 discriminator 2
 6397 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6398              	.LVL557:
 6399 002a 08BD     		pop	{r3, pc}
 6400              	.LVL558:
 6401              	.L495:
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6402              		.loc 1 2656 0
 6403 002c 0220     		movs	r0, #2
 6404              	.LVL559:
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6405              		.loc 1 2666 0
 6406 002e 08BD     		pop	{r3, pc}
 6407              		.cfi_endproc
 6408              	.LFE175:
 6410              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 6411              		.align	2
 6412              		.global	HAL_MultiProcessor_DisableMuteMode
 6413              		.thumb
 6414              		.thumb_func
 6416              	HAL_MultiProcessor_DisableMuteMode:
 6417              	.LFB176:
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6418              		.loc 1 2675 0
 6419              		.cfi_startproc
 6420              		@ args = 0, pretend = 0, frame = 0
 6421              		@ frame_needed = 0, uses_anonymous_args = 0
 6422              	.LVL560:
 6423 0000 08B5     		push	{r3, lr}
 6424              	.LCFI57:
 6425              		.cfi_def_cfa_offset 8
 6426              		.cfi_offset 3, -8
 6427              		.cfi_offset 14, -4
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6428              		.loc 1 2676 0
 6429 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6430 0006 012B     		cmp	r3, #1
 6431 0008 10D0     		beq	.L499
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6432              		.loc 1 2676 0 is_stmt 0 discriminator 2
 6433 000a 0123     		movs	r3, #1
 6434 000c 80F87C30 		strb	r3, [r0, #124]
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6435              		.loc 1 2678 0 is_stmt 1 discriminator 2
 6436 0010 2423     		movs	r3, #36
 6437 0012 C0F88030 		str	r3, [r0, #128]
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6438              		.loc 1 2681 0 discriminator 2
 6439 0016 0268     		ldr	r2, [r0]
 6440 0018 1368     		ldr	r3, [r2]
 6441 001a 23F40053 		bic	r3, r3, #8192
 6442 001e 1360     		str	r3, [r2]
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 201


 6443              		.loc 1 2683 0 discriminator 2
 6444 0020 2023     		movs	r3, #32
 6445 0022 C0F88030 		str	r3, [r0, #128]
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6446              		.loc 1 2685 0 discriminator 2
 6447 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6448              	.LVL561:
 6449 002a 08BD     		pop	{r3, pc}
 6450              	.LVL562:
 6451              	.L499:
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6452              		.loc 1 2676 0
 6453 002c 0220     		movs	r0, #2
 6454              	.LVL563:
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6455              		.loc 1 2686 0
 6456 002e 08BD     		pop	{r3, pc}
 6457              		.cfi_endproc
 6458              	.LFE176:
 6460              		.global	UARTPrescTable
 6461              		.section	.rodata.UARTPrescTable,"a",%progbits
 6462              		.align	2
 6463              		.set	.LANCHOR0,. + 0
 6466              	UARTPrescTable:
 6467 0000 0100     		.short	1
 6468 0002 0200     		.short	2
 6469 0004 0400     		.short	4
 6470 0006 0600     		.short	6
 6471 0008 0800     		.short	8
 6472 000a 0A00     		.short	10
 6473 000c 0C00     		.short	12
 6474 000e 1000     		.short	16
 6475 0010 2000     		.short	32
 6476 0012 4000     		.short	64
 6477 0014 8000     		.short	128
 6478 0016 0001     		.short	256
 6479              		.text
 6480              	.Letext0:
 6481              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 6482              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 6483              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 6484              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 6485              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 6486              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 6487              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 6488              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 6489              		.file 10 "Drivers/CMSIS/Include/core_cm7.h"
 6490              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 6491              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 6492              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 202


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_uart.c
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:21     .text.UART_EndTxTransfer:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:25     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:52     .text.UART_EndRxTransfer:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:56     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:85     .text.UART_EndRxTransfer:00000020 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:90     .text.UART_TxISR_8BIT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:94     .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:143    .text.UART_TxISR_16BIT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:147    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:201    .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:205    .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:277    .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:281    .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:358    .text.HAL_UART_MspInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:363    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:376    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:381    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:394    .text.HAL_UART_DeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:399    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:465    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:470    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:598    .text.HAL_UART_Transmit_IT:000000a0 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:606    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:611    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:805    .text.HAL_UART_Receive_IT:00000110 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2167   .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2035   .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1950   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1865   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:813    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:818    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:940    .text.HAL_UART_Transmit_DMA:0000009c $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1715   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1819   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2420   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:947    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:952    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1078   .text.HAL_UART_Receive_DMA:000000a8 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2301   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2374   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1085   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1090   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1185   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1190   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1257   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1262   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1375   .text.HAL_UART_Abort:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1380   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1511   .text.HAL_UART_Abort:000000c4 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1516   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1521   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1603   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1608   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1688   .text.HAL_UART_AbortReceive:0000006c $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1693   .text.HAL_UART_TxCpltCallback:00000000 $t
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 203


C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1698   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1711   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1762   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1766   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1797   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1802   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1815   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1843   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1848   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1861   .text.UART_RxISR_8BIT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:1946   .text.UART_RxISR_16BIT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2031   .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2157   .text.UART_RxISR_8BIT_FIFOEN:000000a0 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2163   .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2291   .text.UART_RxISR_16BIT_FIFOEN:000000a0 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2297   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2352   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2357   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2370   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2398   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2403   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2416   .text.UART_DMAError:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2490   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2495   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2821   .text.HAL_UART_IRQHandler:000001d4 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2832   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2828   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2860   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2865   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2878   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:2883   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3060   .text.HAL_UART_Abort_IT:000000ec $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3131   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3071   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3067   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3127   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3192   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3197   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3210   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3215   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3312   .text.HAL_UART_AbortTransmit_IT:00000080 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3321   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3317   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3360   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3365   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3378   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3383   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3482   .text.HAL_UART_AbortReceive_IT:00000080 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3492   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3488   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3530   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3535   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3559   .text.HAL_UART_ReceiverTimeout_Config:00000014 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3564   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3569   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3632   .text.HAL_UART_EnableReceiverTimeout:00000048 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3637   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 204


C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3642   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3705   .text.HAL_UART_DisableReceiverTimeout:00000048 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3710   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3715   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3733   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3738   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3787   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3792   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3841   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3846   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3890   .text.HAL_UART_GetState:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3895   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3917   .text.HAL_UART_GetError:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3922   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3940   .text.UART_SetConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:3945   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4036   .text.UART_SetConfig:00000072 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4077   .text.UART_SetConfig:000000c4 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4121   .text.UART_SetConfig:000000f2 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4127   .text.UART_SetConfig:000000fe $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4171   .text.UART_SetConfig:0000012c $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4177   .text.UART_SetConfig:00000138 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4221   .text.UART_SetConfig:00000166 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4227   .text.UART_SetConfig:0000016c $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4271   .text.UART_SetConfig:0000019a $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4277   .text.UART_SetConfig:000001a0 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4321   .text.UART_SetConfig:000001ce $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4395   .text.UART_SetConfig:00000210 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4408   .text.UART_SetConfig:00000238 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4419   .text.UART_SetConfig:0000024e $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4425   .text.UART_SetConfig:00000254 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4469   .text.UART_SetConfig:00000282 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4475   .text.UART_SetConfig:00000288 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4519   .text.UART_SetConfig:000002b8 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4525   .text.UART_SetConfig:000002be $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4745   .text.UART_SetConfig:000003ec $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4863   .text.UART_SetConfig:0000045c $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4874   .text.UART_SetConfig:0000047c $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4951   .text.UART_SetConfig:000004ee $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5177   .text.UART_SetConfig:000005e4 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5185   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5190   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5310   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5315   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5429   .text.HAL_UART_Transmit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5434   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5604   .text.HAL_UART_Receive:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5609   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5825   .text.UART_CheckIdleState:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5830   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5916   .text.HAL_UART_Init:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5921   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6010   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6015   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6110   .text.HAL_LIN_Init:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6115   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6242   .text.HAL_MultiProcessor_Init:00000000 $t
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s 			page 205


C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6247   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6361   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6366   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6411   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6416   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6466   .rodata.UARTPrescTable:00000000 UARTPrescTable
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:6462   .rodata.UARTPrescTable:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4362   .text.UART_SetConfig:000001f7 $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4362   .text.UART_SetConfig:000001f8 $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4810   .text.UART_SetConfig:0000042d $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:4810   .text.UART_SetConfig:0000042e $t
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5016   .text.UART_SetConfig:0000052f $d
C:\Users\xiaofei\AppData\Local\Temp\cca8sHxr.s:5016   .text.UART_SetConfig:00000530 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
HAL_RCCEx_GetD3PCLK1Freq
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetPLL3ClockFreq
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
