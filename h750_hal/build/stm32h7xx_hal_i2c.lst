ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 28, 1
   4              		.fpu fpv5-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32h7xx_hal_i2c.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	I2C_Flush_TXDR:
  26              	.LFB204:
  27              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @file    stm32h7xx_hal_i2c.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream o
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 2


  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream or channel depends on Instance
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   the DMA Tx or Rx stream or channel depends on Instance
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 3


  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ==========================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 4


 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 5


 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 6


 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #include "stm32h7xx_hal.h"
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @addtogroup STM32H7xx_HAL_Driver
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 7


 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /* Bit field can be combinated with @ref I2C_
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /* Bit field can be combinated with @ref I2C_
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /* Bit field can be combinated with @ref I2C_
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /* Bit definition to manage addition of globa
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /* Bit definition to manage only STOP eveneme
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /* Bit definition to manage only Reload of NB
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 8


 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to treat different error callback */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 9


 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           the selected configuration:
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Clock Timing
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 1
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Dual Addressing mode
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 2
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) General call mode
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) Nostretch mode
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c == NULL)
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 10


 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 11


 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c == NULL)
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 12


 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 13


 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (pCallback == NULL)
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 14


 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 15


 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 16


 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     switch (CallbackID)
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       default :
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update the error code */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return error status */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         status =  HAL_ERROR;
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         break;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 17


 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (pCallback == NULL)
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 18


 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update the error code */
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Return error status */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     status =  HAL_ERROR;
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Release Lock */
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return status;
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief   Data transfers functions
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                       ##### IO operation functions #####
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     transfers.
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             after finishing transfer.
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             using DMA mode.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) Blocking mode functions are :
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 19


1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 20


1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 21


1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 22


1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 23


1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 24


1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 25


1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP flag */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 26


1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 27


1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Store Last receive data if any */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Read data from RXDR */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferCount--;
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 28


1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP flag */
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 29


1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 30


1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 31


1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 32


1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 33


1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 34


1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address */
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 35


1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 36


1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address */
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 37


2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 38


2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 39


2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 40


2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 41


2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 42


2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 43


2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 44


2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address */
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 45


2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 46


2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 47


2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 48


2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* possible to enable all of these */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 49


2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 50


2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 51


2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 52


2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 53


2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 54


2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Trials Number of trials
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   FlagStatus tmp1;
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   FlagStatus tmp2;
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_BUSY;
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     do
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Generate Start */
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 55


3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Update I2C state */
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Update I2C error code */
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Process Unlocked */
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             return HAL_ERROR;
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Device is ready */
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_OK;
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 56


3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate Stop */
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Trials */
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Trials++;
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (I2C_Trials < Trials);
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update I2C state */
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update I2C error code */
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 57


3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 58


3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 59


3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 60


3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 61


3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 62


3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 63


3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the DMA error callback */
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable the DMA stream or channel depends on Instance */
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 64


3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update XferCount value */
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                   process unlock */
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Enable DMA Request */
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C state */
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Update I2C error code */
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Send Slave Address */
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 65


3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****                 process unlock */
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* possible to enable all of these */
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 66


3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 67


3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 68


3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Nothing to do */
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 69


3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Reset XferSize */
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable DMA Request */
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 70


3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 71


3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 72


4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA TX */
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 73


4079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Abort DMA RX */
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
4082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
4085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Nothing to do */
4091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the DMA error callback */
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable the DMA stream or channel depends on Instance */
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
4135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 74


4136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Reset XferSize */
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C state */
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update I2C error code */
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
4158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     process unlock */
4173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable DMA Request */
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 75


4193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
4208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmp;
4221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_BUSY;
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 76


4250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Locked */
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Do nothing */
4271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****               process unlock */
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_OK;
4289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
4295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  * @{
4304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  */
4305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 77


4307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
4336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear BERR flag */
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear OVR flag */
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ARLO flag */
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 78


4364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 79


4421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 80


4478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C error callback.
4507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
4526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(hi2c);
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****    */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 81


4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
4543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  *
4544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @verbatim
4545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****  ===============================================================================
4548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     [..]
4549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     and the data flow.
4551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** @endverbatim
4553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
4554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL state
4561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Return I2C handle state */
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->State;
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         the configuration information for I2C module
4572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL mode
4573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->Mode;
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** * @brief  Return the I2C error code.
4581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** * @retval I2C Error Code
4584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** */
4585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 82


4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @}
4596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @{
4600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
4613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Locked */
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize--;
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
4644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Write data to TXDR */
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 83


4649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize--;
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
4655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Generate Stop */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 84


4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if STOPF is set */
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 85


4763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* Sam
4771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Flush TX register */
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Clear NACK Flag */
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Read data from RXDR */
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 86


4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
4821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
4839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Write data to TXDR */
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
4850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
4871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
4873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 87


4877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
4879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
4880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
4882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
4883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
4884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Locked */
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC interrupt */
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Recover Slave address */
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 88


4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Update XferCount value */
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
4939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable DMA Request */
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
4958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
4971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Generate Stop */
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
4978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
4979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
4982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
4983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
4985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
4986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
4990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 89


4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
4995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
4996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
4997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
4998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
4999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process locked */
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if STOPF is set */
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
5026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             treatdmanack = 1U;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 90


5048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             treatdmanack = 1U;
5060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (treatdmanack == 1U)
5065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME)) /* S
5067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear NACK Flag */
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Flush TX register */
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         else
5084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear NACK Flag */
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
5090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear NACK Flag */
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmpstate = hi2c->State;
5100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 91


5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           else
5112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
5113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****             /* Do nothing */
5114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
5115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 92


5162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Memory Address */
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
5180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
5206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 93


5219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send Memory Address */
5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
5233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
5243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint8_t transferdirection;
5257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t ownadd1code;
5259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t ownadd2code;
5260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   UNUSED(ITFlags);
5263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 94


5276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
5281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Reset Address Event counter */
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Clear ADDR flag */
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Process Unlocked */
5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
5297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
5299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Slave Addr callback */
5309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 95


5333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Else clear address flag only */
5334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear ADDR flag */
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 96


5390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 97


5447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Interrupts */
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
5479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear STOP Flag */
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 98


5504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
5509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACK Flag */
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set acknowledge error code */
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Fetch Last receive data if any */
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
5519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     UNUSED(tmpreg);
5523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register */
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 99


5561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Nothing to do */
5610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 100


5618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear STOP Flag */
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register */
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 101


5675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Do nothing */
5677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store Last receive data if any */
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
5695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Tranfer */
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 102


5732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Store Last receive data if any */
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 103


5789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Read data from RXDR */
5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
5800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Clear NACK Flag */
5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Process Unlocked */
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
5833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Set new error code */
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable Interrupts */
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 104


5846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable all interrupts */
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
5860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* This change will be do later */
5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || (tmppreviousstat
5872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
5879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA TX */
5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || (tmppreviou
5901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 105


5903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
5908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Abort DMA RX */
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
5919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
5922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
5924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
5927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
5931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
5936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
5942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
5957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 106


5960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #else
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
5974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
5978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
  28              		.loc 1 5978 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
5979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
5980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
5981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  34              		.loc 1 5981 0
  35 0000 0368     		ldr	r3, [r0]
  36 0002 9A69     		ldr	r2, [r3, #24]
  37 0004 12F0020F 		tst	r2, #2
  38 0008 01D0     		beq	.L2
5982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  39              		.loc 1 5983 0
  40 000a 0022     		movs	r2, #0
  41 000c 9A62     		str	r2, [r3, #40]
  42              	.L2:
5984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Flush TX register if not empty */
5987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  43              		.loc 1 5987 0
  44 000e 0368     		ldr	r3, [r0]
  45 0010 9A69     		ldr	r2, [r3, #24]
  46 0012 12F0010F 		tst	r2, #1
  47 0016 03D1     		bne	.L1
5988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
5989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  48              		.loc 1 5989 0
  49 0018 9A69     		ldr	r2, [r3, #24]
  50 001a 42F00102 		orr	r2, r2, #1
  51 001e 9A61     		str	r2, [r3, #24]
  52              	.L1:
  53 0020 7047     		bx	lr
  54              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 107


  55              	.LFE204:
  57 0022 00BF     		.section	.text.I2C_TransferConfig,"ax",%progbits
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  62              	I2C_TransferConfig:
  63              	.LFB216:
5990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
5991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
5992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
5993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
5994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
5995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
5996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
5997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
5998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable DMA Request */
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update Buffer pointer */
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the DMA stream or channel depends on Instance */
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
6029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 108


6040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable DMA Request */
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Update Buffer pointer */
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 109


6097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable the DMA stream or channel depends on Instance */
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
6104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     else
6109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hdma DMA handle
6119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable DMA Request */
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param hdma DMA handle
6146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 110


6154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       treatdmaerror = 1U;
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
6164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       treatdmaerror = 1U;
6166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable Acknowledge */
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param hdma DMA handle.
6184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
6198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 111


6211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 112


6268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
6298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 113


6325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Store Last receive data if any */
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Return HAL_OK */
6332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_OK;
6334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       else
6336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear STOP Flag */
6338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         /* Process Unlocked */
6348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
6351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Check for the Timeout */
6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Process Unlocked */
6361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
6364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval HAL status
6376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
6378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
6379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 114


6382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Check for the Timeout */
6386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
6390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           /* Process Unlocked */
6395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           return HAL_ERROR;
6398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
6399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
6400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear STOP Flag */
6406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Flush TX register */
6409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Process Unlocked */
6419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     return HAL_ERROR;
6422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return HAL_OK;
6424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
6435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 115


6439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
  64              		.loc 1 6446 0
  65              		.cfi_startproc
  66              		@ args = 4, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL1:
  70 0000 70B4     		push	{r4, r5, r6}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 12
  73              		.cfi_offset 4, -12
  74              		.cfi_offset 5, -8
  75              		.cfi_offset 6, -4
  76 0002 039E     		ldr	r6, [sp, #12]
6447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
6448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* update CR2 register */
6453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEN
  77              		.loc 1 6453 0
  78 0004 0568     		ldr	r5, [r0]
  79 0006 6C68     		ldr	r4, [r5, #4]
  80 0008 700D     		lsrs	r0, r6, #21
  81              	.LVL2:
  82 000a 00F48060 		and	r0, r0, #1024
  83 000e 40F07F70 		orr	r0, r0, #66846720
  84 0012 40F45830 		orr	r0, r0, #221184
  85 0016 40F47F70 		orr	r0, r0, #1020
  86 001a 40F00300 		orr	r0, r0, #3
  87 001e 24EA0000 		bic	r0, r4, r0
  88 0022 C1F30901 		ubfx	r1, r1, #0, #10
  89              	.LVL3:
  90 0026 41EA0242 		orr	r2, r1, r2, lsl #16
  91              	.LVL4:
  92 002a 1343     		orrs	r3, r3, r2
  93              	.LVL5:
  94 002c 46EA0302 		orr	r2, r6, r3
  95 0030 0243     		orrs	r2, r2, r0
  96 0032 6A60     		str	r2, [r5, #4]
6454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_
6455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
  97              		.loc 1 6455 0
  98 0034 70BC     		pop	{r4, r5, r6}
  99              	.LCFI1:
 100              		.cfi_restore 6
 101              		.cfi_restore 5
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 116


 104              	.LVL6:
 105 0036 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE216:
 109              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 114              	I2C_Enable_IRQ:
 115              	.LFB217:
6456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 116              		.loc 1 6465 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL7:
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 122              		.loc 1 6468 0
 123 0000 436B     		ldr	r3, [r0, #52]
 124 0002 194A     		ldr	r2, .L18
 125 0004 9342     		cmp	r3, r2
 126 0006 02D0     		beq	.L7
 127              		.loc 1 6468 0 is_stmt 0 discriminator 1
 128 0008 184A     		ldr	r2, .L18+4
 129 000a 9342     		cmp	r3, r2
 130 000c 12D1     		bne	.L8
 131              	.L7:
6469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 132              		.loc 1 6471 0 is_stmt 1
 133 000e 11F4004F 		tst	r1, #32768
 134 0012 01D1     		bne	.L16
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 135              		.loc 1 6466 0
 136 0014 0023     		movs	r3, #0
 137 0016 00E0     		b	.L9
 138              	.L16:
6472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 139              		.loc 1 6474 0
 140 0018 B823     		movs	r3, #184
 141              	.L9:
 142              	.LVL8:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 117


6475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
 143              		.loc 1 6477 0
 144 001a 1029     		cmp	r1, #16
 145 001c 01D1     		bne	.L10
6478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 146              		.loc 1 6480 0
 147 001e 43F09003 		orr	r3, r3, #144
 148              	.LVL9:
 149              	.L10:
6481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 150              		.loc 1 6483 0
 151 0022 2029     		cmp	r1, #32
 152 0024 01D1     		bne	.L11
6484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
 153              		.loc 1 6486 0
 154 0026 43F06003 		orr	r3, r3, #96
 155              	.LVL10:
 156              	.L11:
6487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_RELOAD_IT)
 157              		.loc 1 6489 0
 158 002a 4029     		cmp	r1, #64
 159 002c 17D1     		bne	.L12
6490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable TC interrupts */
6492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
 160              		.loc 1 6492 0
 161 002e 43F04003 		orr	r3, r3, #64
 162              	.LVL11:
 163 0032 14E0     		b	.L12
 164              	.LVL12:
 165              	.L8:
6493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else
6496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 166              		.loc 1 6497 0
 167 0034 11F4004F 		tst	r1, #32768
 168 0038 01D1     		bne	.L17
6466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 169              		.loc 1 6466 0
 170 003a 0023     		movs	r3, #0
 171 003c 00E0     		b	.L13
 172              	.L17:
6498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 118


 173              		.loc 1 6500 0
 174 003e B823     		movs	r3, #184
 175              	.L13:
 176              	.LVL13:
6501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 177              		.loc 1 6503 0
 178 0040 11F0010F 		tst	r1, #1
 179 0044 01D0     		beq	.L14
6504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 180              		.loc 1 6506 0
 181 0046 43F0F203 		orr	r3, r3, #242
 182              	.LVL14:
 183              	.L14:
6507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 184              		.loc 1 6509 0
 185 004a 01F00202 		and	r2, r1, #2
 186 004e 92B2     		uxth	r2, r2
 187 0050 0AB1     		cbz	r2, .L15
6510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 188              		.loc 1 6512 0
 189 0052 43F0F403 		orr	r3, r3, #244
 190              	.LVL15:
 191              	.L15:
6513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 192              		.loc 1 6515 0
 193 0056 2029     		cmp	r1, #32
 194 0058 01D1     		bne	.L12
6516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 195              		.loc 1 6518 0
 196 005a 43F02003 		orr	r3, r3, #32
 197              	.LVL16:
 198              	.L12:
6519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* all interrupts requested done */
6525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 199              		.loc 1 6525 0
 200 005e 0168     		ldr	r1, [r0]
 201              	.LVL17:
 202 0060 0A68     		ldr	r2, [r1]
 203 0062 1343     		orrs	r3, r3, r2
 204              	.LVL18:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 119


 205 0064 0B60     		str	r3, [r1]
 206 0066 7047     		bx	lr
 207              	.L19:
 208              		.align	2
 209              	.L18:
 210 0068 00000000 		.word	I2C_Master_ISR_DMA
 211 006c 00000000 		.word	I2C_Slave_ISR_DMA
 212              		.cfi_endproc
 213              	.LFE217:
 215              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 216              		.align	2
 217              		.thumb
 218              		.thumb_func
 220              	I2C_Disable_IRQ:
 221              	.LFB218:
6526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
6527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 222              		.loc 1 6536 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL19:
 228 0000 10B4     		push	{r4}
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 4, -4
 232              	.LVL20:
6537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 233              		.loc 1 6539 0
 234 0002 11F0010F 		tst	r1, #1
 235 0006 07D0     		beq	.L27
 236              	.LVL21:
6540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 237              		.loc 1 6544 0
 238 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 239 000c 03F02803 		and	r3, r3, #40
 240 0010 282B     		cmp	r3, #40
 241 0012 03D1     		bne	.L28
6542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 242              		.loc 1 6542 0
 243 0014 4223     		movs	r3, #66
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 120


 244 0016 02E0     		b	.L21
 245              	.LVL22:
 246              	.L27:
6537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 247              		.loc 1 6537 0
 248 0018 0023     		movs	r3, #0
 249 001a 00E0     		b	.L21
 250              	.LVL23:
 251              	.L28:
6545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 252              		.loc 1 6547 0
 253 001c F223     		movs	r3, #242
 254              	.LVL24:
 255              	.L21:
6548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 256              		.loc 1 6551 0
 257 001e 01F00202 		and	r2, r1, #2
 258 0022 92B2     		uxth	r2, r2
 259 0024 5AB1     		cbz	r2, .L22
6552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 260              		.loc 1 6554 0
 261 0026 43F04404 		orr	r4, r3, #68
 262              	.LVL25:
6555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 263              		.loc 1 6556 0
 264 002a 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 265 002e 02F02802 		and	r2, r2, #40
 266 0032 282A     		cmp	r2, #40
 267 0034 02D0     		beq	.L29
6557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
6558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 268              		.loc 1 6559 0
 269 0036 43F0F403 		orr	r3, r3, #244
 270              	.LVL26:
 271 003a 00E0     		b	.L22
 272              	.LVL27:
 273              	.L29:
6554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 274              		.loc 1 6554 0
 275 003c 2346     		mov	r3, r4
 276              	.LVL28:
 277              	.L22:
6560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
6561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 278              		.loc 1 6563 0
 279 003e 11F4004F 		tst	r1, #32768
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 121


 280 0042 01D0     		beq	.L23
6564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 281              		.loc 1 6566 0
 282 0044 43F0B803 		orr	r3, r3, #184
 283              	.LVL29:
 284              	.L23:
6567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 285              		.loc 1 6569 0
 286 0048 1029     		cmp	r1, #16
 287 004a 01D1     		bne	.L24
6570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 288              		.loc 1 6572 0
 289 004c 43F09003 		orr	r3, r3, #144
 290              	.LVL30:
 291              	.L24:
6573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 292              		.loc 1 6575 0
 293 0050 2029     		cmp	r1, #32
 294 0052 01D1     		bne	.L25
6576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
 295              		.loc 1 6578 0
 296 0054 43F02003 		orr	r3, r3, #32
 297              	.LVL31:
 298              	.L25:
6579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 299              		.loc 1 6581 0
 300 0058 4029     		cmp	r1, #64
 301 005a 01D1     		bne	.L26
6582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     /* Enable TC interrupts */
6584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
 302              		.loc 1 6584 0
 303 005c 43F04003 		orr	r3, r3, #64
 304              	.LVL32:
 305              	.L26:
6585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 306              		.loc 1 6590 0
 307 0060 0168     		ldr	r1, [r0]
 308              	.LVL33:
 309 0062 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 122


 310 0064 22EA0303 		bic	r3, r2, r3
 311              	.LVL34:
 312 0068 0B60     		str	r3, [r1]
6591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 313              		.loc 1 6591 0
 314 006a 5DF8044B 		ldr	r4, [sp], #4
 315              	.LCFI3:
 316              		.cfi_restore 4
 317              		.cfi_def_cfa_offset 0
 318 006e 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE218:
 322              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 327              	I2C_ConvertOtherXferOptions:
 328              	.LFB219:
6592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
6593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
6594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functionnal XferOptions.
6595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   * @retval None
6597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   */
6598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** {
 329              		.loc 1 6599 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL35:
6600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 335              		.loc 1 6603 0
 336 0000 C36A     		ldr	r3, [r0, #44]
 337 0002 AA2B     		cmp	r3, #170
 338 0004 02D1     		bne	.L32
6604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
 339              		.loc 1 6605 0
 340 0006 0023     		movs	r3, #0
 341 0008 C362     		str	r3, [r0, #44]
 342 000a 7047     		bx	lr
 343              	.L32:
6606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
6607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 344              		.loc 1 6611 0
 345 000c C36A     		ldr	r3, [r0, #44]
 346 000e B3F52A4F 		cmp	r3, #43520
 347 0012 02D1     		bne	.L31
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 123


6612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
6613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 348              		.loc 1 6613 0
 349 0014 4FF00073 		mov	r3, #33554432
 350 0018 C362     		str	r3, [r0, #44]
 351              	.L31:
 352 001a 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE219:
 356              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 357              		.align	2
 358              		.thumb
 359              		.thumb_func
 361              	I2C_IsAcknowledgeFailed:
 362              	.LFB215:
6378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 363              		.loc 1 6378 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              	.LVL36:
 368 0000 70B5     		push	{r4, r5, r6, lr}
 369              	.LCFI4:
 370              		.cfi_def_cfa_offset 16
 371              		.cfi_offset 4, -16
 372              		.cfi_offset 5, -12
 373              		.cfi_offset 6, -8
 374              		.cfi_offset 14, -4
 375 0002 0446     		mov	r4, r0
 376 0004 0D46     		mov	r5, r1
 377 0006 1646     		mov	r6, r2
6379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 378              		.loc 1 6379 0
 379 0008 0368     		ldr	r3, [r0]
 380 000a 9B69     		ldr	r3, [r3, #24]
 381 000c 13F0100F 		tst	r3, #16
 382 0010 18D1     		bne	.L37
6423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 383              		.loc 1 6423 0
 384 0012 0020     		movs	r0, #0
 385              	.LVL37:
 386 0014 70BD     		pop	{r4, r5, r6, pc}
 387              	.LVL38:
 388              	.L39:
6386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 389              		.loc 1 6386 0
 390 0016 B5F1FF3F 		cmp	r5, #-1
 391 001a 13D0     		beq	.L37
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 392              		.loc 1 6388 0
 393 001c FFF7FEFF 		bl	HAL_GetTick
 394              	.LVL39:
 395 0020 801B     		subs	r0, r0, r6
 396 0022 8542     		cmp	r5, r0
 397 0024 00D3     		bcc	.L38
6388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 398              		.loc 1 6388 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 124


 399 0026 6DB9     		cbnz	r5, .L37
 400              	.L38:
6390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 401              		.loc 1 6390 0 is_stmt 1
 402 0028 636C     		ldr	r3, [r4, #68]
 403 002a 43F02003 		orr	r3, r3, #32
 404 002e 6364     		str	r3, [r4, #68]
6391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 405              		.loc 1 6391 0
 406 0030 2023     		movs	r3, #32
 407 0032 84F84130 		strb	r3, [r4, #65]
6392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 408              		.loc 1 6392 0
 409 0036 0023     		movs	r3, #0
 410 0038 84F84230 		strb	r3, [r4, #66]
6395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 411              		.loc 1 6395 0
 412 003c 84F84030 		strb	r3, [r4, #64]
6397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 413              		.loc 1 6397 0
 414 0040 0120     		movs	r0, #1
 415 0042 70BD     		pop	{r4, r5, r6, pc}
 416              	.LVL40:
 417              	.L37:
6383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 418              		.loc 1 6383 0
 419 0044 2368     		ldr	r3, [r4]
 420 0046 9A69     		ldr	r2, [r3, #24]
 421 0048 12F0200F 		tst	r2, #32
 422 004c E3D0     		beq	.L39
6403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 423              		.loc 1 6403 0
 424 004e 1022     		movs	r2, #16
 425 0050 DA61     		str	r2, [r3, #28]
6406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 426              		.loc 1 6406 0
 427 0052 2368     		ldr	r3, [r4]
 428 0054 2025     		movs	r5, #32
 429              	.LVL41:
 430 0056 DD61     		str	r5, [r3, #28]
6409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 431              		.loc 1 6409 0
 432 0058 2046     		mov	r0, r4
 433 005a FFF7FEFF 		bl	I2C_Flush_TXDR
 434              	.LVL42:
6412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 435              		.loc 1 6412 0
 436 005e 2268     		ldr	r2, [r4]
 437 0060 5368     		ldr	r3, [r2, #4]
 438 0062 23F0FF73 		bic	r3, r3, #33423360
 439 0066 23F48B33 		bic	r3, r3, #71168
 440 006a 23F4FF73 		bic	r3, r3, #510
 441 006e 23F00103 		bic	r3, r3, #1
 442 0072 5360     		str	r3, [r2, #4]
6414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 443              		.loc 1 6414 0
 444 0074 636C     		ldr	r3, [r4, #68]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 125


 445 0076 43F00403 		orr	r3, r3, #4
 446 007a 6364     		str	r3, [r4, #68]
6415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 447              		.loc 1 6415 0
 448 007c 84F84150 		strb	r5, [r4, #65]
6416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 449              		.loc 1 6416 0
 450 0080 0023     		movs	r3, #0
 451 0082 84F84230 		strb	r3, [r4, #66]
6419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 452              		.loc 1 6419 0
 453 0086 84F84030 		strb	r3, [r4, #64]
6421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 454              		.loc 1 6421 0
 455 008a 0120     		movs	r0, #1
6424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 456              		.loc 1 6424 0
 457 008c 70BD     		pop	{r4, r5, r6, pc}
 458              		.cfi_endproc
 459              	.LFE215:
 461 008e 00BF     		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 462              		.align	2
 463              		.thumb
 464              		.thumb_func
 466              	I2C_WaitOnTXISFlagUntilTimeout:
 467              	.LFB212:
6244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 468              		.loc 1 6244 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              	.LVL43:
 473 0000 70B5     		push	{r4, r5, r6, lr}
 474              	.LCFI5:
 475              		.cfi_def_cfa_offset 16
 476              		.cfi_offset 4, -16
 477              		.cfi_offset 5, -12
 478              		.cfi_offset 6, -8
 479              		.cfi_offset 14, -4
 480 0002 0446     		mov	r4, r0
 481 0004 0D46     		mov	r5, r1
 482 0006 1646     		mov	r6, r2
6245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 483              		.loc 1 6245 0
 484 0008 1CE0     		b	.L44
 485              	.LVL44:
 486              	.L46:
6248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 487              		.loc 1 6248 0
 488 000a 3246     		mov	r2, r6
 489 000c 2946     		mov	r1, r5
 490 000e 2046     		mov	r0, r4
 491 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 492              	.LVL45:
 493 0014 E8B9     		cbnz	r0, .L47
6254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 494              		.loc 1 6254 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 126


 495 0016 B5F1FF3F 		cmp	r5, #-1
 496 001a 13D0     		beq	.L44
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 497              		.loc 1 6256 0
 498 001c FFF7FEFF 		bl	HAL_GetTick
 499              	.LVL46:
 500 0020 801B     		subs	r0, r0, r6
 501 0022 8542     		cmp	r5, r0
 502 0024 00D3     		bcc	.L45
6256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 503              		.loc 1 6256 0 is_stmt 0 discriminator 1
 504 0026 6DB9     		cbnz	r5, .L44
 505              	.L45:
6258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 506              		.loc 1 6258 0 is_stmt 1
 507 0028 636C     		ldr	r3, [r4, #68]
 508 002a 43F02003 		orr	r3, r3, #32
 509 002e 6364     		str	r3, [r4, #68]
6259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 510              		.loc 1 6259 0
 511 0030 2023     		movs	r3, #32
 512 0032 84F84130 		strb	r3, [r4, #65]
6260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 513              		.loc 1 6260 0
 514 0036 0023     		movs	r3, #0
 515 0038 84F84230 		strb	r3, [r4, #66]
6263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 516              		.loc 1 6263 0
 517 003c 84F84030 		strb	r3, [r4, #64]
6265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 518              		.loc 1 6265 0
 519 0040 0120     		movs	r0, #1
 520 0042 70BD     		pop	{r4, r5, r6, pc}
 521              	.LVL47:
 522              	.L44:
6245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 523              		.loc 1 6245 0
 524 0044 2368     		ldr	r3, [r4]
 525 0046 9B69     		ldr	r3, [r3, #24]
 526 0048 13F0020F 		tst	r3, #2
 527 004c DDD0     		beq	.L46
6269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 528              		.loc 1 6269 0
 529 004e 0020     		movs	r0, #0
 530 0050 70BD     		pop	{r4, r5, r6, pc}
 531              	.LVL48:
 532              	.L47:
6250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 533              		.loc 1 6250 0
 534 0052 0120     		movs	r0, #1
6270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 535              		.loc 1 6270 0
 536 0054 70BD     		pop	{r4, r5, r6, pc}
 537              		.cfi_endproc
 538              	.LFE212:
 540 0056 00BF     		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 541              		.align	2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 127


 542              		.thumb
 543              		.thumb_func
 545              	I2C_WaitOnFlagUntilTimeout:
 546              	.LFB211:
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 547              		.loc 1 6214 0
 548              		.cfi_startproc
 549              		@ args = 4, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              	.LVL49:
 552 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 553              	.LCFI6:
 554              		.cfi_def_cfa_offset 24
 555              		.cfi_offset 3, -24
 556              		.cfi_offset 4, -20
 557              		.cfi_offset 5, -16
 558              		.cfi_offset 6, -12
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 0546     		mov	r5, r0
 562 0004 0F46     		mov	r7, r1
 563 0006 1646     		mov	r6, r2
 564 0008 1C46     		mov	r4, r3
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 565              		.loc 1 6215 0
 566 000a 17E0     		b	.L51
 567              	.LVL50:
 568              	.L54:
6218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 569              		.loc 1 6218 0
 570 000c B4F1FF3F 		cmp	r4, #-1
 571 0010 14D0     		beq	.L51
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 572              		.loc 1 6220 0
 573 0012 FFF7FEFF 		bl	HAL_GetTick
 574              	.LVL51:
 575 0016 069B     		ldr	r3, [sp, #24]
 576 0018 C01A     		subs	r0, r0, r3
 577 001a 8442     		cmp	r4, r0
 578 001c 00D3     		bcc	.L52
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 579              		.loc 1 6220 0 is_stmt 0 discriminator 1
 580 001e 6CB9     		cbnz	r4, .L51
 581              	.L52:
6222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 582              		.loc 1 6222 0 is_stmt 1
 583 0020 6B6C     		ldr	r3, [r5, #68]
 584 0022 43F02003 		orr	r3, r3, #32
 585 0026 6B64     		str	r3, [r5, #68]
6223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 586              		.loc 1 6223 0
 587 0028 2023     		movs	r3, #32
 588 002a 85F84130 		strb	r3, [r5, #65]
6224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 589              		.loc 1 6224 0
 590 002e 0023     		movs	r3, #0
 591 0030 85F84230 		strb	r3, [r5, #66]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 128


6227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 592              		.loc 1 6227 0
 593 0034 85F84030 		strb	r3, [r5, #64]
6228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 594              		.loc 1 6228 0
 595 0038 0120     		movs	r0, #1
 596 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 597              	.LVL52:
 598              	.L51:
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 599              		.loc 1 6215 0
 600 003c 2B68     		ldr	r3, [r5]
 601 003e 9B69     		ldr	r3, [r3, #24]
 602 0040 37EA0303 		bics	r3, r7, r3
 603 0044 0CBF     		ite	eq
 604 0046 0123     		moveq	r3, #1
 605 0048 0023     		movne	r3, #0
 606 004a B342     		cmp	r3, r6
 607 004c DED0     		beq	.L54
6232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 608              		.loc 1 6232 0
 609 004e 0020     		movs	r0, #0
6233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 610              		.loc 1 6233 0
 611 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 612              		.cfi_endproc
 613              	.LFE211:
 615 0052 00BF     		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 616              		.align	2
 617              		.thumb
 618              		.thumb_func
 620              	I2C_RequestMemoryWrite:
 621              	.LFB194:
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 622              		.loc 1 5155 0
 623              		.cfi_startproc
 624              		@ args = 8, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL53:
 627 0000 70B5     		push	{r4, r5, r6, lr}
 628              	.LCFI7:
 629              		.cfi_def_cfa_offset 16
 630              		.cfi_offset 4, -16
 631              		.cfi_offset 5, -12
 632              		.cfi_offset 6, -8
 633              		.cfi_offset 14, -4
 634 0002 82B0     		sub	sp, sp, #8
 635              	.LCFI8:
 636              		.cfi_def_cfa_offset 24
 637 0004 0446     		mov	r4, r0
 638 0006 1546     		mov	r5, r2
 639 0008 1E46     		mov	r6, r3
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 640              		.loc 1 5156 0
 641 000a 184B     		ldr	r3, .L63
 642              	.LVL54:
 643 000c 0093     		str	r3, [sp]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 129


 644 000e 4FF08073 		mov	r3, #16777216
 645 0012 F2B2     		uxtb	r2, r6
 646              	.LVL55:
 647 0014 FFF7FEFF 		bl	I2C_TransferConfig
 648              	.LVL56:
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 649              		.loc 1 5159 0
 650 0018 079A     		ldr	r2, [sp, #28]
 651 001a 0699     		ldr	r1, [sp, #24]
 652 001c 2046     		mov	r0, r4
 653 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 654              	.LVL57:
 655 0022 E8B9     		cbnz	r0, .L60
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 656              		.loc 1 5165 0
 657 0024 012E     		cmp	r6, #1
 658 0026 03D1     		bne	.L58
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 659              		.loc 1 5168 0
 660 0028 2368     		ldr	r3, [r4]
 661 002a EDB2     		uxtb	r5, r5
 662 002c 9D62     		str	r5, [r3, #40]
 663 002e 0BE0     		b	.L59
 664              	.L58:
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 665              		.loc 1 5174 0
 666 0030 2368     		ldr	r3, [r4]
 667 0032 2A0A     		lsrs	r2, r5, #8
 668 0034 9A62     		str	r2, [r3, #40]
5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 669              		.loc 1 5177 0
 670 0036 079A     		ldr	r2, [sp, #28]
 671 0038 0699     		ldr	r1, [sp, #24]
 672 003a 2046     		mov	r0, r4
 673 003c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 674              	.LVL58:
 675 0040 80B9     		cbnz	r0, .L61
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 676              		.loc 1 5183 0
 677 0042 2368     		ldr	r3, [r4]
 678 0044 EDB2     		uxtb	r5, r5
 679 0046 9D62     		str	r5, [r3, #40]
 680              	.L59:
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 681              		.loc 1 5187 0
 682 0048 079B     		ldr	r3, [sp, #28]
 683 004a 0093     		str	r3, [sp]
 684 004c 069B     		ldr	r3, [sp, #24]
 685 004e 0022     		movs	r2, #0
 686 0050 8021     		movs	r1, #128
 687 0052 2046     		mov	r0, r4
 688 0054 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 689              	.LVL59:
 690 0058 0346     		mov	r3, r0
 691 005a 20B1     		cbz	r0, .L57
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 692              		.loc 1 5189 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 130


 693 005c 0123     		movs	r3, #1
 694 005e 02E0     		b	.L57
 695              	.L60:
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 696              		.loc 1 5161 0
 697 0060 0123     		movs	r3, #1
 698 0062 00E0     		b	.L57
 699              	.L61:
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 700              		.loc 1 5179 0
 701 0064 0123     		movs	r3, #1
 702              	.L57:
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 703              		.loc 1 5193 0
 704 0066 1846     		mov	r0, r3
 705 0068 02B0     		add	sp, sp, #8
 706              	.LCFI9:
 707              		.cfi_def_cfa_offset 16
 708              		@ sp needed
 709 006a 70BD     		pop	{r4, r5, r6, pc}
 710              	.LVL60:
 711              	.L64:
 712              		.align	2
 713              	.L63:
 714 006c 00200080 		.word	-2147475456
 715              		.cfi_endproc
 716              	.LFE194:
 718              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 719              		.align	2
 720              		.thumb
 721              		.thumb_func
 723              	I2C_RequestMemoryRead:
 724              	.LFB195:
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 725              		.loc 1 5208 0
 726              		.cfi_startproc
 727              		@ args = 8, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL61:
 730 0000 70B5     		push	{r4, r5, r6, lr}
 731              	.LCFI10:
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 4, -16
 734              		.cfi_offset 5, -12
 735              		.cfi_offset 6, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              	.LCFI11:
 739              		.cfi_def_cfa_offset 24
 740 0004 0446     		mov	r4, r0
 741 0006 1546     		mov	r5, r2
 742 0008 1E46     		mov	r6, r3
5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 743              		.loc 1 5209 0
 744 000a 184B     		ldr	r3, .L72
 745              	.LVL62:
 746 000c 0093     		str	r3, [sp]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 131


 747 000e 0023     		movs	r3, #0
 748 0010 F2B2     		uxtb	r2, r6
 749              	.LVL63:
 750 0012 FFF7FEFF 		bl	I2C_TransferConfig
 751              	.LVL64:
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 752              		.loc 1 5212 0
 753 0016 079A     		ldr	r2, [sp, #28]
 754 0018 0699     		ldr	r1, [sp, #24]
 755 001a 2046     		mov	r0, r4
 756 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 757              	.LVL65:
 758 0020 E8B9     		cbnz	r0, .L69
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 759              		.loc 1 5218 0
 760 0022 012E     		cmp	r6, #1
 761 0024 03D1     		bne	.L67
5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 762              		.loc 1 5221 0
 763 0026 2368     		ldr	r3, [r4]
 764 0028 EDB2     		uxtb	r5, r5
 765 002a 9D62     		str	r5, [r3, #40]
 766 002c 0BE0     		b	.L68
 767              	.L67:
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 768              		.loc 1 5227 0
 769 002e 2368     		ldr	r3, [r4]
 770 0030 2A0A     		lsrs	r2, r5, #8
 771 0032 9A62     		str	r2, [r3, #40]
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 772              		.loc 1 5230 0
 773 0034 079A     		ldr	r2, [sp, #28]
 774 0036 0699     		ldr	r1, [sp, #24]
 775 0038 2046     		mov	r0, r4
 776 003a FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 777              	.LVL66:
 778 003e 80B9     		cbnz	r0, .L70
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 779              		.loc 1 5236 0
 780 0040 2368     		ldr	r3, [r4]
 781 0042 EDB2     		uxtb	r5, r5
 782 0044 9D62     		str	r5, [r3, #40]
 783              	.L68:
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 784              		.loc 1 5240 0
 785 0046 079B     		ldr	r3, [sp, #28]
 786 0048 0093     		str	r3, [sp]
 787 004a 069B     		ldr	r3, [sp, #24]
 788 004c 0022     		movs	r2, #0
 789 004e 4021     		movs	r1, #64
 790 0050 2046     		mov	r0, r4
 791 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 792              	.LVL67:
 793 0056 0346     		mov	r3, r0
 794 0058 20B1     		cbz	r0, .L66
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 795              		.loc 1 5242 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 132


 796 005a 0123     		movs	r3, #1
 797 005c 02E0     		b	.L66
 798              	.L69:
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 799              		.loc 1 5214 0
 800 005e 0123     		movs	r3, #1
 801 0060 00E0     		b	.L66
 802              	.L70:
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 803              		.loc 1 5232 0
 804 0062 0123     		movs	r3, #1
 805              	.L66:
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 806              		.loc 1 5246 0
 807 0064 1846     		mov	r0, r3
 808 0066 02B0     		add	sp, sp, #8
 809              	.LCFI12:
 810              		.cfi_def_cfa_offset 16
 811              		@ sp needed
 812 0068 70BD     		pop	{r4, r5, r6, pc}
 813              	.LVL68:
 814              	.L73:
 815 006a 00BF     		.align	2
 816              	.L72:
 817 006c 00200080 		.word	-2147475456
 818              		.cfi_endproc
 819              	.LFE195:
 821              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 822              		.align	2
 823              		.thumb
 824              		.thumb_func
 826              	I2C_WaitOnSTOPFlagUntilTimeout:
 827              	.LFB213:
6281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 828              		.loc 1 6281 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL69:
 833 0000 70B5     		push	{r4, r5, r6, lr}
 834              	.LCFI13:
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 4, -16
 837              		.cfi_offset 5, -12
 838              		.cfi_offset 6, -8
 839              		.cfi_offset 14, -4
 840 0002 0546     		mov	r5, r0
 841 0004 0C46     		mov	r4, r1
 842 0006 1646     		mov	r6, r2
6282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 843              		.loc 1 6282 0
 844 0008 19E0     		b	.L75
 845              	.LVL70:
 846              	.L78:
6285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 847              		.loc 1 6285 0
 848 000a 3246     		mov	r2, r6
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 133


 849 000c 2146     		mov	r1, r4
 850 000e 2846     		mov	r0, r5
 851 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 852              	.LVL71:
 853 0014 D0B9     		cbnz	r0, .L79
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 854              		.loc 1 6291 0
 855 0016 FFF7FEFF 		bl	HAL_GetTick
 856              	.LVL72:
 857 001a 801B     		subs	r0, r0, r6
 858 001c 8442     		cmp	r4, r0
 859 001e 00D3     		bcc	.L77
6291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 860              		.loc 1 6291 0 is_stmt 0 discriminator 1
 861 0020 6CB9     		cbnz	r4, .L75
 862              	.L77:
6293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 863              		.loc 1 6293 0 is_stmt 1
 864 0022 6B6C     		ldr	r3, [r5, #68]
 865 0024 43F02003 		orr	r3, r3, #32
 866 0028 6B64     		str	r3, [r5, #68]
6294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 867              		.loc 1 6294 0
 868 002a 2023     		movs	r3, #32
 869 002c 85F84130 		strb	r3, [r5, #65]
6295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 870              		.loc 1 6295 0
 871 0030 0023     		movs	r3, #0
 872 0032 85F84230 		strb	r3, [r5, #66]
6298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 873              		.loc 1 6298 0
 874 0036 85F84030 		strb	r3, [r5, #64]
6300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 875              		.loc 1 6300 0
 876 003a 0120     		movs	r0, #1
 877 003c 70BD     		pop	{r4, r5, r6, pc}
 878              	.LVL73:
 879              	.L75:
6282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 880              		.loc 1 6282 0
 881 003e 2B68     		ldr	r3, [r5]
 882 0040 9B69     		ldr	r3, [r3, #24]
 883 0042 13F0200F 		tst	r3, #32
 884 0046 E0D0     		beq	.L78
6303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 885              		.loc 1 6303 0
 886 0048 0020     		movs	r0, #0
 887 004a 70BD     		pop	{r4, r5, r6, pc}
 888              	.LVL74:
 889              	.L79:
6287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 890              		.loc 1 6287 0
 891 004c 0120     		movs	r0, #1
6304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 892              		.loc 1 6304 0
 893 004e 70BD     		pop	{r4, r5, r6, pc}
 894              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 134


 895              	.LFE213:
 897              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 898              		.align	2
 899              		.thumb
 900              		.thumb_func
 902              	I2C_WaitOnRXNEFlagUntilTimeout:
 903              	.LFB214:
6315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 904              		.loc 1 6315 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL75:
 909 0000 70B5     		push	{r4, r5, r6, lr}
 910              	.LCFI14:
 911              		.cfi_def_cfa_offset 16
 912              		.cfi_offset 4, -16
 913              		.cfi_offset 5, -12
 914              		.cfi_offset 6, -8
 915              		.cfi_offset 14, -4
 916 0002 0446     		mov	r4, r0
 917 0004 0D46     		mov	r5, r1
 918 0006 1646     		mov	r6, r2
6316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 919              		.loc 1 6316 0
 920 0008 3BE0     		b	.L82
 921              	.LVL76:
 922              	.L87:
6319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 923              		.loc 1 6319 0
 924 000a 3246     		mov	r2, r6
 925 000c 2946     		mov	r1, r5
 926 000e 2046     		mov	r0, r4
 927 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 928              	.LVL77:
 929 0014 0146     		mov	r1, r0
 930 0016 0028     		cmp	r0, #0
 931 0018 3AD1     		bne	.L88
6325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 932              		.loc 1 6325 0
 933 001a 2368     		ldr	r3, [r4]
 934 001c 9A69     		ldr	r2, [r3, #24]
 935 001e 12F0200F 		tst	r2, #32
 936 0022 1CD0     		beq	.L84
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 937              		.loc 1 6329 0
 938 0024 9A69     		ldr	r2, [r3, #24]
 939 0026 12F0040F 		tst	r2, #4
 940 002a 01D0     		beq	.L85
6329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 941              		.loc 1 6329 0 is_stmt 0 discriminator 1
 942 002c 228D     		ldrh	r2, [r4, #40]
 943 002e 82BB     		cbnz	r2, .L83
 944              	.L85:
6338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 945              		.loc 1 6338 0 is_stmt 1
 946 0030 2022     		movs	r2, #32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 135


 947 0032 DA61     		str	r2, [r3, #28]
6341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 948              		.loc 1 6341 0
 949 0034 2168     		ldr	r1, [r4]
 950 0036 4B68     		ldr	r3, [r1, #4]
 951 0038 23F0FF73 		bic	r3, r3, #33423360
 952 003c 23F48B33 		bic	r3, r3, #71168
 953 0040 23F4FF73 		bic	r3, r3, #510
 954 0044 23F00103 		bic	r3, r3, #1
 955 0048 4B60     		str	r3, [r1, #4]
6343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 956              		.loc 1 6343 0
 957 004a 0023     		movs	r3, #0
 958 004c 6364     		str	r3, [r4, #68]
6344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 959              		.loc 1 6344 0
 960 004e 84F84120 		strb	r2, [r4, #65]
6345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 961              		.loc 1 6345 0
 962 0052 84F84230 		strb	r3, [r4, #66]
6348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 963              		.loc 1 6348 0
 964 0056 84F84030 		strb	r3, [r4, #64]
6350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 965              		.loc 1 6350 0
 966 005a 0121     		movs	r1, #1
 967 005c 19E0     		b	.L83
 968              	.L84:
6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 969              		.loc 1 6355 0
 970 005e FFF7FEFF 		bl	HAL_GetTick
 971              	.LVL78:
 972 0062 801B     		subs	r0, r0, r6
 973 0064 8542     		cmp	r5, r0
 974 0066 00D3     		bcc	.L86
6355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 975              		.loc 1 6355 0 is_stmt 0 discriminator 1
 976 0068 5DB9     		cbnz	r5, .L82
 977              	.L86:
6357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 978              		.loc 1 6357 0 is_stmt 1
 979 006a 636C     		ldr	r3, [r4, #68]
 980 006c 43F02003 		orr	r3, r3, #32
 981 0070 6364     		str	r3, [r4, #68]
6358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 982              		.loc 1 6358 0
 983 0072 2023     		movs	r3, #32
 984 0074 84F84130 		strb	r3, [r4, #65]
6361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 985              		.loc 1 6361 0
 986 0078 0023     		movs	r3, #0
 987 007a 84F84030 		strb	r3, [r4, #64]
6363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 988              		.loc 1 6363 0
 989 007e 0121     		movs	r1, #1
 990 0080 07E0     		b	.L83
 991              	.L82:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 136


6316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 992              		.loc 1 6316 0
 993 0082 2368     		ldr	r3, [r4]
 994 0084 9B69     		ldr	r3, [r3, #24]
 995 0086 13F0040F 		tst	r3, #4
 996 008a BED0     		beq	.L87
6366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 997              		.loc 1 6366 0
 998 008c 0021     		movs	r1, #0
 999 008e 00E0     		b	.L83
 1000              	.L88:
6321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1001              		.loc 1 6321 0
 1002 0090 0121     		movs	r1, #1
 1003              	.L83:
6367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1004              		.loc 1 6367 0
 1005 0092 0846     		mov	r0, r1
 1006 0094 70BD     		pop	{r4, r5, r6, pc}
 1007              		.cfi_endproc
 1008              	.LFE214:
 1010 0096 00BF     		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1011              		.align	2
 1012              		.weak	HAL_I2C_MspInit
 1013              		.thumb
 1014              		.thumb_func
 1016              	HAL_I2C_MspInit:
 1017              	.LFB143:
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1018              		.loc 1 628 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023              	.LVL79:
 1024 0000 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE143:
 1028 0002 00BF     		.section	.text.HAL_I2C_Init,"ax",%progbits
 1029              		.align	2
 1030              		.global	HAL_I2C_Init
 1031              		.thumb
 1032              		.thumb_func
 1034              	HAL_I2C_Init:
 1035              	.LFB141:
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1036              		.loc 1 473 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL80:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1041              		.loc 1 475 0
 1042 0000 0028     		cmp	r0, #0
 1043 0002 57D0     		beq	.L97
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1044              		.loc 1 473 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 137


 1045 0004 10B5     		push	{r4, lr}
 1046              	.LCFI15:
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
 1050 0006 0446     		mov	r4, r0
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1051              		.loc 1 490 0
 1052 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1053 000c 13F0FF0F 		tst	r3, #255
 1054 0010 04D1     		bne	.L93
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1055              		.loc 1 493 0
 1056 0012 0023     		movs	r3, #0
 1057 0014 80F84030 		strb	r3, [r0, #64]
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1058              		.loc 1 517 0
 1059 0018 FFF7FEFF 		bl	HAL_I2C_MspInit
 1060              	.LVL81:
 1061              	.L93:
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1062              		.loc 1 521 0
 1063 001c 2423     		movs	r3, #36
 1064 001e 84F84130 		strb	r3, [r4, #65]
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1065              		.loc 1 524 0
 1066 0022 2268     		ldr	r2, [r4]
 1067 0024 1368     		ldr	r3, [r2]
 1068 0026 23F00103 		bic	r3, r3, #1
 1069 002a 1360     		str	r3, [r2]
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1070              		.loc 1 528 0
 1071 002c 2268     		ldr	r2, [r4]
 1072 002e 6368     		ldr	r3, [r4, #4]
 1073 0030 23F07063 		bic	r3, r3, #251658240
 1074 0034 1361     		str	r3, [r2, #16]
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1075              		.loc 1 532 0
 1076 0036 2268     		ldr	r2, [r4]
 1077 0038 9368     		ldr	r3, [r2, #8]
 1078 003a 23F40043 		bic	r3, r3, #32768
 1079 003e 9360     		str	r3, [r2, #8]
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1080              		.loc 1 535 0
 1081 0040 E368     		ldr	r3, [r4, #12]
 1082 0042 012B     		cmp	r3, #1
 1083 0044 05D1     		bne	.L94
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1084              		.loc 1 537 0
 1085 0046 2268     		ldr	r2, [r4]
 1086 0048 A368     		ldr	r3, [r4, #8]
 1087 004a 43F40043 		orr	r3, r3, #32768
 1088 004e 9360     		str	r3, [r2, #8]
 1089 0050 04E0     		b	.L95
 1090              	.L94:
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1091              		.loc 1 541 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 138


 1092 0052 2268     		ldr	r2, [r4]
 1093 0054 A368     		ldr	r3, [r4, #8]
 1094 0056 43F40443 		orr	r3, r3, #33792
 1095 005a 9360     		str	r3, [r2, #8]
 1096              	.L95:
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1097              		.loc 1 546 0
 1098 005c E368     		ldr	r3, [r4, #12]
 1099 005e 022B     		cmp	r3, #2
 1100 0060 03D1     		bne	.L96
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1101              		.loc 1 548 0
 1102 0062 2368     		ldr	r3, [r4]
 1103 0064 4FF40062 		mov	r2, #2048
 1104 0068 5A60     		str	r2, [r3, #4]
 1105              	.L96:
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1106              		.loc 1 551 0
 1107 006a 2268     		ldr	r2, [r4]
 1108 006c 5168     		ldr	r1, [r2, #4]
 1109 006e 124B     		ldr	r3, .L100
 1110 0070 0B43     		orrs	r3, r3, r1
 1111 0072 5360     		str	r3, [r2, #4]
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1112              		.loc 1 555 0
 1113 0074 2268     		ldr	r2, [r4]
 1114 0076 D368     		ldr	r3, [r2, #12]
 1115 0078 23F40043 		bic	r3, r3, #32768
 1116 007c D360     		str	r3, [r2, #12]
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1117              		.loc 1 558 0
 1118 007e 2268     		ldr	r2, [r4]
 1119 0080 2169     		ldr	r1, [r4, #16]
 1120 0082 6369     		ldr	r3, [r4, #20]
 1121 0084 0B43     		orrs	r3, r3, r1
 1122 0086 A169     		ldr	r1, [r4, #24]
 1123 0088 43EA0123 		orr	r3, r3, r1, lsl #8
 1124 008c D360     		str	r3, [r2, #12]
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1125              		.loc 1 562 0
 1126 008e 2268     		ldr	r2, [r4]
 1127 0090 E169     		ldr	r1, [r4, #28]
 1128 0092 236A     		ldr	r3, [r4, #32]
 1129 0094 0B43     		orrs	r3, r3, r1
 1130 0096 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1131              		.loc 1 565 0
 1132 0098 2268     		ldr	r2, [r4]
 1133 009a 1368     		ldr	r3, [r2]
 1134 009c 43F00103 		orr	r3, r3, #1
 1135 00a0 1360     		str	r3, [r2]
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1136              		.loc 1 567 0
 1137 00a2 0020     		movs	r0, #0
 1138 00a4 6064     		str	r0, [r4, #68]
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1139              		.loc 1 568 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 139


 1140 00a6 2023     		movs	r3, #32
 1141 00a8 84F84130 		strb	r3, [r4, #65]
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1142              		.loc 1 569 0
 1143 00ac 2063     		str	r0, [r4, #48]
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1144              		.loc 1 570 0
 1145 00ae 84F84200 		strb	r0, [r4, #66]
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 1146              		.loc 1 572 0
 1147 00b2 10BD     		pop	{r4, pc}
 1148              	.LVL82:
 1149              	.L97:
 1150              	.LCFI16:
 1151              		.cfi_def_cfa_offset 0
 1152              		.cfi_restore 4
 1153              		.cfi_restore 14
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1154              		.loc 1 477 0
 1155 00b4 0120     		movs	r0, #1
 1156              	.LVL83:
 1157 00b6 7047     		bx	lr
 1158              	.L101:
 1159              		.align	2
 1160              	.L100:
 1161 00b8 00800002 		.word	33587200
 1162              		.cfi_endproc
 1163              	.LFE141:
 1165              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1166              		.align	2
 1167              		.weak	HAL_I2C_MspDeInit
 1168              		.thumb
 1169              		.thumb_func
 1171              	HAL_I2C_MspDeInit:
 1172              	.LFB144:
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1173              		.loc 1 644 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178              	.LVL84:
 1179 0000 7047     		bx	lr
 1180              		.cfi_endproc
 1181              	.LFE144:
 1183 0002 00BF     		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1184              		.align	2
 1185              		.global	HAL_I2C_DeInit
 1186              		.thumb
 1187              		.thumb_func
 1189              	HAL_I2C_DeInit:
 1190              	.LFB142:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1191              		.loc 1 582 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 140


 1195              	.LVL85:
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1196              		.loc 1 584 0
 1197 0000 A8B1     		cbz	r0, .L105
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1198              		.loc 1 582 0
 1199 0002 10B5     		push	{r4, lr}
 1200              	.LCFI17:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
 1204 0004 0446     		mov	r4, r0
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1205              		.loc 1 592 0
 1206 0006 2423     		movs	r3, #36
 1207 0008 80F84130 		strb	r3, [r0, #65]
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1208              		.loc 1 595 0
 1209 000c 0268     		ldr	r2, [r0]
 1210 000e 1368     		ldr	r3, [r2]
 1211 0010 23F00103 		bic	r3, r3, #1
 1212 0014 1360     		str	r3, [r2]
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1213              		.loc 1 607 0
 1214 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1215              	.LVL86:
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1216              		.loc 1 610 0
 1217 001a 0020     		movs	r0, #0
 1218 001c 6064     		str	r0, [r4, #68]
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1219              		.loc 1 611 0
 1220 001e 84F84100 		strb	r0, [r4, #65]
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1221              		.loc 1 612 0
 1222 0022 2063     		str	r0, [r4, #48]
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1223              		.loc 1 613 0
 1224 0024 84F84200 		strb	r0, [r4, #66]
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1225              		.loc 1 616 0
 1226 0028 84F84000 		strb	r0, [r4, #64]
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 1227              		.loc 1 618 0
 1228 002c 10BD     		pop	{r4, pc}
 1229              	.LVL87:
 1230              	.L105:
 1231              	.LCFI18:
 1232              		.cfi_def_cfa_offset 0
 1233              		.cfi_restore 4
 1234              		.cfi_restore 14
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1235              		.loc 1 586 0
 1236 002e 0120     		movs	r0, #1
 1237              	.LVL88:
 1238 0030 7047     		bx	lr
 1239              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 141


 1240              	.LFE142:
 1242 0032 00BF     		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1243              		.align	2
 1244              		.global	HAL_I2C_Master_Transmit
 1245              		.thumb
 1246              		.thumb_func
 1248              	HAL_I2C_Master_Transmit:
 1249              	.LFB145:
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1250              		.loc 1 1064 0
 1251              		.cfi_startproc
 1252              		@ args = 4, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              	.LVL89:
 1255 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1256              	.LCFI19:
 1257              		.cfi_def_cfa_offset 28
 1258              		.cfi_offset 4, -28
 1259              		.cfi_offset 5, -24
 1260              		.cfi_offset 6, -20
 1261              		.cfi_offset 7, -16
 1262              		.cfi_offset 8, -12
 1263              		.cfi_offset 9, -8
 1264              		.cfi_offset 14, -4
 1265 0004 83B0     		sub	sp, sp, #12
 1266              	.LCFI20:
 1267              		.cfi_def_cfa_offset 40
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1268              		.loc 1 1067 0
 1269 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1270 000a EDB2     		uxtb	r5, r5
 1271 000c 202D     		cmp	r5, #32
 1272 000e 40F0A380 		bne	.L116
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1273              		.loc 1 1070 0
 1274 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1275 0016 012C     		cmp	r4, #1
 1276 0018 00F0A080 		beq	.L117
 1277 001c 9846     		mov	r8, r3
 1278 001e 1746     		mov	r7, r2
 1279 0020 0D46     		mov	r5, r1
 1280 0022 0446     		mov	r4, r0
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1281              		.loc 1 1070 0 is_stmt 0 discriminator 2
 1282 0024 4FF00109 		mov	r9, #1
 1283 0028 80F84090 		strb	r9, [r0, #64]
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1284              		.loc 1 1073 0 is_stmt 1 discriminator 2
 1285 002c FFF7FEFF 		bl	HAL_GetTick
 1286              	.LVL90:
 1287 0030 0646     		mov	r6, r0
 1288              	.LVL91:
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1289              		.loc 1 1075 0 discriminator 2
 1290 0032 0090     		str	r0, [sp]
 1291 0034 1923     		movs	r3, #25
 1292 0036 4A46     		mov	r2, r9
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 142


 1293 0038 4FF40041 		mov	r1, #32768
 1294 003c 2046     		mov	r0, r4
 1295              	.LVL92:
 1296 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1297              	.LVL93:
 1298 0042 0028     		cmp	r0, #0
 1299 0044 40F08C80 		bne	.L118
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1300              		.loc 1 1080 0
 1301 0048 2123     		movs	r3, #33
 1302 004a 84F84130 		strb	r3, [r4, #65]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1303              		.loc 1 1081 0
 1304 004e 1023     		movs	r3, #16
 1305 0050 84F84230 		strb	r3, [r4, #66]
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1306              		.loc 1 1082 0
 1307 0054 0023     		movs	r3, #0
 1308 0056 6364     		str	r3, [r4, #68]
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1309              		.loc 1 1085 0
 1310 0058 6762     		str	r7, [r4, #36]
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1311              		.loc 1 1086 0
 1312 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1313              		.loc 1 1087 0
 1314 005e 6363     		str	r3, [r4, #52]
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1315              		.loc 1 1091 0
 1316 0060 638D     		ldrh	r3, [r4, #42]
 1317 0062 9BB2     		uxth	r3, r3
 1318 0064 FF2B     		cmp	r3, #255
 1319 0066 0AD9     		bls	.L110
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1320              		.loc 1 1093 0
 1321 0068 FF22     		movs	r2, #255
 1322 006a 2285     		strh	r2, [r4, #40]	@ movhi
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1323              		.loc 1 1094 0
 1324 006c 424B     		ldr	r3, .L123
 1325 006e 0093     		str	r3, [sp]
 1326 0070 4FF08073 		mov	r3, #16777216
 1327 0074 2946     		mov	r1, r5
 1328 0076 2046     		mov	r0, r4
 1329 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1330              	.LVL94:
 1331 007c 4BE0     		b	.L111
 1332              	.L110:
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1333              		.loc 1 1098 0
 1334 007e 628D     		ldrh	r2, [r4, #42]
 1335 0080 92B2     		uxth	r2, r2
 1336 0082 2285     		strh	r2, [r4, #40]	@ movhi
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1337              		.loc 1 1099 0
 1338 0084 3C4B     		ldr	r3, .L123
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 143


 1339 0086 0093     		str	r3, [sp]
 1340 0088 4FF00073 		mov	r3, #33554432
 1341 008c D2B2     		uxtb	r2, r2
 1342 008e 2946     		mov	r1, r5
 1343 0090 2046     		mov	r0, r4
 1344 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1345              	.LVL95:
 1346 0096 3EE0     		b	.L111
 1347              	.L115:
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1348              		.loc 1 1105 0
 1349 0098 3246     		mov	r2, r6
 1350 009a 0A99     		ldr	r1, [sp, #40]
 1351 009c 2046     		mov	r0, r4
 1352 009e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1353              	.LVL96:
 1354 00a2 0028     		cmp	r0, #0
 1355 00a4 5ED1     		bne	.L119
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1356              		.loc 1 1110 0
 1357 00a6 2368     		ldr	r3, [r4]
 1358 00a8 626A     		ldr	r2, [r4, #36]
 1359 00aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1360 00ac 9A62     		str	r2, [r3, #40]
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1361              		.loc 1 1113 0
 1362 00ae 636A     		ldr	r3, [r4, #36]
 1363 00b0 0133     		adds	r3, r3, #1
 1364 00b2 6362     		str	r3, [r4, #36]
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 1365              		.loc 1 1115 0
 1366 00b4 638D     		ldrh	r3, [r4, #42]
 1367 00b6 9BB2     		uxth	r3, r3
 1368 00b8 013B     		subs	r3, r3, #1
 1369 00ba 9BB2     		uxth	r3, r3
 1370 00bc 6385     		strh	r3, [r4, #42]	@ movhi
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1371              		.loc 1 1116 0
 1372 00be 238D     		ldrh	r3, [r4, #40]
 1373 00c0 013B     		subs	r3, r3, #1
 1374 00c2 9BB2     		uxth	r3, r3
 1375 00c4 2385     		strh	r3, [r4, #40]	@ movhi
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1376              		.loc 1 1118 0
 1377 00c6 628D     		ldrh	r2, [r4, #42]
 1378 00c8 92B2     		uxth	r2, r2
 1379 00ca 22B3     		cbz	r2, .L111
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1380              		.loc 1 1118 0 is_stmt 0 discriminator 1
 1381 00cc 1BBB     		cbnz	r3, .L111
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1382              		.loc 1 1121 0 is_stmt 1
 1383 00ce 0096     		str	r6, [sp]
 1384 00d0 0A9B     		ldr	r3, [sp, #40]
 1385 00d2 0022     		movs	r2, #0
 1386 00d4 8021     		movs	r1, #128
 1387 00d6 2046     		mov	r0, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 144


 1388 00d8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1389              	.LVL97:
 1390 00dc 0028     		cmp	r0, #0
 1391 00de 43D1     		bne	.L120
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1392              		.loc 1 1126 0
 1393 00e0 638D     		ldrh	r3, [r4, #42]
 1394 00e2 9BB2     		uxth	r3, r3
 1395 00e4 FF2B     		cmp	r3, #255
 1396 00e6 0AD9     		bls	.L114
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1397              		.loc 1 1128 0
 1398 00e8 FF22     		movs	r2, #255
 1399 00ea 2285     		strh	r2, [r4, #40]	@ movhi
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1400              		.loc 1 1129 0
 1401 00ec 0023     		movs	r3, #0
 1402 00ee 0093     		str	r3, [sp]
 1403 00f0 4FF08073 		mov	r3, #16777216
 1404 00f4 2946     		mov	r1, r5
 1405 00f6 2046     		mov	r0, r4
 1406 00f8 FFF7FEFF 		bl	I2C_TransferConfig
 1407              	.LVL98:
 1408 00fc 0BE0     		b	.L111
 1409              	.L114:
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1410              		.loc 1 1133 0
 1411 00fe 628D     		ldrh	r2, [r4, #42]
 1412 0100 92B2     		uxth	r2, r2
 1413 0102 2285     		strh	r2, [r4, #40]	@ movhi
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1414              		.loc 1 1134 0
 1415 0104 0023     		movs	r3, #0
 1416 0106 0093     		str	r3, [sp]
 1417 0108 4FF00073 		mov	r3, #33554432
 1418 010c D2B2     		uxtb	r2, r2
 1419 010e 2946     		mov	r1, r5
 1420 0110 2046     		mov	r0, r4
 1421 0112 FFF7FEFF 		bl	I2C_TransferConfig
 1422              	.LVL99:
 1423              	.L111:
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1424              		.loc 1 1102 0
 1425 0116 638D     		ldrh	r3, [r4, #42]
 1426 0118 9BB2     		uxth	r3, r3
 1427 011a 002B     		cmp	r3, #0
 1428 011c BCD1     		bne	.L115
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1429              		.loc 1 1141 0
 1430 011e 3246     		mov	r2, r6
 1431 0120 0A99     		ldr	r1, [sp, #40]
 1432 0122 2046     		mov	r0, r4
 1433 0124 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1434              	.LVL100:
 1435 0128 0346     		mov	r3, r0
 1436 012a F8B9     		cbnz	r0, .L121
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 145


 1437              		.loc 1 1147 0
 1438 012c 2268     		ldr	r2, [r4]
 1439 012e 2021     		movs	r1, #32
 1440 0130 D161     		str	r1, [r2, #28]
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1441              		.loc 1 1150 0
 1442 0132 2068     		ldr	r0, [r4]
 1443 0134 4268     		ldr	r2, [r0, #4]
 1444 0136 22F0FF72 		bic	r2, r2, #33423360
 1445 013a 22F48B32 		bic	r2, r2, #71168
 1446 013e 22F4FF72 		bic	r2, r2, #510
 1447 0142 22F00102 		bic	r2, r2, #1
 1448 0146 4260     		str	r2, [r0, #4]
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1449              		.loc 1 1152 0
 1450 0148 84F84110 		strb	r1, [r4, #65]
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1451              		.loc 1 1153 0
 1452 014c 0022     		movs	r2, #0
 1453 014e 84F84220 		strb	r2, [r4, #66]
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1454              		.loc 1 1156 0
 1455 0152 84F84020 		strb	r2, [r4, #64]
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1456              		.loc 1 1158 0
 1457 0156 0AE0     		b	.L109
 1458              	.LVL101:
 1459              	.L116:
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1460              		.loc 1 1162 0
 1461 0158 0223     		movs	r3, #2
 1462              	.LVL102:
 1463 015a 08E0     		b	.L109
 1464              	.LVL103:
 1465              	.L117:
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1466              		.loc 1 1070 0
 1467 015c 0223     		movs	r3, #2
 1468              	.LVL104:
 1469 015e 06E0     		b	.L109
 1470              	.LVL105:
 1471              	.L118:
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1472              		.loc 1 1077 0
 1473 0160 0123     		movs	r3, #1
 1474 0162 04E0     		b	.L109
 1475              	.L119:
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1476              		.loc 1 1107 0
 1477 0164 0123     		movs	r3, #1
 1478 0166 02E0     		b	.L109
 1479              	.L120:
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1480              		.loc 1 1123 0
 1481 0168 0123     		movs	r3, #1
 1482 016a 00E0     		b	.L109
 1483              	.L121:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 146


1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1484              		.loc 1 1143 0
 1485 016c 0123     		movs	r3, #1
 1486              	.LVL106:
 1487              	.L109:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1488              		.loc 1 1164 0
 1489 016e 1846     		mov	r0, r3
 1490 0170 03B0     		add	sp, sp, #12
 1491              	.LCFI21:
 1492              		.cfi_def_cfa_offset 28
 1493              		@ sp needed
 1494 0172 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1495              	.LVL107:
 1496              	.L124:
 1497 0176 00BF     		.align	2
 1498              	.L123:
 1499 0178 00200080 		.word	-2147475456
 1500              		.cfi_endproc
 1501              	.LFE145:
 1503              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1504              		.align	2
 1505              		.global	HAL_I2C_Master_Receive
 1506              		.thumb
 1507              		.thumb_func
 1509              	HAL_I2C_Master_Receive:
 1510              	.LFB146:
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1511              		.loc 1 1178 0
 1512              		.cfi_startproc
 1513              		@ args = 4, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              	.LVL108:
 1516 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1517              	.LCFI22:
 1518              		.cfi_def_cfa_offset 28
 1519              		.cfi_offset 4, -28
 1520              		.cfi_offset 5, -24
 1521              		.cfi_offset 6, -20
 1522              		.cfi_offset 7, -16
 1523              		.cfi_offset 8, -12
 1524              		.cfi_offset 9, -8
 1525              		.cfi_offset 14, -4
 1526 0004 83B0     		sub	sp, sp, #12
 1527              	.LCFI23:
 1528              		.cfi_def_cfa_offset 40
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1529              		.loc 1 1181 0
 1530 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1531 000a EDB2     		uxtb	r5, r5
 1532 000c 202D     		cmp	r5, #32
 1533 000e 40F0A280 		bne	.L133
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1534              		.loc 1 1184 0
 1535 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1536 0016 012C     		cmp	r4, #1
 1537 0018 00F09F80 		beq	.L134
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 147


 1538 001c 9846     		mov	r8, r3
 1539 001e 1746     		mov	r7, r2
 1540 0020 0D46     		mov	r5, r1
 1541 0022 0446     		mov	r4, r0
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1542              		.loc 1 1184 0 is_stmt 0 discriminator 2
 1543 0024 4FF00109 		mov	r9, #1
 1544 0028 80F84090 		strb	r9, [r0, #64]
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1545              		.loc 1 1187 0 is_stmt 1 discriminator 2
 1546 002c FFF7FEFF 		bl	HAL_GetTick
 1547              	.LVL109:
 1548 0030 0646     		mov	r6, r0
 1549              	.LVL110:
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1550              		.loc 1 1189 0 discriminator 2
 1551 0032 0090     		str	r0, [sp]
 1552 0034 1923     		movs	r3, #25
 1553 0036 4A46     		mov	r2, r9
 1554 0038 4FF40041 		mov	r1, #32768
 1555 003c 2046     		mov	r0, r4
 1556              	.LVL111:
 1557 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1558              	.LVL112:
 1559 0042 0028     		cmp	r0, #0
 1560 0044 40F08B80 		bne	.L135
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1561              		.loc 1 1194 0
 1562 0048 2223     		movs	r3, #34
 1563 004a 84F84130 		strb	r3, [r4, #65]
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1564              		.loc 1 1195 0
 1565 004e 1023     		movs	r3, #16
 1566 0050 84F84230 		strb	r3, [r4, #66]
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1567              		.loc 1 1196 0
 1568 0054 0023     		movs	r3, #0
 1569 0056 6364     		str	r3, [r4, #68]
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1570              		.loc 1 1199 0
 1571 0058 6762     		str	r7, [r4, #36]
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1572              		.loc 1 1200 0
 1573 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1574              		.loc 1 1201 0
 1575 005e 6363     		str	r3, [r4, #52]
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1576              		.loc 1 1205 0
 1577 0060 638D     		ldrh	r3, [r4, #42]
 1578 0062 9BB2     		uxth	r3, r3
 1579 0064 FF2B     		cmp	r3, #255
 1580 0066 0AD9     		bls	.L127
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1581              		.loc 1 1207 0
 1582 0068 FF22     		movs	r2, #255
 1583 006a 2285     		strh	r2, [r4, #40]	@ movhi
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 148


1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1584              		.loc 1 1208 0
 1585 006c 414B     		ldr	r3, .L140
 1586 006e 0093     		str	r3, [sp]
 1587 0070 4FF08073 		mov	r3, #16777216
 1588 0074 2946     		mov	r1, r5
 1589 0076 2046     		mov	r0, r4
 1590 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1591              	.LVL113:
 1592 007c 4AE0     		b	.L128
 1593              	.L127:
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1594              		.loc 1 1212 0
 1595 007e 628D     		ldrh	r2, [r4, #42]
 1596 0080 92B2     		uxth	r2, r2
 1597 0082 2285     		strh	r2, [r4, #40]	@ movhi
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1598              		.loc 1 1213 0
 1599 0084 3B4B     		ldr	r3, .L140
 1600 0086 0093     		str	r3, [sp]
 1601 0088 4FF00073 		mov	r3, #33554432
 1602 008c D2B2     		uxtb	r2, r2
 1603 008e 2946     		mov	r1, r5
 1604 0090 2046     		mov	r0, r4
 1605 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1606              	.LVL114:
 1607 0096 3DE0     		b	.L128
 1608              	.L132:
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1609              		.loc 1 1219 0
 1610 0098 3246     		mov	r2, r6
 1611 009a 0A99     		ldr	r1, [sp, #40]
 1612 009c 2046     		mov	r0, r4
 1613 009e FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1614              	.LVL115:
 1615 00a2 0028     		cmp	r0, #0
 1616 00a4 5DD1     		bne	.L136
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1617              		.loc 1 1225 0
 1618 00a6 636A     		ldr	r3, [r4, #36]
 1619 00a8 2268     		ldr	r2, [r4]
 1620 00aa 526A     		ldr	r2, [r2, #36]
 1621 00ac 1A70     		strb	r2, [r3]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1622              		.loc 1 1228 0
 1623 00ae 636A     		ldr	r3, [r4, #36]
 1624 00b0 0133     		adds	r3, r3, #1
 1625 00b2 6362     		str	r3, [r4, #36]
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 1626              		.loc 1 1230 0
 1627 00b4 228D     		ldrh	r2, [r4, #40]
 1628 00b6 013A     		subs	r2, r2, #1
 1629 00b8 92B2     		uxth	r2, r2
 1630 00ba 2285     		strh	r2, [r4, #40]	@ movhi
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1631              		.loc 1 1231 0
 1632 00bc 638D     		ldrh	r3, [r4, #42]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 149


 1633 00be 9BB2     		uxth	r3, r3
 1634 00c0 013B     		subs	r3, r3, #1
 1635 00c2 9BB2     		uxth	r3, r3
 1636 00c4 6385     		strh	r3, [r4, #42]	@ movhi
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1637              		.loc 1 1233 0
 1638 00c6 638D     		ldrh	r3, [r4, #42]
 1639 00c8 9BB2     		uxth	r3, r3
 1640 00ca 1BB3     		cbz	r3, .L128
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1641              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1642 00cc 12BB     		cbnz	r2, .L128
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1643              		.loc 1 1236 0 is_stmt 1
 1644 00ce 0096     		str	r6, [sp]
 1645 00d0 0A9B     		ldr	r3, [sp, #40]
 1646 00d2 8021     		movs	r1, #128
 1647 00d4 2046     		mov	r0, r4
 1648 00d6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1649              	.LVL116:
 1650 00da 0028     		cmp	r0, #0
 1651 00dc 43D1     		bne	.L137
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 1652              		.loc 1 1241 0
 1653 00de 638D     		ldrh	r3, [r4, #42]
 1654 00e0 9BB2     		uxth	r3, r3
 1655 00e2 FF2B     		cmp	r3, #255
 1656 00e4 0AD9     		bls	.L131
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1657              		.loc 1 1243 0
 1658 00e6 FF22     		movs	r2, #255
 1659 00e8 2285     		strh	r2, [r4, #40]	@ movhi
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1660              		.loc 1 1244 0
 1661 00ea 0023     		movs	r3, #0
 1662 00ec 0093     		str	r3, [sp]
 1663 00ee 4FF08073 		mov	r3, #16777216
 1664 00f2 2946     		mov	r1, r5
 1665 00f4 2046     		mov	r0, r4
 1666 00f6 FFF7FEFF 		bl	I2C_TransferConfig
 1667              	.LVL117:
 1668 00fa 0BE0     		b	.L128
 1669              	.L131:
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1670              		.loc 1 1248 0
 1671 00fc 628D     		ldrh	r2, [r4, #42]
 1672 00fe 92B2     		uxth	r2, r2
 1673 0100 2285     		strh	r2, [r4, #40]	@ movhi
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1674              		.loc 1 1249 0
 1675 0102 0023     		movs	r3, #0
 1676 0104 0093     		str	r3, [sp]
 1677 0106 4FF00073 		mov	r3, #33554432
 1678 010a D2B2     		uxtb	r2, r2
 1679 010c 2946     		mov	r1, r5
 1680 010e 2046     		mov	r0, r4
 1681 0110 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 150


 1682              	.LVL118:
 1683              	.L128:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1684              		.loc 1 1216 0
 1685 0114 638D     		ldrh	r3, [r4, #42]
 1686 0116 9BB2     		uxth	r3, r3
 1687 0118 002B     		cmp	r3, #0
 1688 011a BDD1     		bne	.L132
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1689              		.loc 1 1256 0
 1690 011c 3246     		mov	r2, r6
 1691 011e 0A99     		ldr	r1, [sp, #40]
 1692 0120 2046     		mov	r0, r4
 1693 0122 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1694              	.LVL119:
 1695 0126 0346     		mov	r3, r0
 1696 0128 F8B9     		cbnz	r0, .L138
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1697              		.loc 1 1262 0
 1698 012a 2268     		ldr	r2, [r4]
 1699 012c 2021     		movs	r1, #32
 1700 012e D161     		str	r1, [r2, #28]
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1701              		.loc 1 1265 0
 1702 0130 2068     		ldr	r0, [r4]
 1703 0132 4268     		ldr	r2, [r0, #4]
 1704 0134 22F0FF72 		bic	r2, r2, #33423360
 1705 0138 22F48B32 		bic	r2, r2, #71168
 1706 013c 22F4FF72 		bic	r2, r2, #510
 1707 0140 22F00102 		bic	r2, r2, #1
 1708 0144 4260     		str	r2, [r0, #4]
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1709              		.loc 1 1267 0
 1710 0146 84F84110 		strb	r1, [r4, #65]
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1711              		.loc 1 1268 0
 1712 014a 0022     		movs	r2, #0
 1713 014c 84F84220 		strb	r2, [r4, #66]
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1714              		.loc 1 1271 0
 1715 0150 84F84020 		strb	r2, [r4, #64]
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1716              		.loc 1 1273 0
 1717 0154 0AE0     		b	.L126
 1718              	.LVL120:
 1719              	.L133:
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 1720              		.loc 1 1277 0
 1721 0156 0223     		movs	r3, #2
 1722              	.LVL121:
 1723 0158 08E0     		b	.L126
 1724              	.LVL122:
 1725              	.L134:
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1726              		.loc 1 1184 0
 1727 015a 0223     		movs	r3, #2
 1728              	.LVL123:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 151


 1729 015c 06E0     		b	.L126
 1730              	.LVL124:
 1731              	.L135:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1732              		.loc 1 1191 0
 1733 015e 0123     		movs	r3, #1
 1734 0160 04E0     		b	.L126
 1735              	.L136:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1736              		.loc 1 1221 0
 1737 0162 0123     		movs	r3, #1
 1738 0164 02E0     		b	.L126
 1739              	.L137:
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 1740              		.loc 1 1238 0
 1741 0166 0123     		movs	r3, #1
 1742 0168 00E0     		b	.L126
 1743              	.L138:
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1744              		.loc 1 1258 0
 1745 016a 0123     		movs	r3, #1
 1746              	.LVL125:
 1747              	.L126:
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1748              		.loc 1 1279 0
 1749 016c 1846     		mov	r0, r3
 1750 016e 03B0     		add	sp, sp, #12
 1751              	.LCFI24:
 1752              		.cfi_def_cfa_offset 28
 1753              		@ sp needed
 1754 0170 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1755              	.LVL126:
 1756              	.L141:
 1757              		.align	2
 1758              	.L140:
 1759 0174 00240080 		.word	-2147474432
 1760              		.cfi_endproc
 1761              	.LFE146:
 1763              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1764              		.align	2
 1765              		.global	HAL_I2C_Slave_Transmit
 1766              		.thumb
 1767              		.thumb_func
 1769              	HAL_I2C_Slave_Transmit:
 1770              	.LFB147:
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 1771              		.loc 1 1291 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              	.LVL127:
 1776 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1777              	.LCFI25:
 1778              		.cfi_def_cfa_offset 24
 1779              		.cfi_offset 4, -24
 1780              		.cfi_offset 5, -20
 1781              		.cfi_offset 6, -16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 152


 1782              		.cfi_offset 7, -12
 1783              		.cfi_offset 8, -8
 1784              		.cfi_offset 14, -4
 1785 0004 82B0     		sub	sp, sp, #8
 1786              	.LCFI26:
 1787              		.cfi_def_cfa_offset 32
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 1788              		.loc 1 1294 0
 1789 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 1790 000a E4B2     		uxtb	r4, r4
 1791 000c 202C     		cmp	r4, #32
 1792 000e 40F0B080 		bne	.L153
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1793              		.loc 1 1296 0
 1794 0012 002A     		cmp	r2, #0
 1795 0014 18BF     		it	ne
 1796 0016 0029     		cmpne	r1, #0
 1797 0018 04D1     		bne	.L144
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 1798              		.loc 1 1298 0
 1799 001a 4FF40073 		mov	r3, #512
 1800              	.LVL128:
 1801 001e 4364     		str	r3, [r0, #68]
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1802              		.loc 1 1299 0
 1803 0020 0123     		movs	r3, #1
 1804 0022 ABE0     		b	.L143
 1805              	.LVL129:
 1806              	.L144:
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1807              		.loc 1 1302 0
 1808 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1809 0028 012C     		cmp	r4, #1
 1810 002a 00F0A480 		beq	.L154
 1811 002e 1F46     		mov	r7, r3
 1812 0030 1646     		mov	r6, r2
 1813 0032 0D46     		mov	r5, r1
 1814 0034 0446     		mov	r4, r0
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1815              		.loc 1 1302 0 is_stmt 0 discriminator 2
 1816 0036 0123     		movs	r3, #1
 1817              	.LVL130:
 1818 0038 80F84030 		strb	r3, [r0, #64]
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1819              		.loc 1 1305 0 is_stmt 1 discriminator 2
 1820 003c FFF7FEFF 		bl	HAL_GetTick
 1821              	.LVL131:
 1822 0040 8046     		mov	r8, r0
 1823              	.LVL132:
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1824              		.loc 1 1307 0 discriminator 2
 1825 0042 2123     		movs	r3, #33
 1826 0044 84F84130 		strb	r3, [r4, #65]
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1827              		.loc 1 1308 0 discriminator 2
 1828 0048 2023     		movs	r3, #32
 1829 004a 84F84230 		strb	r3, [r4, #66]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 153


1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1830              		.loc 1 1309 0 discriminator 2
 1831 004e 0022     		movs	r2, #0
 1832 0050 6264     		str	r2, [r4, #68]
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1833              		.loc 1 1312 0 discriminator 2
 1834 0052 6562     		str	r5, [r4, #36]
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1835              		.loc 1 1313 0 discriminator 2
 1836 0054 6685     		strh	r6, [r4, #42]	@ movhi
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1837              		.loc 1 1314 0 discriminator 2
 1838 0056 6263     		str	r2, [r4, #52]
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1839              		.loc 1 1317 0 discriminator 2
 1840 0058 2168     		ldr	r1, [r4]
 1841 005a 4B68     		ldr	r3, [r1, #4]
 1842 005c 23F40043 		bic	r3, r3, #32768
 1843 0060 4B60     		str	r3, [r1, #4]
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1844              		.loc 1 1320 0 discriminator 2
 1845 0062 0090     		str	r0, [sp]
 1846 0064 3B46     		mov	r3, r7
 1847 0066 0821     		movs	r1, #8
 1848 0068 2046     		mov	r0, r4
 1849              	.LVL133:
 1850 006a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1851              	.LVL134:
 1852 006e 30B1     		cbz	r0, .L145
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 1853              		.loc 1 1323 0
 1854 0070 2268     		ldr	r2, [r4]
 1855 0072 5368     		ldr	r3, [r2, #4]
 1856 0074 43F40043 		orr	r3, r3, #32768
 1857 0078 5360     		str	r3, [r2, #4]
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1858              		.loc 1 1324 0
 1859 007a 0123     		movs	r3, #1
 1860 007c 7EE0     		b	.L143
 1861              	.L145:
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1862              		.loc 1 1328 0
 1863 007e 2368     		ldr	r3, [r4]
 1864 0080 0822     		movs	r2, #8
 1865 0082 DA61     		str	r2, [r3, #28]
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1866              		.loc 1 1331 0
 1867 0084 E368     		ldr	r3, [r4, #12]
 1868 0086 022B     		cmp	r3, #2
 1869 0088 12D1     		bne	.L146
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1870              		.loc 1 1334 0
 1871 008a CDF80080 		str	r8, [sp]
 1872 008e 3B46     		mov	r3, r7
 1873 0090 0022     		movs	r2, #0
 1874 0092 0821     		movs	r1, #8
 1875 0094 2046     		mov	r0, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 154


 1876 0096 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1877              	.LVL135:
 1878 009a 30B1     		cbz	r0, .L147
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 1879              		.loc 1 1337 0
 1880 009c 2268     		ldr	r2, [r4]
 1881 009e 5368     		ldr	r3, [r2, #4]
 1882 00a0 43F40043 		orr	r3, r3, #32768
 1883 00a4 5360     		str	r3, [r2, #4]
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1884              		.loc 1 1338 0
 1885 00a6 0123     		movs	r3, #1
 1886 00a8 68E0     		b	.L143
 1887              	.L147:
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1888              		.loc 1 1342 0
 1889 00aa 2368     		ldr	r3, [r4]
 1890 00ac 0822     		movs	r2, #8
 1891 00ae DA61     		str	r2, [r3, #28]
 1892              	.L146:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1893              		.loc 1 1346 0
 1894 00b0 CDF80080 		str	r8, [sp]
 1895 00b4 3B46     		mov	r3, r7
 1896 00b6 0022     		movs	r2, #0
 1897 00b8 4FF48031 		mov	r1, #65536
 1898 00bc 2046     		mov	r0, r4
 1899 00be FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1900              	.LVL136:
 1901 00c2 F8B1     		cbz	r0, .L148
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 1902              		.loc 1 1349 0
 1903 00c4 2268     		ldr	r2, [r4]
 1904 00c6 5368     		ldr	r3, [r2, #4]
 1905 00c8 43F40043 		orr	r3, r3, #32768
 1906 00cc 5360     		str	r3, [r2, #4]
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1907              		.loc 1 1350 0
 1908 00ce 0123     		movs	r3, #1
 1909 00d0 54E0     		b	.L143
 1910              	.L150:
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1911              		.loc 1 1356 0
 1912 00d2 4246     		mov	r2, r8
 1913 00d4 3946     		mov	r1, r7
 1914 00d6 2046     		mov	r0, r4
 1915 00d8 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1916              	.LVL137:
 1917 00dc 30B1     		cbz	r0, .L149
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         return HAL_ERROR;
 1918              		.loc 1 1359 0
 1919 00de 2268     		ldr	r2, [r4]
 1920 00e0 5368     		ldr	r3, [r2, #4]
 1921 00e2 43F40043 		orr	r3, r3, #32768
 1922 00e6 5360     		str	r3, [r2, #4]
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1923              		.loc 1 1360 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 155


 1924 00e8 0123     		movs	r3, #1
 1925 00ea 47E0     		b	.L143
 1926              	.L149:
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1927              		.loc 1 1364 0
 1928 00ec 2368     		ldr	r3, [r4]
 1929 00ee 626A     		ldr	r2, [r4, #36]
 1930 00f0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1931 00f2 9A62     		str	r2, [r3, #40]
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1932              		.loc 1 1367 0
 1933 00f4 636A     		ldr	r3, [r4, #36]
 1934 00f6 0133     		adds	r3, r3, #1
 1935 00f8 6362     		str	r3, [r4, #36]
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1936              		.loc 1 1369 0
 1937 00fa 638D     		ldrh	r3, [r4, #42]
 1938 00fc 9BB2     		uxth	r3, r3
 1939 00fe 013B     		subs	r3, r3, #1
 1940 0100 9BB2     		uxth	r3, r3
 1941 0102 6385     		strh	r3, [r4, #42]	@ movhi
 1942              	.L148:
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1943              		.loc 1 1353 0
 1944 0104 638D     		ldrh	r3, [r4, #42]
 1945 0106 9BB2     		uxth	r3, r3
 1946 0108 002B     		cmp	r3, #0
 1947 010a E2D1     		bne	.L150
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1948              		.loc 1 1373 0
 1949 010c 4246     		mov	r2, r8
 1950 010e 3946     		mov	r1, r7
 1951 0110 2046     		mov	r0, r4
 1952 0112 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1953              	.LVL138:
 1954 0116 48B1     		cbz	r0, .L151
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1955              		.loc 1 1376 0
 1956 0118 2268     		ldr	r2, [r4]
 1957 011a 5368     		ldr	r3, [r2, #4]
 1958 011c 43F40043 		orr	r3, r3, #32768
 1959 0120 5360     		str	r3, [r2, #4]
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 1960              		.loc 1 1378 0
 1961 0122 636C     		ldr	r3, [r4, #68]
 1962 0124 042B     		cmp	r3, #4
 1963 0126 28D1     		bne	.L155
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 1964              		.loc 1 1382 0
 1965 0128 0023     		movs	r3, #0
 1966 012a 6364     		str	r3, [r4, #68]
 1967              	.L151:
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1968              		.loc 1 1391 0
 1969 012c 2368     		ldr	r3, [r4]
 1970 012e 2022     		movs	r2, #32
 1971 0130 DA61     		str	r2, [r3, #28]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 156


1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 1972              		.loc 1 1394 0
 1973 0132 CDF80080 		str	r8, [sp]
 1974 0136 3B46     		mov	r3, r7
 1975 0138 0122     		movs	r2, #1
 1976 013a 4FF40041 		mov	r1, #32768
 1977 013e 2046     		mov	r0, r4
 1978 0140 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1979              	.LVL139:
 1980 0144 0346     		mov	r3, r0
 1981 0146 30B1     		cbz	r0, .L152
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 1982              		.loc 1 1397 0
 1983 0148 2268     		ldr	r2, [r4]
 1984 014a 5368     		ldr	r3, [r2, #4]
 1985 014c 43F40043 		orr	r3, r3, #32768
 1986 0150 5360     		str	r3, [r2, #4]
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 1987              		.loc 1 1398 0
 1988 0152 0123     		movs	r3, #1
 1989 0154 12E0     		b	.L143
 1990              	.L152:
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1991              		.loc 1 1402 0
 1992 0156 2168     		ldr	r1, [r4]
 1993 0158 4A68     		ldr	r2, [r1, #4]
 1994 015a 42F40042 		orr	r2, r2, #32768
 1995 015e 4A60     		str	r2, [r1, #4]
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1996              		.loc 1 1404 0
 1997 0160 2022     		movs	r2, #32
 1998 0162 84F84120 		strb	r2, [r4, #65]
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 1999              		.loc 1 1405 0
 2000 0166 0022     		movs	r2, #0
 2001 0168 84F84220 		strb	r2, [r4, #66]
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2002              		.loc 1 1408 0
 2003 016c 84F84020 		strb	r2, [r4, #64]
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2004              		.loc 1 1410 0
 2005 0170 04E0     		b	.L143
 2006              	.LVL140:
 2007              	.L153:
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2008              		.loc 1 1414 0
 2009 0172 0223     		movs	r3, #2
 2010              	.LVL141:
 2011 0174 02E0     		b	.L143
 2012              	.LVL142:
 2013              	.L154:
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2014              		.loc 1 1302 0
 2015 0176 0223     		movs	r3, #2
 2016              	.LVL143:
 2017 0178 00E0     		b	.L143
 2018              	.LVL144:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 157


 2019              	.L155:
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2020              		.loc 1 1386 0
 2021 017a 0123     		movs	r3, #1
 2022              	.LVL145:
 2023              	.L143:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2024              		.loc 1 1416 0
 2025 017c 1846     		mov	r0, r3
 2026 017e 02B0     		add	sp, sp, #8
 2027              	.LCFI27:
 2028              		.cfi_def_cfa_offset 24
 2029              		@ sp needed
 2030 0180 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2031              		.cfi_endproc
 2032              	.LFE147:
 2034              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2035              		.align	2
 2036              		.global	HAL_I2C_Slave_Receive
 2037              		.thumb
 2038              		.thumb_func
 2040              	HAL_I2C_Slave_Receive:
 2041              	.LFB148:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 2042              		.loc 1 1428 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              	.LVL146:
 2047 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2048              	.LCFI28:
 2049              		.cfi_def_cfa_offset 24
 2050              		.cfi_offset 4, -24
 2051              		.cfi_offset 5, -20
 2052              		.cfi_offset 6, -16
 2053              		.cfi_offset 7, -12
 2054              		.cfi_offset 8, -8
 2055              		.cfi_offset 14, -4
 2056 0004 82B0     		sub	sp, sp, #8
 2057              	.LCFI29:
 2058              		.cfi_def_cfa_offset 32
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2059              		.loc 1 1431 0
 2060 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2061 000a E4B2     		uxtb	r4, r4
 2062 000c 202C     		cmp	r4, #32
 2063 000e 40F0A880 		bne	.L166
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2064              		.loc 1 1433 0
 2065 0012 002A     		cmp	r2, #0
 2066 0014 18BF     		it	ne
 2067 0016 0029     		cmpne	r1, #0
 2068 0018 04D1     		bne	.L159
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 2069              		.loc 1 1435 0
 2070 001a 4FF40073 		mov	r3, #512
 2071              	.LVL147:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 158


 2072 001e 4364     		str	r3, [r0, #68]
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2073              		.loc 1 1436 0
 2074 0020 0123     		movs	r3, #1
 2075 0022 A3E0     		b	.L158
 2076              	.LVL148:
 2077              	.L159:
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2078              		.loc 1 1439 0
 2079 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2080 0028 012C     		cmp	r4, #1
 2081 002a 00F09C80 		beq	.L167
 2082 002e 1F46     		mov	r7, r3
 2083 0030 1646     		mov	r6, r2
 2084 0032 0D46     		mov	r5, r1
 2085 0034 0446     		mov	r4, r0
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2086              		.loc 1 1439 0 is_stmt 0 discriminator 2
 2087 0036 0123     		movs	r3, #1
 2088              	.LVL149:
 2089 0038 80F84030 		strb	r3, [r0, #64]
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2090              		.loc 1 1442 0 is_stmt 1 discriminator 2
 2091 003c FFF7FEFF 		bl	HAL_GetTick
 2092              	.LVL150:
 2093 0040 8046     		mov	r8, r0
 2094              	.LVL151:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2095              		.loc 1 1444 0 discriminator 2
 2096 0042 2223     		movs	r3, #34
 2097 0044 84F84130 		strb	r3, [r4, #65]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2098              		.loc 1 1445 0 discriminator 2
 2099 0048 2023     		movs	r3, #32
 2100 004a 84F84230 		strb	r3, [r4, #66]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2101              		.loc 1 1446 0 discriminator 2
 2102 004e 0022     		movs	r2, #0
 2103 0050 6264     		str	r2, [r4, #68]
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2104              		.loc 1 1449 0 discriminator 2
 2105 0052 6562     		str	r5, [r4, #36]
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2106              		.loc 1 1450 0 discriminator 2
 2107 0054 6685     		strh	r6, [r4, #42]	@ movhi
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2108              		.loc 1 1451 0 discriminator 2
 2109 0056 6263     		str	r2, [r4, #52]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2110              		.loc 1 1454 0 discriminator 2
 2111 0058 2168     		ldr	r1, [r4]
 2112 005a 4B68     		ldr	r3, [r1, #4]
 2113 005c 23F40043 		bic	r3, r3, #32768
 2114 0060 4B60     		str	r3, [r1, #4]
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2115              		.loc 1 1457 0 discriminator 2
 2116 0062 0090     		str	r0, [sp]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 159


 2117 0064 3B46     		mov	r3, r7
 2118 0066 0821     		movs	r1, #8
 2119 0068 2046     		mov	r0, r4
 2120              	.LVL152:
 2121 006a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2122              	.LVL153:
 2123 006e 30B1     		cbz	r0, .L160
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2124              		.loc 1 1460 0
 2125 0070 2268     		ldr	r2, [r4]
 2126 0072 5368     		ldr	r3, [r2, #4]
 2127 0074 43F40043 		orr	r3, r3, #32768
 2128 0078 5360     		str	r3, [r2, #4]
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2129              		.loc 1 1461 0
 2130 007a 0123     		movs	r3, #1
 2131 007c 76E0     		b	.L158
 2132              	.L160:
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2133              		.loc 1 1465 0
 2134 007e 2368     		ldr	r3, [r4]
 2135 0080 0822     		movs	r2, #8
 2136 0082 DA61     		str	r2, [r3, #28]
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2137              		.loc 1 1468 0
 2138 0084 CDF80080 		str	r8, [sp]
 2139 0088 3B46     		mov	r3, r7
 2140 008a 0122     		movs	r2, #1
 2141 008c 4FF48031 		mov	r1, #65536
 2142 0090 2046     		mov	r0, r4
 2143 0092 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2144              	.LVL154:
 2145 0096 0028     		cmp	r0, #0
 2146 0098 2FD0     		beq	.L161
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2147              		.loc 1 1471 0
 2148 009a 2268     		ldr	r2, [r4]
 2149 009c 5368     		ldr	r3, [r2, #4]
 2150 009e 43F40043 		orr	r3, r3, #32768
 2151 00a2 5360     		str	r3, [r2, #4]
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2152              		.loc 1 1472 0
 2153 00a4 0123     		movs	r3, #1
 2154 00a6 61E0     		b	.L158
 2155              	.L163:
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2156              		.loc 1 1478 0
 2157 00a8 4246     		mov	r2, r8
 2158 00aa 3946     		mov	r1, r7
 2159 00ac 2046     		mov	r0, r4
 2160 00ae FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2161              	.LVL155:
 2162 00b2 B0B1     		cbz	r0, .L162
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2163              		.loc 1 1481 0
 2164 00b4 2268     		ldr	r2, [r4]
 2165 00b6 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 160


 2166 00b8 43F40043 		orr	r3, r3, #32768
 2167 00bc 5360     		str	r3, [r2, #4]
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 2168              		.loc 1 1484 0
 2169 00be 2368     		ldr	r3, [r4]
 2170 00c0 9A69     		ldr	r2, [r3, #24]
 2171 00c2 12F0040F 		tst	r2, #4
 2172 00c6 50D0     		beq	.L168
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2173              		.loc 1 1487 0
 2174 00c8 626A     		ldr	r2, [r4, #36]
 2175 00ca 5B6A     		ldr	r3, [r3, #36]
 2176 00cc 1370     		strb	r3, [r2]
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2177              		.loc 1 1490 0
 2178 00ce 636A     		ldr	r3, [r4, #36]
 2179 00d0 0133     		adds	r3, r3, #1
 2180 00d2 6362     		str	r3, [r4, #36]
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 2181              		.loc 1 1492 0
 2182 00d4 638D     		ldrh	r3, [r4, #42]
 2183 00d6 9BB2     		uxth	r3, r3
 2184 00d8 013B     		subs	r3, r3, #1
 2185 00da 9BB2     		uxth	r3, r3
 2186 00dc 6385     		strh	r3, [r4, #42]	@ movhi
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2187              		.loc 1 1495 0
 2188 00de 0123     		movs	r3, #1
 2189 00e0 44E0     		b	.L158
 2190              	.L162:
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2191              		.loc 1 1499 0
 2192 00e2 636A     		ldr	r3, [r4, #36]
 2193 00e4 2268     		ldr	r2, [r4]
 2194 00e6 526A     		ldr	r2, [r2, #36]
 2195 00e8 1A70     		strb	r2, [r3]
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2196              		.loc 1 1502 0
 2197 00ea 636A     		ldr	r3, [r4, #36]
 2198 00ec 0133     		adds	r3, r3, #1
 2199 00ee 6362     		str	r3, [r4, #36]
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2200              		.loc 1 1504 0
 2201 00f0 638D     		ldrh	r3, [r4, #42]
 2202 00f2 9BB2     		uxth	r3, r3
 2203 00f4 013B     		subs	r3, r3, #1
 2204 00f6 9BB2     		uxth	r3, r3
 2205 00f8 6385     		strh	r3, [r4, #42]	@ movhi
 2206              	.L161:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2207              		.loc 1 1475 0
 2208 00fa 638D     		ldrh	r3, [r4, #42]
 2209 00fc 9BB2     		uxth	r3, r3
 2210 00fe 002B     		cmp	r3, #0
 2211 0100 D2D1     		bne	.L163
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2212              		.loc 1 1508 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 161


 2213 0102 4246     		mov	r2, r8
 2214 0104 3946     		mov	r1, r7
 2215 0106 2046     		mov	r0, r4
 2216 0108 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2217              	.LVL156:
 2218 010c 30B1     		cbz	r0, .L164
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2219              		.loc 1 1511 0
 2220 010e 2268     		ldr	r2, [r4]
 2221 0110 5368     		ldr	r3, [r2, #4]
 2222 0112 43F40043 		orr	r3, r3, #32768
 2223 0116 5360     		str	r3, [r2, #4]
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2224              		.loc 1 1512 0
 2225 0118 0123     		movs	r3, #1
 2226 011a 27E0     		b	.L158
 2227              	.L164:
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2228              		.loc 1 1516 0
 2229 011c 2368     		ldr	r3, [r4]
 2230 011e 2022     		movs	r2, #32
 2231 0120 DA61     		str	r2, [r3, #28]
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2232              		.loc 1 1519 0
 2233 0122 CDF80080 		str	r8, [sp]
 2234 0126 3B46     		mov	r3, r7
 2235 0128 0122     		movs	r2, #1
 2236 012a 4FF40041 		mov	r1, #32768
 2237 012e 2046     		mov	r0, r4
 2238 0130 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2239              	.LVL157:
 2240 0134 0346     		mov	r3, r0
 2241 0136 30B1     		cbz	r0, .L165
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 2242              		.loc 1 1522 0
 2243 0138 2268     		ldr	r2, [r4]
 2244 013a 5368     		ldr	r3, [r2, #4]
 2245 013c 43F40043 		orr	r3, r3, #32768
 2246 0140 5360     		str	r3, [r2, #4]
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2247              		.loc 1 1523 0
 2248 0142 0123     		movs	r3, #1
 2249 0144 12E0     		b	.L158
 2250              	.L165:
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2251              		.loc 1 1527 0
 2252 0146 2168     		ldr	r1, [r4]
 2253 0148 4A68     		ldr	r2, [r1, #4]
 2254 014a 42F40042 		orr	r2, r2, #32768
 2255 014e 4A60     		str	r2, [r1, #4]
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2256              		.loc 1 1529 0
 2257 0150 2022     		movs	r2, #32
 2258 0152 84F84120 		strb	r2, [r4, #65]
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2259              		.loc 1 1530 0
 2260 0156 0022     		movs	r2, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 162


 2261 0158 84F84220 		strb	r2, [r4, #66]
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2262              		.loc 1 1533 0
 2263 015c 84F84020 		strb	r2, [r4, #64]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2264              		.loc 1 1535 0
 2265 0160 04E0     		b	.L158
 2266              	.LVL158:
 2267              	.L166:
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2268              		.loc 1 1539 0
 2269 0162 0223     		movs	r3, #2
 2270              	.LVL159:
 2271 0164 02E0     		b	.L158
 2272              	.LVL160:
 2273              	.L167:
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2274              		.loc 1 1439 0
 2275 0166 0223     		movs	r3, #2
 2276              	.LVL161:
 2277 0168 00E0     		b	.L158
 2278              	.LVL162:
 2279              	.L168:
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2280              		.loc 1 1495 0
 2281 016a 0123     		movs	r3, #1
 2282              	.LVL163:
 2283              	.L158:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2284              		.loc 1 1541 0
 2285 016c 1846     		mov	r0, r3
 2286 016e 02B0     		add	sp, sp, #8
 2287              	.LCFI30:
 2288              		.cfi_def_cfa_offset 24
 2289              		@ sp needed
 2290 0170 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2291              		.cfi_endproc
 2292              	.LFE148:
 2294              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2295              		.align	2
 2296              		.global	HAL_I2C_Master_Transmit_IT
 2297              		.thumb
 2298              		.thumb_func
 2300              	HAL_I2C_Master_Transmit_IT:
 2301              	.LFB149:
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2302              		.loc 1 1554 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 0, uses_anonymous_args = 0
 2306              	.LVL164:
 2307 0000 30B5     		push	{r4, r5, lr}
 2308              	.LCFI31:
 2309              		.cfi_def_cfa_offset 12
 2310              		.cfi_offset 4, -12
 2311              		.cfi_offset 5, -8
 2312              		.cfi_offset 14, -4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 163


 2313 0002 83B0     		sub	sp, sp, #12
 2314              	.LCFI32:
 2315              		.cfi_def_cfa_offset 24
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2316              		.loc 1 1557 0
 2317 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2318 0008 E4B2     		uxtb	r4, r4
 2319 000a 202C     		cmp	r4, #32
 2320 000c 37D1     		bne	.L174
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2321              		.loc 1 1559 0
 2322 000e 0468     		ldr	r4, [r0]
 2323 0010 A469     		ldr	r4, [r4, #24]
 2324 0012 14F4004F 		tst	r4, #32768
 2325 0016 34D1     		bne	.L175
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2326              		.loc 1 1565 0
 2327 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2328 001c 012C     		cmp	r4, #1
 2329 001e 32D0     		beq	.L176
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2330              		.loc 1 1565 0 is_stmt 0 discriminator 2
 2331 0020 0124     		movs	r4, #1
 2332 0022 80F84040 		strb	r4, [r0, #64]
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2333              		.loc 1 1567 0 is_stmt 1 discriminator 2
 2334 0026 2124     		movs	r4, #33
 2335 0028 80F84140 		strb	r4, [r0, #65]
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2336              		.loc 1 1568 0 discriminator 2
 2337 002c 1024     		movs	r4, #16
 2338 002e 80F84240 		strb	r4, [r0, #66]
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2339              		.loc 1 1569 0 discriminator 2
 2340 0032 0024     		movs	r4, #0
 2341 0034 4464     		str	r4, [r0, #68]
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2342              		.loc 1 1572 0 discriminator 2
 2343 0036 4262     		str	r2, [r0, #36]
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2344              		.loc 1 1573 0 discriminator 2
 2345 0038 4385     		strh	r3, [r0, #42]	@ movhi
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2346              		.loc 1 1574 0 discriminator 2
 2347 003a 144B     		ldr	r3, .L178
 2348              	.LVL165:
 2349 003c C362     		str	r3, [r0, #44]
 2350              	.LVL166:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2351              		.loc 1 1575 0 discriminator 2
 2352 003e 144B     		ldr	r3, .L178+4
 2353 0040 4363     		str	r3, [r0, #52]
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2354              		.loc 1 1577 0 discriminator 2
 2355 0042 438D     		ldrh	r3, [r0, #42]
 2356 0044 9BB2     		uxth	r3, r3
 2357 0046 FF2B     		cmp	r3, #255
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 164


 2358 0048 04D9     		bls	.L172
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2359              		.loc 1 1579 0
 2360 004a FF23     		movs	r3, #255
 2361 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2362              	.LVL167:
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2363              		.loc 1 1580 0
 2364 004e 4FF08073 		mov	r3, #16777216
 2365 0052 03E0     		b	.L173
 2366              	.LVL168:
 2367              	.L172:
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2368              		.loc 1 1584 0
 2369 0054 438D     		ldrh	r3, [r0, #42]
 2370 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2371              	.LVL169:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2372              		.loc 1 1585 0
 2373 0058 4FF00073 		mov	r3, #33554432
 2374              	.LVL170:
 2375              	.L173:
 2376 005c 0446     		mov	r4, r0
 2377              	.LVL171:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2378              		.loc 1 1590 0
 2379 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2380              	.LVL172:
 2381 0062 0C48     		ldr	r0, .L178+8
 2382              	.LVL173:
 2383 0064 0090     		str	r0, [sp]
 2384              	.LVL174:
 2385 0066 2046     		mov	r0, r4
 2386 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2387              	.LVL175:
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2388              		.loc 1 1593 0
 2389 006c 0025     		movs	r5, #0
 2390 006e 84F84050 		strb	r5, [r4, #64]
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2391              		.loc 1 1602 0
 2392 0072 0121     		movs	r1, #1
 2393 0074 2046     		mov	r0, r4
 2394 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2395              	.LVL176:
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2396              		.loc 1 1604 0
 2397 007a 2846     		mov	r0, r5
 2398 007c 04E0     		b	.L171
 2399              	.LVL177:
 2400              	.L174:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2401              		.loc 1 1608 0
 2402 007e 0220     		movs	r0, #2
 2403              	.LVL178:
 2404 0080 02E0     		b	.L171
 2405              	.LVL179:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 165


 2406              	.L175:
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2407              		.loc 1 1561 0
 2408 0082 0220     		movs	r0, #2
 2409              	.LVL180:
 2410 0084 00E0     		b	.L171
 2411              	.LVL181:
 2412              	.L176:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2413              		.loc 1 1565 0
 2414 0086 0220     		movs	r0, #2
 2415              	.LVL182:
 2416              	.L171:
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2417              		.loc 1 1610 0
 2418 0088 03B0     		add	sp, sp, #12
 2419              	.LCFI33:
 2420              		.cfi_def_cfa_offset 12
 2421              		@ sp needed
 2422 008a 30BD     		pop	{r4, r5, pc}
 2423              	.L179:
 2424              		.align	2
 2425              	.L178:
 2426 008c 0000FFFF 		.word	-65536
 2427 0090 00000000 		.word	I2C_Master_ISR_IT
 2428 0094 00200080 		.word	-2147475456
 2429              		.cfi_endproc
 2430              	.LFE149:
 2432              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2433              		.align	2
 2434              		.global	HAL_I2C_Master_Receive_IT
 2435              		.thumb
 2436              		.thumb_func
 2438              	HAL_I2C_Master_Receive_IT:
 2439              	.LFB150:
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2440              		.loc 1 1623 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              	.LVL183:
 2445 0000 30B5     		push	{r4, r5, lr}
 2446              	.LCFI34:
 2447              		.cfi_def_cfa_offset 12
 2448              		.cfi_offset 4, -12
 2449              		.cfi_offset 5, -8
 2450              		.cfi_offset 14, -4
 2451 0002 83B0     		sub	sp, sp, #12
 2452              	.LCFI35:
 2453              		.cfi_def_cfa_offset 24
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2454              		.loc 1 1626 0
 2455 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2456 0008 E4B2     		uxtb	r4, r4
 2457 000a 202C     		cmp	r4, #32
 2458 000c 37D1     		bne	.L184
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 166


 2459              		.loc 1 1628 0
 2460 000e 0468     		ldr	r4, [r0]
 2461 0010 A469     		ldr	r4, [r4, #24]
 2462 0012 14F4004F 		tst	r4, #32768
 2463 0016 34D1     		bne	.L185
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2464              		.loc 1 1634 0
 2465 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2466 001c 012C     		cmp	r4, #1
 2467 001e 32D0     		beq	.L186
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2468              		.loc 1 1634 0 is_stmt 0 discriminator 2
 2469 0020 0124     		movs	r4, #1
 2470 0022 80F84040 		strb	r4, [r0, #64]
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2471              		.loc 1 1636 0 is_stmt 1 discriminator 2
 2472 0026 2224     		movs	r4, #34
 2473 0028 80F84140 		strb	r4, [r0, #65]
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2474              		.loc 1 1637 0 discriminator 2
 2475 002c 1024     		movs	r4, #16
 2476 002e 80F84240 		strb	r4, [r0, #66]
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2477              		.loc 1 1638 0 discriminator 2
 2478 0032 0024     		movs	r4, #0
 2479 0034 4464     		str	r4, [r0, #68]
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2480              		.loc 1 1641 0 discriminator 2
 2481 0036 4262     		str	r2, [r0, #36]
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2482              		.loc 1 1642 0 discriminator 2
 2483 0038 4385     		strh	r3, [r0, #42]	@ movhi
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2484              		.loc 1 1643 0 discriminator 2
 2485 003a 144B     		ldr	r3, .L188
 2486              	.LVL184:
 2487 003c C362     		str	r3, [r0, #44]
 2488              	.LVL185:
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2489              		.loc 1 1644 0 discriminator 2
 2490 003e 144B     		ldr	r3, .L188+4
 2491 0040 4363     		str	r3, [r0, #52]
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2492              		.loc 1 1646 0 discriminator 2
 2493 0042 438D     		ldrh	r3, [r0, #42]
 2494 0044 9BB2     		uxth	r3, r3
 2495 0046 FF2B     		cmp	r3, #255
 2496 0048 04D9     		bls	.L182
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2497              		.loc 1 1648 0
 2498 004a FF23     		movs	r3, #255
 2499 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2500              	.LVL186:
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2501              		.loc 1 1649 0
 2502 004e 4FF08073 		mov	r3, #16777216
 2503 0052 03E0     		b	.L183
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 167


 2504              	.LVL187:
 2505              	.L182:
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2506              		.loc 1 1653 0
 2507 0054 438D     		ldrh	r3, [r0, #42]
 2508 0056 0385     		strh	r3, [r0, #40]	@ movhi
 2509              	.LVL188:
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2510              		.loc 1 1654 0
 2511 0058 4FF00073 		mov	r3, #33554432
 2512              	.LVL189:
 2513              	.L183:
 2514 005c 0446     		mov	r4, r0
 2515              	.LVL190:
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2516              		.loc 1 1659 0
 2517 005e 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2518              	.LVL191:
 2519 0062 0C48     		ldr	r0, .L188+8
 2520              	.LVL192:
 2521 0064 0090     		str	r0, [sp]
 2522              	.LVL193:
 2523 0066 2046     		mov	r0, r4
 2524 0068 FFF7FEFF 		bl	I2C_TransferConfig
 2525              	.LVL194:
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2526              		.loc 1 1662 0
 2527 006c 0025     		movs	r5, #0
 2528 006e 84F84050 		strb	r5, [r4, #64]
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2529              		.loc 1 1671 0
 2530 0072 0221     		movs	r1, #2
 2531 0074 2046     		mov	r0, r4
 2532 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 2533              	.LVL195:
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2534              		.loc 1 1673 0
 2535 007a 2846     		mov	r0, r5
 2536 007c 04E0     		b	.L181
 2537              	.LVL196:
 2538              	.L184:
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2539              		.loc 1 1677 0
 2540 007e 0220     		movs	r0, #2
 2541              	.LVL197:
 2542 0080 02E0     		b	.L181
 2543              	.LVL198:
 2544              	.L185:
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2545              		.loc 1 1630 0
 2546 0082 0220     		movs	r0, #2
 2547              	.LVL199:
 2548 0084 00E0     		b	.L181
 2549              	.LVL200:
 2550              	.L186:
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2551              		.loc 1 1634 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 168


 2552 0086 0220     		movs	r0, #2
 2553              	.LVL201:
 2554              	.L181:
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2555              		.loc 1 1679 0
 2556 0088 03B0     		add	sp, sp, #12
 2557              	.LCFI36:
 2558              		.cfi_def_cfa_offset 12
 2559              		@ sp needed
 2560 008a 30BD     		pop	{r4, r5, pc}
 2561              	.L189:
 2562              		.align	2
 2563              	.L188:
 2564 008c 0000FFFF 		.word	-65536
 2565 0090 00000000 		.word	I2C_Master_ISR_IT
 2566 0094 00240080 		.word	-2147474432
 2567              		.cfi_endproc
 2568              	.LFE150:
 2570              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2571              		.align	2
 2572              		.global	HAL_I2C_Slave_Transmit_IT
 2573              		.thumb
 2574              		.thumb_func
 2576              	HAL_I2C_Slave_Transmit_IT:
 2577              	.LFB151:
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2578              		.loc 1 1690 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 2582              	.LVL202:
 2583 0000 38B5     		push	{r3, r4, r5, lr}
 2584              	.LCFI37:
 2585              		.cfi_def_cfa_offset 16
 2586              		.cfi_offset 3, -16
 2587              		.cfi_offset 4, -12
 2588              		.cfi_offset 5, -8
 2589              		.cfi_offset 14, -4
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2590              		.loc 1 1691 0
 2591 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2592 0006 DBB2     		uxtb	r3, r3
 2593 0008 202B     		cmp	r3, #32
 2594 000a 23D1     		bne	.L192
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2595              		.loc 1 1694 0
 2596 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2597 0010 012B     		cmp	r3, #1
 2598 0012 21D0     		beq	.L193
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2599              		.loc 1 1694 0 is_stmt 0 discriminator 2
 2600 0014 0123     		movs	r3, #1
 2601 0016 80F84030 		strb	r3, [r0, #64]
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2602              		.loc 1 1696 0 is_stmt 1 discriminator 2
 2603 001a 2123     		movs	r3, #33
 2604 001c 80F84130 		strb	r3, [r0, #65]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 169


1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2605              		.loc 1 1697 0 discriminator 2
 2606 0020 2023     		movs	r3, #32
 2607 0022 80F84230 		strb	r3, [r0, #66]
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2608              		.loc 1 1698 0 discriminator 2
 2609 0026 0024     		movs	r4, #0
 2610 0028 4464     		str	r4, [r0, #68]
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2611              		.loc 1 1701 0 discriminator 2
 2612 002a 0568     		ldr	r5, [r0]
 2613 002c 6B68     		ldr	r3, [r5, #4]
 2614 002e 23F40043 		bic	r3, r3, #32768
 2615 0032 6B60     		str	r3, [r5, #4]
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2616              		.loc 1 1704 0 discriminator 2
 2617 0034 4162     		str	r1, [r0, #36]
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2618              		.loc 1 1705 0 discriminator 2
 2619 0036 4285     		strh	r2, [r0, #42]	@ movhi
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2620              		.loc 1 1706 0 discriminator 2
 2621 0038 438D     		ldrh	r3, [r0, #42]
 2622 003a 0385     		strh	r3, [r0, #40]	@ movhi
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2623              		.loc 1 1707 0 discriminator 2
 2624 003c 074B     		ldr	r3, .L195
 2625 003e C362     		str	r3, [r0, #44]
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2626              		.loc 1 1708 0 discriminator 2
 2627 0040 074B     		ldr	r3, .L195+4
 2628 0042 4363     		str	r3, [r0, #52]
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2629              		.loc 1 1711 0 discriminator 2
 2630 0044 80F84040 		strb	r4, [r0, #64]
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2631              		.loc 1 1720 0 discriminator 2
 2632 0048 48F20101 		movw	r1, #32769
 2633              	.LVL203:
 2634 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2635              	.LVL204:
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2636              		.loc 1 1722 0 discriminator 2
 2637 0050 2046     		mov	r0, r4
 2638 0052 38BD     		pop	{r3, r4, r5, pc}
 2639              	.LVL205:
 2640              	.L192:
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2641              		.loc 1 1726 0
 2642 0054 0220     		movs	r0, #2
 2643              	.LVL206:
 2644 0056 38BD     		pop	{r3, r4, r5, pc}
 2645              	.LVL207:
 2646              	.L193:
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2647              		.loc 1 1694 0
 2648 0058 0220     		movs	r0, #2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 170


 2649              	.LVL208:
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2650              		.loc 1 1728 0
 2651 005a 38BD     		pop	{r3, r4, r5, pc}
 2652              	.L196:
 2653              		.align	2
 2654              	.L195:
 2655 005c 0000FFFF 		.word	-65536
 2656 0060 00000000 		.word	I2C_Slave_ISR_IT
 2657              		.cfi_endproc
 2658              	.LFE151:
 2660              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2661              		.align	2
 2662              		.global	HAL_I2C_Slave_Receive_IT
 2663              		.thumb
 2664              		.thumb_func
 2666              	HAL_I2C_Slave_Receive_IT:
 2667              	.LFB152:
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2668              		.loc 1 1739 0
 2669              		.cfi_startproc
 2670              		@ args = 0, pretend = 0, frame = 0
 2671              		@ frame_needed = 0, uses_anonymous_args = 0
 2672              	.LVL209:
 2673 0000 38B5     		push	{r3, r4, r5, lr}
 2674              	.LCFI38:
 2675              		.cfi_def_cfa_offset 16
 2676              		.cfi_offset 3, -16
 2677              		.cfi_offset 4, -12
 2678              		.cfi_offset 5, -8
 2679              		.cfi_offset 14, -4
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2680              		.loc 1 1740 0
 2681 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2682 0006 DBB2     		uxtb	r3, r3
 2683 0008 202B     		cmp	r3, #32
 2684 000a 23D1     		bne	.L199
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2685              		.loc 1 1743 0
 2686 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2687 0010 012B     		cmp	r3, #1
 2688 0012 21D0     		beq	.L200
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2689              		.loc 1 1743 0 is_stmt 0 discriminator 2
 2690 0014 0123     		movs	r3, #1
 2691 0016 80F84030 		strb	r3, [r0, #64]
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2692              		.loc 1 1745 0 is_stmt 1 discriminator 2
 2693 001a 2223     		movs	r3, #34
 2694 001c 80F84130 		strb	r3, [r0, #65]
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2695              		.loc 1 1746 0 discriminator 2
 2696 0020 2023     		movs	r3, #32
 2697 0022 80F84230 		strb	r3, [r0, #66]
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2698              		.loc 1 1747 0 discriminator 2
 2699 0026 0024     		movs	r4, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 171


 2700 0028 4464     		str	r4, [r0, #68]
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2701              		.loc 1 1750 0 discriminator 2
 2702 002a 0568     		ldr	r5, [r0]
 2703 002c 6B68     		ldr	r3, [r5, #4]
 2704 002e 23F40043 		bic	r3, r3, #32768
 2705 0032 6B60     		str	r3, [r5, #4]
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2706              		.loc 1 1753 0 discriminator 2
 2707 0034 4162     		str	r1, [r0, #36]
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2708              		.loc 1 1754 0 discriminator 2
 2709 0036 4285     		strh	r2, [r0, #42]	@ movhi
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2710              		.loc 1 1755 0 discriminator 2
 2711 0038 438D     		ldrh	r3, [r0, #42]
 2712 003a 0385     		strh	r3, [r0, #40]	@ movhi
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2713              		.loc 1 1756 0 discriminator 2
 2714 003c 074B     		ldr	r3, .L202
 2715 003e C362     		str	r3, [r0, #44]
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2716              		.loc 1 1757 0 discriminator 2
 2717 0040 074B     		ldr	r3, .L202+4
 2718 0042 4363     		str	r3, [r0, #52]
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2719              		.loc 1 1760 0 discriminator 2
 2720 0044 80F84040 		strb	r4, [r0, #64]
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2721              		.loc 1 1769 0 discriminator 2
 2722 0048 48F20201 		movw	r1, #32770
 2723              	.LVL210:
 2724 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2725              	.LVL211:
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2726              		.loc 1 1771 0 discriminator 2
 2727 0050 2046     		mov	r0, r4
 2728 0052 38BD     		pop	{r3, r4, r5, pc}
 2729              	.LVL212:
 2730              	.L199:
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2731              		.loc 1 1775 0
 2732 0054 0220     		movs	r0, #2
 2733              	.LVL213:
 2734 0056 38BD     		pop	{r3, r4, r5, pc}
 2735              	.LVL214:
 2736              	.L200:
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2737              		.loc 1 1743 0
 2738 0058 0220     		movs	r0, #2
 2739              	.LVL215:
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2740              		.loc 1 1777 0
 2741 005a 38BD     		pop	{r3, r4, r5, pc}
 2742              	.L203:
 2743              		.align	2
 2744              	.L202:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 172


 2745 005c 0000FFFF 		.word	-65536
 2746 0060 00000000 		.word	I2C_Slave_ISR_IT
 2747              		.cfi_endproc
 2748              	.LFE152:
 2750              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2751              		.align	2
 2752              		.global	HAL_I2C_Master_Transmit_DMA
 2753              		.thumb
 2754              		.thumb_func
 2756              	HAL_I2C_Master_Transmit_DMA:
 2757              	.LFB153:
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 2758              		.loc 1 1790 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762              	.LVL216:
 2763 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2764              	.LCFI39:
 2765              		.cfi_def_cfa_offset 20
 2766              		.cfi_offset 4, -20
 2767              		.cfi_offset 5, -16
 2768              		.cfi_offset 6, -12
 2769              		.cfi_offset 7, -8
 2770              		.cfi_offset 14, -4
 2771 0002 83B0     		sub	sp, sp, #12
 2772              	.LCFI40:
 2773              		.cfi_def_cfa_offset 32
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 2774              		.loc 1 1794 0
 2775 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2776 0008 E4B2     		uxtb	r4, r4
 2777 000a 202C     		cmp	r4, #32
 2778 000c 40F08F80 		bne	.L212
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2779              		.loc 1 1796 0
 2780 0010 0468     		ldr	r4, [r0]
 2781 0012 A469     		ldr	r4, [r4, #24]
 2782 0014 14F4004F 		tst	r4, #32768
 2783 0018 40F08B80 		bne	.L213
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2784              		.loc 1 1802 0
 2785 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2786 0020 012C     		cmp	r4, #1
 2787 0022 00F08880 		beq	.L214
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2788              		.loc 1 1802 0 is_stmt 0 discriminator 2
 2789 0026 0124     		movs	r4, #1
 2790 0028 80F84040 		strb	r4, [r0, #64]
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2791              		.loc 1 1804 0 is_stmt 1 discriminator 2
 2792 002c 2124     		movs	r4, #33
 2793 002e 80F84140 		strb	r4, [r0, #65]
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2794              		.loc 1 1805 0 discriminator 2
 2795 0032 1024     		movs	r4, #16
 2796 0034 80F84240 		strb	r4, [r0, #66]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 173


1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2797              		.loc 1 1806 0 discriminator 2
 2798 0038 0024     		movs	r4, #0
 2799 003a 4464     		str	r4, [r0, #68]
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2800              		.loc 1 1809 0 discriminator 2
 2801 003c 4262     		str	r2, [r0, #36]
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2802              		.loc 1 1810 0 discriminator 2
 2803 003e 4385     		strh	r3, [r0, #42]	@ movhi
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2804              		.loc 1 1811 0 discriminator 2
 2805 0040 3E4B     		ldr	r3, .L217
 2806              	.LVL217:
 2807 0042 C362     		str	r3, [r0, #44]
 2808              	.LVL218:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2809              		.loc 1 1812 0 discriminator 2
 2810 0044 3E4B     		ldr	r3, .L217+4
 2811 0046 4363     		str	r3, [r0, #52]
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2812              		.loc 1 1814 0 discriminator 2
 2813 0048 438D     		ldrh	r3, [r0, #42]
 2814 004a 9BB2     		uxth	r3, r3
 2815 004c FF2B     		cmp	r3, #255
 2816 004e 04D9     		bls	.L206
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2817              		.loc 1 1816 0
 2818 0050 FF23     		movs	r3, #255
 2819 0052 0385     		strh	r3, [r0, #40]	@ movhi
 2820              	.LVL219:
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2821              		.loc 1 1817 0
 2822 0054 4FF08074 		mov	r4, #16777216
 2823 0058 03E0     		b	.L207
 2824              	.LVL220:
 2825              	.L206:
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2826              		.loc 1 1821 0
 2827 005a 438D     		ldrh	r3, [r0, #42]
 2828 005c 0385     		strh	r3, [r0, #40]	@ movhi
 2829              	.LVL221:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2830              		.loc 1 1822 0
 2831 005e 4FF00074 		mov	r4, #33554432
 2832              	.LVL222:
 2833              	.L207:
 2834 0062 1646     		mov	r6, r2
 2835 0064 0F46     		mov	r7, r1
 2836 0066 0546     		mov	r5, r0
 2837              	.LVL223:
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 2838              		.loc 1 1825 0
 2839 0068 028D     		ldrh	r2, [r0, #40]
 2840              	.LVL224:
 2841 006a 002A     		cmp	r2, #0
 2842 006c 4DD0     		beq	.L208
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 174


 2843              	.LVL225:
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2844              		.loc 1 1827 0
 2845 006e 836B     		ldr	r3, [r0, #56]
 2846 0070 93B1     		cbz	r3, .L209
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2847              		.loc 1 1830 0
 2848 0072 344A     		ldr	r2, .L217+8
 2849 0074 DA63     		str	r2, [r3, #60]
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2850              		.loc 1 1833 0
 2851 0076 836B     		ldr	r3, [r0, #56]
 2852 0078 334A     		ldr	r2, .L217+12
 2853 007a DA64     		str	r2, [r3, #76]
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 2854              		.loc 1 1836 0
 2855 007c 826B     		ldr	r2, [r0, #56]
 2856 007e 0023     		movs	r3, #0
 2857 0080 1364     		str	r3, [r2, #64]
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2858              		.loc 1 1837 0
 2859 0082 826B     		ldr	r2, [r0, #56]
 2860 0084 1365     		str	r3, [r2, #80]
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2861              		.loc 1 1840 0
 2862 0086 0268     		ldr	r2, [r0]
 2863 0088 038D     		ldrh	r3, [r0, #40]
 2864 008a 2832     		adds	r2, r2, #40
 2865 008c 3146     		mov	r1, r6
 2866              	.LVL226:
 2867 008e 806B     		ldr	r0, [r0, #56]
 2868              	.LVL227:
 2869 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2870              	.LVL228:
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 2871              		.loc 1 1857 0
 2872 0094 58BB     		cbnz	r0, .L215
 2873 0096 0DE0     		b	.L210
 2874              	.LVL229:
 2875              	.L209:
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 2876              		.loc 1 1845 0
 2877 0098 2023     		movs	r3, #32
 2878 009a 80F84130 		strb	r3, [r0, #65]
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2879              		.loc 1 1846 0
 2880 009e 0022     		movs	r2, #0
 2881 00a0 80F84220 		strb	r2, [r0, #66]
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2882              		.loc 1 1849 0
 2883 00a4 436C     		ldr	r3, [r0, #68]
 2884 00a6 43F08003 		orr	r3, r3, #128
 2885 00aa 4364     		str	r3, [r0, #68]
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2886              		.loc 1 1852 0
 2887 00ac 80F84020 		strb	r2, [r0, #64]
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 175


 2888              		.loc 1 1854 0
 2889 00b0 0120     		movs	r0, #1
 2890              	.LVL230:
 2891 00b2 41E0     		b	.L205
 2892              	.LVL231:
 2893              	.L210:
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2894              		.loc 1 1861 0
 2895 00b4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 2896 00b8 244B     		ldr	r3, .L217+16
 2897 00ba 0093     		str	r3, [sp]
 2898 00bc 2346     		mov	r3, r4
 2899 00be 3946     		mov	r1, r7
 2900 00c0 2846     		mov	r0, r5
 2901              	.LVL232:
 2902 00c2 FFF7FEFF 		bl	I2C_TransferConfig
 2903              	.LVL233:
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2904              		.loc 1 1864 0
 2905 00c6 6B8D     		ldrh	r3, [r5, #42]
 2906 00c8 9BB2     		uxth	r3, r3
 2907 00ca 2A8D     		ldrh	r2, [r5, #40]
 2908 00cc 9B1A     		subs	r3, r3, r2
 2909 00ce 9BB2     		uxth	r3, r3
 2910 00d0 6B85     		strh	r3, [r5, #42]	@ movhi
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2911              		.loc 1 1867 0
 2912 00d2 0024     		movs	r4, #0
 2913              	.LVL234:
 2914 00d4 85F84040 		strb	r4, [r5, #64]
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2915              		.loc 1 1873 0
 2916 00d8 1021     		movs	r1, #16
 2917 00da 2846     		mov	r0, r5
 2918 00dc FFF7FEFF 		bl	I2C_Enable_IRQ
 2919              	.LVL235:
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2920              		.loc 1 1876 0
 2921 00e0 2A68     		ldr	r2, [r5]
 2922 00e2 1368     		ldr	r3, [r2]
 2923 00e4 43F48043 		orr	r3, r3, #16384
 2924 00e8 1360     		str	r3, [r2]
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2925              		.loc 1 1914 0
 2926 00ea 2046     		mov	r0, r4
 2927 00ec 24E0     		b	.L205
 2928              	.LVL236:
 2929              	.L215:
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 2930              		.loc 1 1881 0
 2931 00ee 2023     		movs	r3, #32
 2932 00f0 85F84130 		strb	r3, [r5, #65]
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2933              		.loc 1 1882 0
 2934 00f4 0022     		movs	r2, #0
 2935 00f6 85F84220 		strb	r2, [r5, #66]
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 176


 2936              		.loc 1 1885 0
 2937 00fa 6B6C     		ldr	r3, [r5, #68]
 2938 00fc 43F01003 		orr	r3, r3, #16
 2939 0100 6B64     		str	r3, [r5, #68]
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2940              		.loc 1 1888 0
 2941 0102 85F84020 		strb	r2, [r5, #64]
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 2942              		.loc 1 1890 0
 2943 0106 0120     		movs	r0, #1
 2944              	.LVL237:
 2945 0108 16E0     		b	.L205
 2946              	.LVL238:
 2947              	.L208:
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2948              		.loc 1 1896 0
 2949 010a 114B     		ldr	r3, .L217+20
 2950 010c 4363     		str	r3, [r0, #52]
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2951              		.loc 1 1900 0
 2952 010e 0F4B     		ldr	r3, .L217+16
 2953 0110 0093     		str	r3, [sp]
 2954 0112 4FF00073 		mov	r3, #33554432
 2955 0116 D2B2     		uxtb	r2, r2
 2956 0118 FFF7FEFF 		bl	I2C_TransferConfig
 2957              	.LVL239:
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2958              		.loc 1 1903 0
 2959 011c 0024     		movs	r4, #0
 2960              	.LVL240:
 2961 011e 85F84040 		strb	r4, [r5, #64]
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2962              		.loc 1 1911 0
 2963 0122 0121     		movs	r1, #1
 2964 0124 2846     		mov	r0, r5
 2965 0126 FFF7FEFF 		bl	I2C_Enable_IRQ
 2966              	.LVL241:
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2967              		.loc 1 1914 0
 2968 012a 2046     		mov	r0, r4
 2969 012c 04E0     		b	.L205
 2970              	.LVL242:
 2971              	.L212:
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 2972              		.loc 1 1918 0
 2973 012e 0220     		movs	r0, #2
 2974              	.LVL243:
 2975 0130 02E0     		b	.L205
 2976              	.LVL244:
 2977              	.L213:
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 2978              		.loc 1 1798 0
 2979 0132 0220     		movs	r0, #2
 2980              	.LVL245:
 2981 0134 00E0     		b	.L205
 2982              	.LVL246:
 2983              	.L214:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 177


1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2984              		.loc 1 1802 0
 2985 0136 0220     		movs	r0, #2
 2986              	.LVL247:
 2987              	.L205:
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 2988              		.loc 1 1920 0
 2989 0138 03B0     		add	sp, sp, #12
 2990              	.LCFI41:
 2991              		.cfi_def_cfa_offset 20
 2992              		@ sp needed
 2993 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 2994              	.L218:
 2995              		.align	2
 2996              	.L217:
 2997 013c 0000FFFF 		.word	-65536
 2998 0140 00000000 		.word	I2C_Master_ISR_DMA
 2999 0144 00000000 		.word	I2C_DMAMasterTransmitCplt
 3000 0148 00000000 		.word	I2C_DMAError
 3001 014c 00200080 		.word	-2147475456
 3002 0150 00000000 		.word	I2C_Master_ISR_IT
 3003              		.cfi_endproc
 3004              	.LFE153:
 3006              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3007              		.align	2
 3008              		.global	HAL_I2C_Master_Receive_DMA
 3009              		.thumb
 3010              		.thumb_func
 3012              	HAL_I2C_Master_Receive_DMA:
 3013              	.LFB154:
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 3014              		.loc 1 1933 0
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 0
 3017              		@ frame_needed = 0, uses_anonymous_args = 0
 3018              	.LVL248:
 3019 0000 70B5     		push	{r4, r5, r6, lr}
 3020              	.LCFI42:
 3021              		.cfi_def_cfa_offset 16
 3022              		.cfi_offset 4, -16
 3023              		.cfi_offset 5, -12
 3024              		.cfi_offset 6, -8
 3025              		.cfi_offset 14, -4
 3026 0002 82B0     		sub	sp, sp, #8
 3027              	.LCFI43:
 3028              		.cfi_def_cfa_offset 24
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3029              		.loc 1 1937 0
 3030 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3031 0008 E4B2     		uxtb	r4, r4
 3032 000a 202C     		cmp	r4, #32
 3033 000c 40F08E80 		bne	.L227
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3034              		.loc 1 1939 0
 3035 0010 0468     		ldr	r4, [r0]
 3036 0012 A469     		ldr	r4, [r4, #24]
 3037 0014 14F4004F 		tst	r4, #32768
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 178


 3038 0018 40F08A80 		bne	.L228
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3039              		.loc 1 1945 0
 3040 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3041 0020 012C     		cmp	r4, #1
 3042 0022 00F08780 		beq	.L229
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3043              		.loc 1 1945 0 is_stmt 0 discriminator 2
 3044 0026 0124     		movs	r4, #1
 3045 0028 80F84040 		strb	r4, [r0, #64]
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3046              		.loc 1 1947 0 is_stmt 1 discriminator 2
 3047 002c 2224     		movs	r4, #34
 3048 002e 80F84140 		strb	r4, [r0, #65]
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3049              		.loc 1 1948 0 discriminator 2
 3050 0032 1024     		movs	r4, #16
 3051 0034 80F84240 		strb	r4, [r0, #66]
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3052              		.loc 1 1949 0 discriminator 2
 3053 0038 0024     		movs	r4, #0
 3054 003a 4464     		str	r4, [r0, #68]
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3055              		.loc 1 1952 0 discriminator 2
 3056 003c 4262     		str	r2, [r0, #36]
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3057              		.loc 1 1953 0 discriminator 2
 3058 003e 4385     		strh	r3, [r0, #42]	@ movhi
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3059              		.loc 1 1954 0 discriminator 2
 3060 0040 3E4B     		ldr	r3, .L232
 3061              	.LVL249:
 3062 0042 C362     		str	r3, [r0, #44]
 3063              	.LVL250:
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3064              		.loc 1 1955 0 discriminator 2
 3065 0044 3E4B     		ldr	r3, .L232+4
 3066 0046 4363     		str	r3, [r0, #52]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3067              		.loc 1 1957 0 discriminator 2
 3068 0048 438D     		ldrh	r3, [r0, #42]
 3069 004a 9BB2     		uxth	r3, r3
 3070 004c FF2B     		cmp	r3, #255
 3071 004e 04D9     		bls	.L221
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3072              		.loc 1 1959 0
 3073 0050 FF23     		movs	r3, #255
 3074 0052 0385     		strh	r3, [r0, #40]	@ movhi
 3075              	.LVL251:
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3076              		.loc 1 1960 0
 3077 0054 4FF08074 		mov	r4, #16777216
 3078 0058 03E0     		b	.L222
 3079              	.LVL252:
 3080              	.L221:
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3081              		.loc 1 1964 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 179


 3082 005a 438D     		ldrh	r3, [r0, #42]
 3083 005c 0385     		strh	r3, [r0, #40]	@ movhi
 3084              	.LVL253:
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3085              		.loc 1 1965 0
 3086 005e 4FF00074 		mov	r4, #33554432
 3087              	.LVL254:
 3088              	.L222:
 3089 0062 0E46     		mov	r6, r1
 3090 0064 0546     		mov	r5, r0
 3091              	.LVL255:
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3092              		.loc 1 1968 0
 3093 0066 018D     		ldrh	r1, [r0, #40]
 3094              	.LVL256:
 3095 0068 0029     		cmp	r1, #0
 3096 006a 4CD0     		beq	.L223
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3097              		.loc 1 1970 0
 3098 006c C36B     		ldr	r3, [r0, #60]
 3099 006e 8BB1     		cbz	r3, .L224
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3100              		.loc 1 1973 0
 3101 0070 3449     		ldr	r1, .L232+8
 3102 0072 D963     		str	r1, [r3, #60]
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3103              		.loc 1 1976 0
 3104 0074 C36B     		ldr	r3, [r0, #60]
 3105 0076 3449     		ldr	r1, .L232+12
 3106 0078 D964     		str	r1, [r3, #76]
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3107              		.loc 1 1979 0
 3108 007a C16B     		ldr	r1, [r0, #60]
 3109 007c 0023     		movs	r3, #0
 3110 007e 0B64     		str	r3, [r1, #64]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3111              		.loc 1 1980 0
 3112 0080 C16B     		ldr	r1, [r0, #60]
 3113 0082 0B65     		str	r3, [r1, #80]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3114              		.loc 1 1983 0
 3115 0084 0168     		ldr	r1, [r0]
 3116 0086 038D     		ldrh	r3, [r0, #40]
 3117 0088 2431     		adds	r1, r1, #36
 3118 008a C06B     		ldr	r0, [r0, #60]
 3119              	.LVL257:
 3120 008c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3121              	.LVL258:
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3122              		.loc 1 2000 0
 3123 0090 58BB     		cbnz	r0, .L230
 3124 0092 0DE0     		b	.L225
 3125              	.LVL259:
 3126              	.L224:
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3127              		.loc 1 1988 0
 3128 0094 2023     		movs	r3, #32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 180


 3129 0096 80F84130 		strb	r3, [r0, #65]
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3130              		.loc 1 1989 0
 3131 009a 0022     		movs	r2, #0
 3132              	.LVL260:
 3133 009c 80F84220 		strb	r2, [r0, #66]
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3134              		.loc 1 1992 0
 3135 00a0 436C     		ldr	r3, [r0, #68]
 3136 00a2 43F08003 		orr	r3, r3, #128
 3137 00a6 4364     		str	r3, [r0, #68]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3138              		.loc 1 1995 0
 3139 00a8 80F84020 		strb	r2, [r0, #64]
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3140              		.loc 1 1997 0
 3141 00ac 0120     		movs	r0, #1
 3142              	.LVL261:
 3143 00ae 42E0     		b	.L220
 3144              	.LVL262:
 3145              	.L225:
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3146              		.loc 1 2004 0
 3147 00b0 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 3148 00b4 254B     		ldr	r3, .L232+16
 3149 00b6 0093     		str	r3, [sp]
 3150 00b8 2346     		mov	r3, r4
 3151 00ba 3146     		mov	r1, r6
 3152 00bc 2846     		mov	r0, r5
 3153              	.LVL263:
 3154 00be FFF7FEFF 		bl	I2C_TransferConfig
 3155              	.LVL264:
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3156              		.loc 1 2007 0
 3157 00c2 6B8D     		ldrh	r3, [r5, #42]
 3158 00c4 9BB2     		uxth	r3, r3
 3159 00c6 2A8D     		ldrh	r2, [r5, #40]
 3160 00c8 9B1A     		subs	r3, r3, r2
 3161 00ca 9BB2     		uxth	r3, r3
 3162 00cc 6B85     		strh	r3, [r5, #42]	@ movhi
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3163              		.loc 1 2010 0
 3164 00ce 0024     		movs	r4, #0
 3165              	.LVL265:
 3166 00d0 85F84040 		strb	r4, [r5, #64]
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3167              		.loc 1 2016 0
 3168 00d4 1021     		movs	r1, #16
 3169 00d6 2846     		mov	r0, r5
 3170 00d8 FFF7FEFF 		bl	I2C_Enable_IRQ
 3171              	.LVL266:
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3172              		.loc 1 2019 0
 3173 00dc 2A68     		ldr	r2, [r5]
 3174 00de 1368     		ldr	r3, [r2]
 3175 00e0 43F40043 		orr	r3, r3, #32768
 3176 00e4 1360     		str	r3, [r2]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 181


2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3177              		.loc 1 2057 0
 3178 00e6 2046     		mov	r0, r4
 3179 00e8 25E0     		b	.L220
 3180              	.LVL267:
 3181              	.L230:
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3182              		.loc 1 2024 0
 3183 00ea 2023     		movs	r3, #32
 3184 00ec 85F84130 		strb	r3, [r5, #65]
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3185              		.loc 1 2025 0
 3186 00f0 0022     		movs	r2, #0
 3187 00f2 85F84220 		strb	r2, [r5, #66]
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3188              		.loc 1 2028 0
 3189 00f6 6B6C     		ldr	r3, [r5, #68]
 3190 00f8 43F01003 		orr	r3, r3, #16
 3191 00fc 6B64     		str	r3, [r5, #68]
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3192              		.loc 1 2031 0
 3193 00fe 85F84020 		strb	r2, [r5, #64]
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3194              		.loc 1 2033 0
 3195 0102 0120     		movs	r0, #1
 3196              	.LVL268:
 3197 0104 17E0     		b	.L220
 3198              	.LVL269:
 3199              	.L223:
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3200              		.loc 1 2039 0
 3201 0106 124B     		ldr	r3, .L232+20
 3202 0108 4363     		str	r3, [r0, #52]
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3203              		.loc 1 2043 0
 3204 010a 104B     		ldr	r3, .L232+16
 3205 010c 0093     		str	r3, [sp]
 3206 010e 4FF00073 		mov	r3, #33554432
 3207 0112 CAB2     		uxtb	r2, r1
 3208              	.LVL270:
 3209 0114 3146     		mov	r1, r6
 3210 0116 FFF7FEFF 		bl	I2C_TransferConfig
 3211              	.LVL271:
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3212              		.loc 1 2046 0
 3213 011a 0024     		movs	r4, #0
 3214              	.LVL272:
 3215 011c 85F84040 		strb	r4, [r5, #64]
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3216              		.loc 1 2054 0
 3217 0120 0121     		movs	r1, #1
 3218 0122 2846     		mov	r0, r5
 3219 0124 FFF7FEFF 		bl	I2C_Enable_IRQ
 3220              	.LVL273:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3221              		.loc 1 2057 0
 3222 0128 2046     		mov	r0, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 182


 3223 012a 04E0     		b	.L220
 3224              	.LVL274:
 3225              	.L227:
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3226              		.loc 1 2061 0
 3227 012c 0220     		movs	r0, #2
 3228              	.LVL275:
 3229 012e 02E0     		b	.L220
 3230              	.LVL276:
 3231              	.L228:
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3232              		.loc 1 1941 0
 3233 0130 0220     		movs	r0, #2
 3234              	.LVL277:
 3235 0132 00E0     		b	.L220
 3236              	.LVL278:
 3237              	.L229:
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3238              		.loc 1 1945 0
 3239 0134 0220     		movs	r0, #2
 3240              	.LVL279:
 3241              	.L220:
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3242              		.loc 1 2063 0
 3243 0136 02B0     		add	sp, sp, #8
 3244              	.LCFI44:
 3245              		.cfi_def_cfa_offset 16
 3246              		@ sp needed
 3247 0138 70BD     		pop	{r4, r5, r6, pc}
 3248              	.L233:
 3249 013a 00BF     		.align	2
 3250              	.L232:
 3251 013c 0000FFFF 		.word	-65536
 3252 0140 00000000 		.word	I2C_Master_ISR_DMA
 3253 0144 00000000 		.word	I2C_DMAMasterReceiveCplt
 3254 0148 00000000 		.word	I2C_DMAError
 3255 014c 00240080 		.word	-2147474432
 3256 0150 00000000 		.word	I2C_Master_ISR_IT
 3257              		.cfi_endproc
 3258              	.LFE154:
 3260              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3261              		.align	2
 3262              		.global	HAL_I2C_Slave_Transmit_DMA
 3263              		.thumb
 3264              		.thumb_func
 3266              	HAL_I2C_Slave_Transmit_DMA:
 3267              	.LFB155:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3268              		.loc 1 2074 0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              	.LVL280:
 3273 0000 38B5     		push	{r3, r4, r5, lr}
 3274              	.LCFI45:
 3275              		.cfi_def_cfa_offset 16
 3276              		.cfi_offset 3, -16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 183


 3277              		.cfi_offset 4, -12
 3278              		.cfi_offset 5, -8
 3279              		.cfi_offset 14, -4
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3280              		.loc 1 2077 0
 3281 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3282 0006 DBB2     		uxtb	r3, r3
 3283 0008 202B     		cmp	r3, #32
 3284 000a 64D1     		bne	.L240
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3285              		.loc 1 2079 0
 3286 000c 002A     		cmp	r2, #0
 3287 000e 18BF     		it	ne
 3288 0010 0029     		cmpne	r1, #0
 3289 0012 04D1     		bne	.L236
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3290              		.loc 1 2081 0
 3291 0014 4FF40073 		mov	r3, #512
 3292 0018 4364     		str	r3, [r0, #68]
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3293              		.loc 1 2082 0
 3294 001a 0120     		movs	r0, #1
 3295              	.LVL281:
 3296 001c 38BD     		pop	{r3, r4, r5, pc}
 3297              	.LVL282:
 3298              	.L236:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3299              		.loc 1 2085 0
 3300 001e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3301 0022 012B     		cmp	r3, #1
 3302 0024 59D0     		beq	.L241
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3303              		.loc 1 2085 0 is_stmt 0 discriminator 2
 3304 0026 0123     		movs	r3, #1
 3305 0028 80F84030 		strb	r3, [r0, #64]
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3306              		.loc 1 2087 0 is_stmt 1 discriminator 2
 3307 002c 2123     		movs	r3, #33
 3308 002e 80F84130 		strb	r3, [r0, #65]
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3309              		.loc 1 2088 0 discriminator 2
 3310 0032 2023     		movs	r3, #32
 3311 0034 80F84230 		strb	r3, [r0, #66]
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3312              		.loc 1 2089 0 discriminator 2
 3313 0038 0023     		movs	r3, #0
 3314 003a 4364     		str	r3, [r0, #68]
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3315              		.loc 1 2092 0 discriminator 2
 3316 003c 4162     		str	r1, [r0, #36]
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3317              		.loc 1 2093 0 discriminator 2
 3318 003e 4285     		strh	r2, [r0, #42]	@ movhi
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3319              		.loc 1 2094 0 discriminator 2
 3320 0040 438D     		ldrh	r3, [r0, #42]
 3321 0042 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 184


2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3322              		.loc 1 2095 0 discriminator 2
 3323 0044 264B     		ldr	r3, .L244
 3324 0046 C362     		str	r3, [r0, #44]
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3325              		.loc 1 2096 0 discriminator 2
 3326 0048 264B     		ldr	r3, .L244+4
 3327 004a 4363     		str	r3, [r0, #52]
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3328              		.loc 1 2098 0 discriminator 2
 3329 004c 836B     		ldr	r3, [r0, #56]
 3330 004e 93B1     		cbz	r3, .L237
 3331 0050 0546     		mov	r5, r0
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3332              		.loc 1 2101 0
 3333 0052 254A     		ldr	r2, .L244+8
 3334              	.LVL283:
 3335 0054 DA63     		str	r2, [r3, #60]
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3336              		.loc 1 2104 0
 3337 0056 836B     		ldr	r3, [r0, #56]
 3338 0058 244A     		ldr	r2, .L244+12
 3339 005a DA64     		str	r2, [r3, #76]
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3340              		.loc 1 2107 0
 3341 005c 826B     		ldr	r2, [r0, #56]
 3342 005e 0023     		movs	r3, #0
 3343 0060 1364     		str	r3, [r2, #64]
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3344              		.loc 1 2108 0
 3345 0062 826B     		ldr	r2, [r0, #56]
 3346 0064 1365     		str	r3, [r2, #80]
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3347              		.loc 1 2111 0
 3348 0066 0268     		ldr	r2, [r0]
 3349 0068 038D     		ldrh	r3, [r0, #40]
 3350 006a 2832     		adds	r2, r2, #40
 3351 006c 806B     		ldr	r0, [r0, #56]
 3352              	.LVL284:
 3353 006e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3354              	.LVL285:
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3355              		.loc 1 2128 0
 3356 0072 10BB     		cbnz	r0, .L242
 3357 0074 0DE0     		b	.L238
 3358              	.LVL286:
 3359              	.L237:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3360              		.loc 1 2116 0
 3361 0076 2823     		movs	r3, #40
 3362 0078 80F84130 		strb	r3, [r0, #65]
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3363              		.loc 1 2117 0
 3364 007c 0022     		movs	r2, #0
 3365              	.LVL287:
 3366 007e 80F84220 		strb	r2, [r0, #66]
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 185


 3367              		.loc 1 2120 0
 3368 0082 436C     		ldr	r3, [r0, #68]
 3369 0084 43F08003 		orr	r3, r3, #128
 3370 0088 4364     		str	r3, [r0, #68]
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3371              		.loc 1 2123 0
 3372 008a 80F84020 		strb	r2, [r0, #64]
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3373              		.loc 1 2125 0
 3374 008e 0120     		movs	r0, #1
 3375              	.LVL288:
 3376 0090 38BD     		pop	{r3, r4, r5, pc}
 3377              	.LVL289:
 3378              	.L238:
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3379              		.loc 1 2131 0
 3380 0092 2A68     		ldr	r2, [r5]
 3381 0094 5368     		ldr	r3, [r2, #4]
 3382 0096 23F40043 		bic	r3, r3, #32768
 3383 009a 5360     		str	r3, [r2, #4]
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3384              		.loc 1 2134 0
 3385 009c 0024     		movs	r4, #0
 3386 009e 85F84040 		strb	r4, [r5, #64]
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3387              		.loc 1 2140 0
 3388 00a2 4FF40041 		mov	r1, #32768
 3389 00a6 2846     		mov	r0, r5
 3390              	.LVL290:
 3391 00a8 FFF7FEFF 		bl	I2C_Enable_IRQ
 3392              	.LVL291:
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3393              		.loc 1 2143 0
 3394 00ac 2A68     		ldr	r2, [r5]
 3395 00ae 1368     		ldr	r3, [r2]
 3396 00b0 43F48043 		orr	r3, r3, #16384
 3397 00b4 1360     		str	r3, [r2]
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3398              		.loc 1 2160 0
 3399 00b6 2046     		mov	r0, r4
 3400 00b8 38BD     		pop	{r3, r4, r5, pc}
 3401              	.LVL292:
 3402              	.L242:
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3403              		.loc 1 2148 0
 3404 00ba 2823     		movs	r3, #40
 3405 00bc 85F84130 		strb	r3, [r5, #65]
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3406              		.loc 1 2149 0
 3407 00c0 0022     		movs	r2, #0
 3408 00c2 85F84220 		strb	r2, [r5, #66]
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3409              		.loc 1 2152 0
 3410 00c6 6B6C     		ldr	r3, [r5, #68]
 3411 00c8 43F01003 		orr	r3, r3, #16
 3412 00cc 6B64     		str	r3, [r5, #68]
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 186


 3413              		.loc 1 2155 0
 3414 00ce 85F84020 		strb	r2, [r5, #64]
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3415              		.loc 1 2157 0
 3416 00d2 0120     		movs	r0, #1
 3417              	.LVL293:
 3418 00d4 38BD     		pop	{r3, r4, r5, pc}
 3419              	.LVL294:
 3420              	.L240:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3421              		.loc 1 2164 0
 3422 00d6 0220     		movs	r0, #2
 3423              	.LVL295:
 3424 00d8 38BD     		pop	{r3, r4, r5, pc}
 3425              	.LVL296:
 3426              	.L241:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3427              		.loc 1 2085 0
 3428 00da 0220     		movs	r0, #2
 3429              	.LVL297:
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3430              		.loc 1 2166 0
 3431 00dc 38BD     		pop	{r3, r4, r5, pc}
 3432              	.L245:
 3433 00de 00BF     		.align	2
 3434              	.L244:
 3435 00e0 0000FFFF 		.word	-65536
 3436 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3437 00e8 00000000 		.word	I2C_DMASlaveTransmitCplt
 3438 00ec 00000000 		.word	I2C_DMAError
 3439              		.cfi_endproc
 3440              	.LFE155:
 3442              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3443              		.align	2
 3444              		.global	HAL_I2C_Slave_Receive_DMA
 3445              		.thumb
 3446              		.thumb_func
 3448              	HAL_I2C_Slave_Receive_DMA:
 3449              	.LFB156:
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3450              		.loc 1 2177 0
 3451              		.cfi_startproc
 3452              		@ args = 0, pretend = 0, frame = 0
 3453              		@ frame_needed = 0, uses_anonymous_args = 0
 3454              	.LVL298:
 3455 0000 38B5     		push	{r3, r4, r5, lr}
 3456              	.LCFI46:
 3457              		.cfi_def_cfa_offset 16
 3458              		.cfi_offset 3, -16
 3459              		.cfi_offset 4, -12
 3460              		.cfi_offset 5, -8
 3461              		.cfi_offset 14, -4
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3462              		.loc 1 2180 0
 3463 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3464 0006 DBB2     		uxtb	r3, r3
 3465 0008 202B     		cmp	r3, #32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 187


 3466 000a 65D1     		bne	.L252
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3467              		.loc 1 2182 0
 3468 000c 002A     		cmp	r2, #0
 3469 000e 18BF     		it	ne
 3470 0010 0029     		cmpne	r1, #0
 3471 0012 04D1     		bne	.L248
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3472              		.loc 1 2184 0
 3473 0014 4FF40073 		mov	r3, #512
 3474 0018 4364     		str	r3, [r0, #68]
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3475              		.loc 1 2185 0
 3476 001a 0120     		movs	r0, #1
 3477              	.LVL299:
 3478 001c 38BD     		pop	{r3, r4, r5, pc}
 3479              	.LVL300:
 3480              	.L248:
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3481              		.loc 1 2188 0
 3482 001e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3483 0022 012B     		cmp	r3, #1
 3484 0024 5AD0     		beq	.L253
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3485              		.loc 1 2188 0 is_stmt 0 discriminator 2
 3486 0026 0123     		movs	r3, #1
 3487 0028 80F84030 		strb	r3, [r0, #64]
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3488              		.loc 1 2190 0 is_stmt 1 discriminator 2
 3489 002c 2223     		movs	r3, #34
 3490 002e 80F84130 		strb	r3, [r0, #65]
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3491              		.loc 1 2191 0 discriminator 2
 3492 0032 2023     		movs	r3, #32
 3493 0034 80F84230 		strb	r3, [r0, #66]
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3494              		.loc 1 2192 0 discriminator 2
 3495 0038 0023     		movs	r3, #0
 3496 003a 4364     		str	r3, [r0, #68]
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3497              		.loc 1 2195 0 discriminator 2
 3498 003c 4162     		str	r1, [r0, #36]
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3499              		.loc 1 2196 0 discriminator 2
 3500 003e 4285     		strh	r2, [r0, #42]	@ movhi
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3501              		.loc 1 2197 0 discriminator 2
 3502 0040 438D     		ldrh	r3, [r0, #42]
 3503 0042 0385     		strh	r3, [r0, #40]	@ movhi
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3504              		.loc 1 2198 0 discriminator 2
 3505 0044 264B     		ldr	r3, .L256
 3506 0046 C362     		str	r3, [r0, #44]
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3507              		.loc 1 2199 0 discriminator 2
 3508 0048 264B     		ldr	r3, .L256+4
 3509 004a 4363     		str	r3, [r0, #52]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 188


2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3510              		.loc 1 2201 0 discriminator 2
 3511 004c C36B     		ldr	r3, [r0, #60]
 3512 004e 9BB1     		cbz	r3, .L249
 3513 0050 0A46     		mov	r2, r1
 3514              	.LVL301:
 3515 0052 0546     		mov	r5, r0
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3516              		.loc 1 2204 0
 3517 0054 2449     		ldr	r1, .L256+8
 3518              	.LVL302:
 3519 0056 D963     		str	r1, [r3, #60]
 3520              	.LVL303:
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3521              		.loc 1 2207 0
 3522 0058 C36B     		ldr	r3, [r0, #60]
 3523 005a 2449     		ldr	r1, .L256+12
 3524 005c D964     		str	r1, [r3, #76]
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3525              		.loc 1 2210 0
 3526 005e C16B     		ldr	r1, [r0, #60]
 3527 0060 0023     		movs	r3, #0
 3528 0062 0B64     		str	r3, [r1, #64]
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3529              		.loc 1 2211 0
 3530 0064 C16B     		ldr	r1, [r0, #60]
 3531 0066 0B65     		str	r3, [r1, #80]
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3532              		.loc 1 2214 0
 3533 0068 0168     		ldr	r1, [r0]
 3534 006a 038D     		ldrh	r3, [r0, #40]
 3535 006c 2431     		adds	r1, r1, #36
 3536 006e C06B     		ldr	r0, [r0, #60]
 3537              	.LVL304:
 3538 0070 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3539              	.LVL305:
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3540              		.loc 1 2231 0
 3541 0074 10BB     		cbnz	r0, .L254
 3542 0076 0DE0     		b	.L250
 3543              	.LVL306:
 3544              	.L249:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3545              		.loc 1 2219 0
 3546 0078 2823     		movs	r3, #40
 3547 007a 80F84130 		strb	r3, [r0, #65]
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3548              		.loc 1 2220 0
 3549 007e 0022     		movs	r2, #0
 3550              	.LVL307:
 3551 0080 80F84220 		strb	r2, [r0, #66]
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3552              		.loc 1 2223 0
 3553 0084 436C     		ldr	r3, [r0, #68]
 3554 0086 43F08003 		orr	r3, r3, #128
 3555 008a 4364     		str	r3, [r0, #68]
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 189


 3556              		.loc 1 2226 0
 3557 008c 80F84020 		strb	r2, [r0, #64]
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3558              		.loc 1 2228 0
 3559 0090 0120     		movs	r0, #1
 3560              	.LVL308:
 3561 0092 38BD     		pop	{r3, r4, r5, pc}
 3562              	.LVL309:
 3563              	.L250:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3564              		.loc 1 2234 0
 3565 0094 2A68     		ldr	r2, [r5]
 3566 0096 5368     		ldr	r3, [r2, #4]
 3567 0098 23F40043 		bic	r3, r3, #32768
 3568 009c 5360     		str	r3, [r2, #4]
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3569              		.loc 1 2237 0
 3570 009e 0024     		movs	r4, #0
 3571 00a0 85F84040 		strb	r4, [r5, #64]
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3572              		.loc 1 2243 0
 3573 00a4 4FF40041 		mov	r1, #32768
 3574 00a8 2846     		mov	r0, r5
 3575              	.LVL310:
 3576 00aa FFF7FEFF 		bl	I2C_Enable_IRQ
 3577              	.LVL311:
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3578              		.loc 1 2246 0
 3579 00ae 2A68     		ldr	r2, [r5]
 3580 00b0 1368     		ldr	r3, [r2]
 3581 00b2 43F40043 		orr	r3, r3, #32768
 3582 00b6 1360     		str	r3, [r2]
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3583              		.loc 1 2263 0
 3584 00b8 2046     		mov	r0, r4
 3585 00ba 38BD     		pop	{r3, r4, r5, pc}
 3586              	.LVL312:
 3587              	.L254:
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3588              		.loc 1 2251 0
 3589 00bc 2823     		movs	r3, #40
 3590 00be 85F84130 		strb	r3, [r5, #65]
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3591              		.loc 1 2252 0
 3592 00c2 0022     		movs	r2, #0
 3593 00c4 85F84220 		strb	r2, [r5, #66]
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3594              		.loc 1 2255 0
 3595 00c8 6B6C     		ldr	r3, [r5, #68]
 3596 00ca 43F01003 		orr	r3, r3, #16
 3597 00ce 6B64     		str	r3, [r5, #68]
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3598              		.loc 1 2258 0
 3599 00d0 85F84020 		strb	r2, [r5, #64]
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3600              		.loc 1 2260 0
 3601 00d4 0120     		movs	r0, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 190


 3602              	.LVL313:
 3603 00d6 38BD     		pop	{r3, r4, r5, pc}
 3604              	.LVL314:
 3605              	.L252:
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3606              		.loc 1 2267 0
 3607 00d8 0220     		movs	r0, #2
 3608              	.LVL315:
 3609 00da 38BD     		pop	{r3, r4, r5, pc}
 3610              	.LVL316:
 3611              	.L253:
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3612              		.loc 1 2188 0
 3613 00dc 0220     		movs	r0, #2
 3614              	.LVL317:
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 3615              		.loc 1 2269 0
 3616 00de 38BD     		pop	{r3, r4, r5, pc}
 3617              	.L257:
 3618              		.align	2
 3619              	.L256:
 3620 00e0 0000FFFF 		.word	-65536
 3621 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3622 00e8 00000000 		.word	I2C_DMASlaveReceiveCplt
 3623 00ec 00000000 		.word	I2C_DMAError
 3624              		.cfi_endproc
 3625              	.LFE156:
 3627              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3628              		.align	2
 3629              		.global	HAL_I2C_Mem_Write
 3630              		.thumb
 3631              		.thumb_func
 3633              	HAL_I2C_Mem_Write:
 3634              	.LFB157:
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 3635              		.loc 1 2284 0
 3636              		.cfi_startproc
 3637              		@ args = 12, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 3639              	.LVL318:
 3640 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3641              	.LCFI47:
 3642              		.cfi_def_cfa_offset 32
 3643              		.cfi_offset 4, -32
 3644              		.cfi_offset 5, -28
 3645              		.cfi_offset 6, -24
 3646              		.cfi_offset 7, -20
 3647              		.cfi_offset 8, -16
 3648              		.cfi_offset 9, -12
 3649              		.cfi_offset 10, -8
 3650              		.cfi_offset 14, -4
 3651 0004 82B0     		sub	sp, sp, #8
 3652              	.LCFI48:
 3653              		.cfi_def_cfa_offset 40
 3654 0006 BDF82C50 		ldrh	r5, [sp, #44]
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3655              		.loc 1 2290 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 191


 3656 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3657 000e E4B2     		uxtb	r4, r4
 3658 0010 202C     		cmp	r4, #32
 3659 0012 40F0BB80 		bne	.L267
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3660              		.loc 1 2292 0
 3661 0016 0A9C     		ldr	r4, [sp, #40]
 3662 0018 002D     		cmp	r5, #0
 3663 001a 18BF     		it	ne
 3664 001c 002C     		cmpne	r4, #0
 3665 001e 04D1     		bne	.L260
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3666              		.loc 1 2294 0
 3667 0020 4FF40073 		mov	r3, #512
 3668              	.LVL319:
 3669 0024 4364     		str	r3, [r0, #68]
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3670              		.loc 1 2295 0
 3671 0026 0123     		movs	r3, #1
 3672 0028 BBE0     		b	.L259
 3673              	.LVL320:
 3674              	.L260:
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3675              		.loc 1 2299 0
 3676 002a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3677 002e 012C     		cmp	r4, #1
 3678 0030 00F0AE80 		beq	.L268
 3679 0034 9846     		mov	r8, r3
 3680 0036 9146     		mov	r9, r2
 3681 0038 0E46     		mov	r6, r1
 3682 003a 0446     		mov	r4, r0
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3683              		.loc 1 2299 0 is_stmt 0 discriminator 2
 3684 003c 4FF0010A 		mov	r10, #1
 3685 0040 80F840A0 		strb	r10, [r0, #64]
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3686              		.loc 1 2302 0 is_stmt 1 discriminator 2
 3687 0044 FFF7FEFF 		bl	HAL_GetTick
 3688              	.LVL321:
 3689 0048 0746     		mov	r7, r0
 3690              	.LVL322:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3691              		.loc 1 2304 0 discriminator 2
 3692 004a 0090     		str	r0, [sp]
 3693 004c 1923     		movs	r3, #25
 3694 004e 5246     		mov	r2, r10
 3695 0050 4FF40041 		mov	r1, #32768
 3696 0054 2046     		mov	r0, r4
 3697              	.LVL323:
 3698 0056 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3699              	.LVL324:
 3700 005a 0028     		cmp	r0, #0
 3701 005c 40F09A80 		bne	.L269
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3702              		.loc 1 2309 0
 3703 0060 2123     		movs	r3, #33
 3704 0062 84F84130 		strb	r3, [r4, #65]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 192


2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3705              		.loc 1 2310 0
 3706 0066 4023     		movs	r3, #64
 3707 0068 84F84230 		strb	r3, [r4, #66]
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3708              		.loc 1 2311 0
 3709 006c 0023     		movs	r3, #0
 3710 006e 6364     		str	r3, [r4, #68]
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3711              		.loc 1 2314 0
 3712 0070 0A9A     		ldr	r2, [sp, #40]
 3713 0072 6262     		str	r2, [r4, #36]
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3714              		.loc 1 2315 0
 3715 0074 6585     		strh	r5, [r4, #42]	@ movhi
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3716              		.loc 1 2316 0
 3717 0076 6363     		str	r3, [r4, #52]
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3718              		.loc 1 2319 0
 3719 0078 0197     		str	r7, [sp, #4]
 3720 007a 0C9B     		ldr	r3, [sp, #48]
 3721 007c 0093     		str	r3, [sp]
 3722 007e 4346     		mov	r3, r8
 3723 0080 4A46     		mov	r2, r9
 3724 0082 3146     		mov	r1, r6
 3725 0084 2046     		mov	r0, r4
 3726 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3727              	.LVL325:
 3728 008a 20B1     		cbz	r0, .L261
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 3729              		.loc 1 2322 0
 3730 008c 0023     		movs	r3, #0
 3731 008e 84F84030 		strb	r3, [r4, #64]
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3732              		.loc 1 2323 0
 3733 0092 5346     		mov	r3, r10
 3734 0094 85E0     		b	.L259
 3735              	.L261:
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3736              		.loc 1 2327 0
 3737 0096 638D     		ldrh	r3, [r4, #42]
 3738 0098 9BB2     		uxth	r3, r3
 3739 009a FF2B     		cmp	r3, #255
 3740 009c 0AD9     		bls	.L262
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3741              		.loc 1 2329 0
 3742 009e FF22     		movs	r2, #255
 3743 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3744              		.loc 1 2330 0
 3745 00a2 0023     		movs	r3, #0
 3746 00a4 0093     		str	r3, [sp]
 3747 00a6 4FF08073 		mov	r3, #16777216
 3748 00aa 3146     		mov	r1, r6
 3749 00ac 2046     		mov	r0, r4
 3750 00ae FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 193


 3751              	.LVL326:
 3752 00b2 0BE0     		b	.L266
 3753              	.L262:
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3754              		.loc 1 2334 0
 3755 00b4 628D     		ldrh	r2, [r4, #42]
 3756 00b6 92B2     		uxth	r2, r2
 3757 00b8 2285     		strh	r2, [r4, #40]	@ movhi
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3758              		.loc 1 2335 0
 3759 00ba 0023     		movs	r3, #0
 3760 00bc 0093     		str	r3, [sp]
 3761 00be 4FF00073 		mov	r3, #33554432
 3762 00c2 D2B2     		uxtb	r2, r2
 3763 00c4 3146     		mov	r1, r6
 3764 00c6 2046     		mov	r0, r4
 3765 00c8 FFF7FEFF 		bl	I2C_TransferConfig
 3766              	.LVL327:
 3767              	.L266:
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3768              		.loc 1 2341 0
 3769 00cc 3A46     		mov	r2, r7
 3770 00ce 0C99     		ldr	r1, [sp, #48]
 3771 00d0 2046     		mov	r0, r4
 3772 00d2 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3773              	.LVL328:
 3774 00d6 0028     		cmp	r0, #0
 3775 00d8 5ED1     		bne	.L270
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3776              		.loc 1 2347 0
 3777 00da 2368     		ldr	r3, [r4]
 3778 00dc 626A     		ldr	r2, [r4, #36]
 3779 00de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3780 00e0 9A62     		str	r2, [r3, #40]
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3781              		.loc 1 2350 0
 3782 00e2 636A     		ldr	r3, [r4, #36]
 3783 00e4 0133     		adds	r3, r3, #1
 3784 00e6 6362     		str	r3, [r4, #36]
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 3785              		.loc 1 2352 0
 3786 00e8 638D     		ldrh	r3, [r4, #42]
 3787 00ea 9BB2     		uxth	r3, r3
 3788 00ec 013B     		subs	r3, r3, #1
 3789 00ee 9BB2     		uxth	r3, r3
 3790 00f0 6385     		strh	r3, [r4, #42]	@ movhi
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3791              		.loc 1 2353 0
 3792 00f2 238D     		ldrh	r3, [r4, #40]
 3793 00f4 013B     		subs	r3, r3, #1
 3794 00f6 9BB2     		uxth	r3, r3
 3795 00f8 2385     		strh	r3, [r4, #40]	@ movhi
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3796              		.loc 1 2355 0
 3797 00fa 628D     		ldrh	r2, [r4, #42]
 3798 00fc 92B2     		uxth	r2, r2
 3799 00fe 22B3     		cbz	r2, .L264
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 194


2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 3800              		.loc 1 2355 0 is_stmt 0 discriminator 1
 3801 0100 1BBB     		cbnz	r3, .L264
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 3802              		.loc 1 2358 0 is_stmt 1
 3803 0102 0097     		str	r7, [sp]
 3804 0104 0C9B     		ldr	r3, [sp, #48]
 3805 0106 0022     		movs	r2, #0
 3806 0108 8021     		movs	r1, #128
 3807 010a 2046     		mov	r0, r4
 3808 010c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3809              	.LVL329:
 3810 0110 0028     		cmp	r0, #0
 3811 0112 43D1     		bne	.L271
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 3812              		.loc 1 2363 0
 3813 0114 638D     		ldrh	r3, [r4, #42]
 3814 0116 9BB2     		uxth	r3, r3
 3815 0118 FF2B     		cmp	r3, #255
 3816 011a 0AD9     		bls	.L265
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3817              		.loc 1 2365 0
 3818 011c FF22     		movs	r2, #255
 3819 011e 2285     		strh	r2, [r4, #40]	@ movhi
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 3820              		.loc 1 2366 0
 3821 0120 0023     		movs	r3, #0
 3822 0122 0093     		str	r3, [sp]
 3823 0124 4FF08073 		mov	r3, #16777216
 3824 0128 3146     		mov	r1, r6
 3825 012a 2046     		mov	r0, r4
 3826 012c FFF7FEFF 		bl	I2C_TransferConfig
 3827              	.LVL330:
 3828 0130 0BE0     		b	.L264
 3829              	.L265:
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3830              		.loc 1 2370 0
 3831 0132 628D     		ldrh	r2, [r4, #42]
 3832 0134 92B2     		uxth	r2, r2
 3833 0136 2285     		strh	r2, [r4, #40]	@ movhi
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 3834              		.loc 1 2371 0
 3835 0138 0023     		movs	r3, #0
 3836 013a 0093     		str	r3, [sp]
 3837 013c 4FF00073 		mov	r3, #33554432
 3838 0140 D2B2     		uxtb	r2, r2
 3839 0142 3146     		mov	r1, r6
 3840 0144 2046     		mov	r0, r4
 3841 0146 FFF7FEFF 		bl	I2C_TransferConfig
 3842              	.LVL331:
 3843              	.L264:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3844              		.loc 1 2376 0
 3845 014a 638D     		ldrh	r3, [r4, #42]
 3846 014c 9BB2     		uxth	r3, r3
 3847 014e 002B     		cmp	r3, #0
 3848 0150 BCD1     		bne	.L266
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 195


2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3849              		.loc 1 2380 0
 3850 0152 3A46     		mov	r2, r7
 3851 0154 0C99     		ldr	r1, [sp, #48]
 3852 0156 2046     		mov	r0, r4
 3853 0158 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3854              	.LVL332:
 3855 015c 0346     		mov	r3, r0
 3856 015e F8B9     		cbnz	r0, .L272
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3857              		.loc 1 2386 0
 3858 0160 2268     		ldr	r2, [r4]
 3859 0162 2021     		movs	r1, #32
 3860 0164 D161     		str	r1, [r2, #28]
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3861              		.loc 1 2389 0
 3862 0166 2068     		ldr	r0, [r4]
 3863 0168 4268     		ldr	r2, [r0, #4]
 3864 016a 22F0FF72 		bic	r2, r2, #33423360
 3865 016e 22F48B32 		bic	r2, r2, #71168
 3866 0172 22F4FF72 		bic	r2, r2, #510
 3867 0176 22F00102 		bic	r2, r2, #1
 3868 017a 4260     		str	r2, [r0, #4]
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3869              		.loc 1 2391 0
 3870 017c 84F84110 		strb	r1, [r4, #65]
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3871              		.loc 1 2392 0
 3872 0180 0022     		movs	r2, #0
 3873 0182 84F84220 		strb	r2, [r4, #66]
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3874              		.loc 1 2395 0
 3875 0186 84F84020 		strb	r2, [r4, #64]
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3876              		.loc 1 2397 0
 3877 018a 0AE0     		b	.L259
 3878              	.LVL333:
 3879              	.L267:
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 3880              		.loc 1 2401 0
 3881 018c 0223     		movs	r3, #2
 3882              	.LVL334:
 3883 018e 08E0     		b	.L259
 3884              	.LVL335:
 3885              	.L268:
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3886              		.loc 1 2299 0
 3887 0190 0223     		movs	r3, #2
 3888              	.LVL336:
 3889 0192 06E0     		b	.L259
 3890              	.LVL337:
 3891              	.L269:
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3892              		.loc 1 2306 0
 3893 0194 0123     		movs	r3, #1
 3894 0196 04E0     		b	.L259
 3895              	.L270:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 196


2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 3896              		.loc 1 2343 0
 3897 0198 0123     		movs	r3, #1
 3898 019a 02E0     		b	.L259
 3899              	.L271:
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 3900              		.loc 1 2360 0
 3901 019c 0123     		movs	r3, #1
 3902 019e 00E0     		b	.L259
 3903              	.L272:
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3904              		.loc 1 2382 0
 3905 01a0 0123     		movs	r3, #1
 3906              	.LVL338:
 3907              	.L259:
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3908              		.loc 1 2403 0
 3909 01a2 1846     		mov	r0, r3
 3910 01a4 02B0     		add	sp, sp, #8
 3911              	.LCFI49:
 3912              		.cfi_def_cfa_offset 32
 3913              		@ sp needed
 3914 01a6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3915              		.cfi_endproc
 3916              	.LFE157:
 3918 01aa 00BF     		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 3919              		.align	2
 3920              		.global	HAL_I2C_Mem_Read
 3921              		.thumb
 3922              		.thumb_func
 3924              	HAL_I2C_Mem_Read:
 3925              	.LFB158:
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 3926              		.loc 1 2419 0
 3927              		.cfi_startproc
 3928              		@ args = 12, pretend = 0, frame = 0
 3929              		@ frame_needed = 0, uses_anonymous_args = 0
 3930              	.LVL339:
 3931 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3932              	.LCFI50:
 3933              		.cfi_def_cfa_offset 32
 3934              		.cfi_offset 4, -32
 3935              		.cfi_offset 5, -28
 3936              		.cfi_offset 6, -24
 3937              		.cfi_offset 7, -20
 3938              		.cfi_offset 8, -16
 3939              		.cfi_offset 9, -12
 3940              		.cfi_offset 10, -8
 3941              		.cfi_offset 14, -4
 3942 0004 82B0     		sub	sp, sp, #8
 3943              	.LCFI51:
 3944              		.cfi_def_cfa_offset 40
 3945 0006 BDF82C50 		ldrh	r5, [sp, #44]
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 3946              		.loc 1 2425 0
 3947 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3948 000e E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 197


 3949 0010 202C     		cmp	r4, #32
 3950 0012 40F0BC80 		bne	.L283
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3951              		.loc 1 2427 0
 3952 0016 0A9C     		ldr	r4, [sp, #40]
 3953 0018 002D     		cmp	r5, #0
 3954 001a 18BF     		it	ne
 3955 001c 002C     		cmpne	r4, #0
 3956 001e 04D1     		bne	.L276
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 3957              		.loc 1 2429 0
 3958 0020 4FF40073 		mov	r3, #512
 3959              	.LVL340:
 3960 0024 4364     		str	r3, [r0, #68]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 3961              		.loc 1 2430 0
 3962 0026 0123     		movs	r3, #1
 3963 0028 BCE0     		b	.L275
 3964              	.LVL341:
 3965              	.L276:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3966              		.loc 1 2434 0
 3967 002a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3968 002e 012C     		cmp	r4, #1
 3969 0030 00F0AF80 		beq	.L284
 3970 0034 9846     		mov	r8, r3
 3971 0036 9146     		mov	r9, r2
 3972 0038 0E46     		mov	r6, r1
 3973 003a 0446     		mov	r4, r0
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3974              		.loc 1 2434 0 is_stmt 0 discriminator 2
 3975 003c 4FF0010A 		mov	r10, #1
 3976 0040 80F840A0 		strb	r10, [r0, #64]
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3977              		.loc 1 2437 0 is_stmt 1 discriminator 2
 3978 0044 FFF7FEFF 		bl	HAL_GetTick
 3979              	.LVL342:
 3980 0048 0746     		mov	r7, r0
 3981              	.LVL343:
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 3982              		.loc 1 2439 0 discriminator 2
 3983 004a 0090     		str	r0, [sp]
 3984 004c 1923     		movs	r3, #25
 3985 004e 5246     		mov	r2, r10
 3986 0050 4FF40041 		mov	r1, #32768
 3987 0054 2046     		mov	r0, r4
 3988              	.LVL344:
 3989 0056 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3990              	.LVL345:
 3991 005a 0028     		cmp	r0, #0
 3992 005c 40F09B80 		bne	.L285
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3993              		.loc 1 2444 0
 3994 0060 2223     		movs	r3, #34
 3995 0062 84F84130 		strb	r3, [r4, #65]
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3996              		.loc 1 2445 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 198


 3997 0066 4023     		movs	r3, #64
 3998 0068 84F84230 		strb	r3, [r4, #66]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 3999              		.loc 1 2446 0
 4000 006c 0023     		movs	r3, #0
 4001 006e 6364     		str	r3, [r4, #68]
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4002              		.loc 1 2449 0
 4003 0070 0A9A     		ldr	r2, [sp, #40]
 4004 0072 6262     		str	r2, [r4, #36]
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4005              		.loc 1 2450 0
 4006 0074 6585     		strh	r5, [r4, #42]	@ movhi
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4007              		.loc 1 2451 0
 4008 0076 6363     		str	r3, [r4, #52]
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4009              		.loc 1 2454 0
 4010 0078 0197     		str	r7, [sp, #4]
 4011 007a 0C9B     		ldr	r3, [sp, #48]
 4012 007c 0093     		str	r3, [sp]
 4013 007e 4346     		mov	r3, r8
 4014 0080 4A46     		mov	r2, r9
 4015 0082 3146     		mov	r1, r6
 4016 0084 2046     		mov	r0, r4
 4017 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4018              	.LVL346:
 4019 008a 20B1     		cbz	r0, .L277
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4020              		.loc 1 2457 0
 4021 008c 0023     		movs	r3, #0
 4022 008e 84F84030 		strb	r3, [r4, #64]
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4023              		.loc 1 2458 0
 4024 0092 5346     		mov	r3, r10
 4025 0094 86E0     		b	.L275
 4026              	.L277:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4027              		.loc 1 2463 0
 4028 0096 638D     		ldrh	r3, [r4, #42]
 4029 0098 9BB2     		uxth	r3, r3
 4030 009a FF2B     		cmp	r3, #255
 4031 009c 0AD9     		bls	.L278
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4032              		.loc 1 2465 0
 4033 009e FF22     		movs	r2, #255
 4034 00a0 2285     		strh	r2, [r4, #40]	@ movhi
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4035              		.loc 1 2466 0
 4036 00a2 424B     		ldr	r3, .L290
 4037 00a4 0093     		str	r3, [sp]
 4038 00a6 4FF08073 		mov	r3, #16777216
 4039 00aa 3146     		mov	r1, r6
 4040 00ac 2046     		mov	r0, r4
 4041 00ae FFF7FEFF 		bl	I2C_TransferConfig
 4042              	.LVL347:
 4043 00b2 0BE0     		b	.L282
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 199


 4044              	.L278:
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4045              		.loc 1 2470 0
 4046 00b4 628D     		ldrh	r2, [r4, #42]
 4047 00b6 92B2     		uxth	r2, r2
 4048 00b8 2285     		strh	r2, [r4, #40]	@ movhi
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4049              		.loc 1 2471 0
 4050 00ba 3C4B     		ldr	r3, .L290
 4051 00bc 0093     		str	r3, [sp]
 4052 00be 4FF00073 		mov	r3, #33554432
 4053 00c2 D2B2     		uxtb	r2, r2
 4054 00c4 3146     		mov	r1, r6
 4055 00c6 2046     		mov	r0, r4
 4056 00c8 FFF7FEFF 		bl	I2C_TransferConfig
 4057              	.LVL348:
 4058              	.L282:
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4059              		.loc 1 2477 0
 4060 00cc 0097     		str	r7, [sp]
 4061 00ce 0C9B     		ldr	r3, [sp, #48]
 4062 00d0 0022     		movs	r2, #0
 4063 00d2 0421     		movs	r1, #4
 4064 00d4 2046     		mov	r0, r4
 4065 00d6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4066              	.LVL349:
 4067 00da 0028     		cmp	r0, #0
 4068 00dc 5DD1     		bne	.L286
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4069              		.loc 1 2483 0
 4070 00de 636A     		ldr	r3, [r4, #36]
 4071 00e0 2268     		ldr	r2, [r4]
 4072 00e2 526A     		ldr	r2, [r2, #36]
 4073 00e4 1A70     		strb	r2, [r3]
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4074              		.loc 1 2486 0
 4075 00e6 636A     		ldr	r3, [r4, #36]
 4076 00e8 0133     		adds	r3, r3, #1
 4077 00ea 6362     		str	r3, [r4, #36]
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 4078              		.loc 1 2488 0
 4079 00ec 228D     		ldrh	r2, [r4, #40]
 4080 00ee 013A     		subs	r2, r2, #1
 4081 00f0 92B2     		uxth	r2, r2
 4082 00f2 2285     		strh	r2, [r4, #40]	@ movhi
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4083              		.loc 1 2489 0
 4084 00f4 638D     		ldrh	r3, [r4, #42]
 4085 00f6 9BB2     		uxth	r3, r3
 4086 00f8 013B     		subs	r3, r3, #1
 4087 00fa 9BB2     		uxth	r3, r3
 4088 00fc 6385     		strh	r3, [r4, #42]	@ movhi
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4089              		.loc 1 2491 0
 4090 00fe 638D     		ldrh	r3, [r4, #42]
 4091 0100 9BB2     		uxth	r3, r3
 4092 0102 1BB3     		cbz	r3, .L280
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 200


2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 4093              		.loc 1 2491 0 is_stmt 0 discriminator 1
 4094 0104 12BB     		cbnz	r2, .L280
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 4095              		.loc 1 2494 0 is_stmt 1
 4096 0106 0097     		str	r7, [sp]
 4097 0108 0C9B     		ldr	r3, [sp, #48]
 4098 010a 8021     		movs	r1, #128
 4099 010c 2046     		mov	r0, r4
 4100 010e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4101              	.LVL350:
 4102 0112 0028     		cmp	r0, #0
 4103 0114 43D1     		bne	.L287
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 4104              		.loc 1 2499 0
 4105 0116 638D     		ldrh	r3, [r4, #42]
 4106 0118 9BB2     		uxth	r3, r3
 4107 011a FF2B     		cmp	r3, #255
 4108 011c 0AD9     		bls	.L281
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4109              		.loc 1 2501 0
 4110 011e FF22     		movs	r2, #255
 4111 0120 2285     		strh	r2, [r4, #40]	@ movhi
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4112              		.loc 1 2502 0
 4113 0122 0023     		movs	r3, #0
 4114 0124 0093     		str	r3, [sp]
 4115 0126 4FF08073 		mov	r3, #16777216
 4116 012a 3146     		mov	r1, r6
 4117 012c 2046     		mov	r0, r4
 4118 012e FFF7FEFF 		bl	I2C_TransferConfig
 4119              	.LVL351:
 4120 0132 0BE0     		b	.L280
 4121              	.L281:
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4122              		.loc 1 2506 0
 4123 0134 628D     		ldrh	r2, [r4, #42]
 4124 0136 92B2     		uxth	r2, r2
 4125 0138 2285     		strh	r2, [r4, #40]	@ movhi
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4126              		.loc 1 2507 0
 4127 013a 0023     		movs	r3, #0
 4128 013c 0093     		str	r3, [sp]
 4129 013e 4FF00073 		mov	r3, #33554432
 4130 0142 D2B2     		uxtb	r2, r2
 4131 0144 3146     		mov	r1, r6
 4132 0146 2046     		mov	r0, r4
 4133 0148 FFF7FEFF 		bl	I2C_TransferConfig
 4134              	.LVL352:
 4135              	.L280:
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4136              		.loc 1 2511 0
 4137 014c 638D     		ldrh	r3, [r4, #42]
 4138 014e 9BB2     		uxth	r3, r3
 4139 0150 002B     		cmp	r3, #0
 4140 0152 BBD1     		bne	.L282
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 201


 4141              		.loc 1 2515 0
 4142 0154 3A46     		mov	r2, r7
 4143 0156 0C99     		ldr	r1, [sp, #48]
 4144 0158 2046     		mov	r0, r4
 4145 015a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4146              	.LVL353:
 4147 015e 0346     		mov	r3, r0
 4148 0160 F8B9     		cbnz	r0, .L288
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4149              		.loc 1 2521 0
 4150 0162 2268     		ldr	r2, [r4]
 4151 0164 2021     		movs	r1, #32
 4152 0166 D161     		str	r1, [r2, #28]
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4153              		.loc 1 2524 0
 4154 0168 2068     		ldr	r0, [r4]
 4155 016a 4268     		ldr	r2, [r0, #4]
 4156 016c 22F0FF72 		bic	r2, r2, #33423360
 4157 0170 22F48B32 		bic	r2, r2, #71168
 4158 0174 22F4FF72 		bic	r2, r2, #510
 4159 0178 22F00102 		bic	r2, r2, #1
 4160 017c 4260     		str	r2, [r0, #4]
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4161              		.loc 1 2526 0
 4162 017e 84F84110 		strb	r1, [r4, #65]
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4163              		.loc 1 2527 0
 4164 0182 0022     		movs	r2, #0
 4165 0184 84F84220 		strb	r2, [r4, #66]
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4166              		.loc 1 2530 0
 4167 0188 84F84020 		strb	r2, [r4, #64]
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4168              		.loc 1 2532 0
 4169 018c 0AE0     		b	.L275
 4170              	.LVL354:
 4171              	.L283:
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4172              		.loc 1 2536 0
 4173 018e 0223     		movs	r3, #2
 4174              	.LVL355:
 4175 0190 08E0     		b	.L275
 4176              	.LVL356:
 4177              	.L284:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4178              		.loc 1 2434 0
 4179 0192 0223     		movs	r3, #2
 4180              	.LVL357:
 4181 0194 06E0     		b	.L275
 4182              	.LVL358:
 4183              	.L285:
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4184              		.loc 1 2441 0
 4185 0196 0123     		movs	r3, #1
 4186 0198 04E0     		b	.L275
 4187              	.L286:
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 202


 4188              		.loc 1 2479 0
 4189 019a 0123     		movs	r3, #1
 4190 019c 02E0     		b	.L275
 4191              	.L287:
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 4192              		.loc 1 2496 0
 4193 019e 0123     		movs	r3, #1
 4194 01a0 00E0     		b	.L275
 4195              	.L288:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4196              		.loc 1 2517 0
 4197 01a2 0123     		movs	r3, #1
 4198              	.LVL359:
 4199              	.L275:
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 4200              		.loc 1 2538 0
 4201 01a4 1846     		mov	r0, r3
 4202 01a6 02B0     		add	sp, sp, #8
 4203              	.LCFI52:
 4204              		.cfi_def_cfa_offset 32
 4205              		@ sp needed
 4206 01a8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4207              	.LVL360:
 4208              	.L291:
 4209              		.align	2
 4210              	.L290:
 4211 01ac 00240080 		.word	-2147474432
 4212              		.cfi_endproc
 4213              	.LFE158:
 4215              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4216              		.align	2
 4217              		.global	HAL_I2C_Mem_Write_IT
 4218              		.thumb
 4219              		.thumb_func
 4221              	HAL_I2C_Mem_Write_IT:
 4222              	.LFB159:
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4223              		.loc 1 2552 0
 4224              		.cfi_startproc
 4225              		@ args = 8, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
 4227              	.LVL361:
 4228 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4229              	.LCFI53:
 4230              		.cfi_def_cfa_offset 24
 4231              		.cfi_offset 4, -24
 4232              		.cfi_offset 5, -20
 4233              		.cfi_offset 6, -16
 4234              		.cfi_offset 7, -12
 4235              		.cfi_offset 8, -8
 4236              		.cfi_offset 14, -4
 4237 0004 82B0     		sub	sp, sp, #8
 4238              	.LCFI54:
 4239              		.cfi_def_cfa_offset 32
 4240 0006 BDF82450 		ldrh	r5, [sp, #36]
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4241              		.loc 1 2559 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 203


 4242 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4243 000e E4B2     		uxtb	r4, r4
 4244 0010 202C     		cmp	r4, #32
 4245 0012 60D1     		bne	.L298
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4246              		.loc 1 2561 0
 4247 0014 089C     		ldr	r4, [sp, #32]
 4248 0016 002D     		cmp	r5, #0
 4249 0018 18BF     		it	ne
 4250 001a 002C     		cmpne	r4, #0
 4251 001c 04D1     		bne	.L294
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4252              		.loc 1 2563 0
 4253 001e 4FF40073 		mov	r3, #512
 4254              	.LVL362:
 4255 0022 4364     		str	r3, [r0, #68]
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4256              		.loc 1 2564 0
 4257 0024 0124     		movs	r4, #1
 4258 0026 5BE0     		b	.L293
 4259              	.LVL363:
 4260              	.L294:
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4261              		.loc 1 2567 0
 4262 0028 0468     		ldr	r4, [r0]
 4263 002a A469     		ldr	r4, [r4, #24]
 4264 002c 14F4004F 		tst	r4, #32768
 4265 0030 53D1     		bne	.L299
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4266              		.loc 1 2573 0
 4267 0032 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4268 0036 012C     		cmp	r4, #1
 4269 0038 51D0     		beq	.L300
 4270 003a 1F46     		mov	r7, r3
 4271 003c 1446     		mov	r4, r2
 4272 003e 0E46     		mov	r6, r1
 4273 0040 8046     		mov	r8, r0
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4274              		.loc 1 2573 0 is_stmt 0 discriminator 2
 4275 0042 0123     		movs	r3, #1
 4276              	.LVL364:
 4277 0044 80F84030 		strb	r3, [r0, #64]
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4278              		.loc 1 2576 0 is_stmt 1 discriminator 2
 4279 0048 FFF7FEFF 		bl	HAL_GetTick
 4280              	.LVL365:
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4281              		.loc 1 2578 0 discriminator 2
 4282 004c 2123     		movs	r3, #33
 4283 004e 88F84130 		strb	r3, [r8, #65]
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4284              		.loc 1 2579 0 discriminator 2
 4285 0052 4023     		movs	r3, #64
 4286 0054 88F84230 		strb	r3, [r8, #66]
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4287              		.loc 1 2580 0 discriminator 2
 4288 0058 0023     		movs	r3, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 204


 4289 005a C8F84430 		str	r3, [r8, #68]
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4290              		.loc 1 2583 0 discriminator 2
 4291 005e 089B     		ldr	r3, [sp, #32]
 4292 0060 C8F82430 		str	r3, [r8, #36]
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4293              		.loc 1 2584 0 discriminator 2
 4294 0064 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4295              		.loc 1 2585 0 discriminator 2
 4296 0068 1F4B     		ldr	r3, .L302
 4297 006a C8F82C30 		str	r3, [r8, #44]
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4298              		.loc 1 2586 0 discriminator 2
 4299 006e 1F4B     		ldr	r3, .L302+4
 4300 0070 C8F83430 		str	r3, [r8, #52]
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4301              		.loc 1 2588 0 discriminator 2
 4302 0074 B8F82A30 		ldrh	r3, [r8, #42]
 4303 0078 9BB2     		uxth	r3, r3
 4304 007a FF2B     		cmp	r3, #255
 4305 007c 05D9     		bls	.L295
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4306              		.loc 1 2590 0
 4307 007e FF23     		movs	r3, #255
 4308 0080 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4309              	.LVL366:
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4310              		.loc 1 2591 0
 4311 0084 4FF08075 		mov	r5, #16777216
 4312 0088 05E0     		b	.L296
 4313              	.LVL367:
 4314              	.L295:
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4315              		.loc 1 2595 0
 4316 008a B8F82A30 		ldrh	r3, [r8, #42]
 4317 008e A8F82830 		strh	r3, [r8, #40]	@ movhi
 4318              	.LVL368:
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4319              		.loc 1 2596 0
 4320 0092 4FF00075 		mov	r5, #33554432
 4321              	.LVL369:
 4322              	.L296:
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4323              		.loc 1 2600 0
 4324 0096 0190     		str	r0, [sp, #4]
 4325 0098 1923     		movs	r3, #25
 4326 009a 0093     		str	r3, [sp]
 4327 009c 3B46     		mov	r3, r7
 4328 009e 2246     		mov	r2, r4
 4329 00a0 3146     		mov	r1, r6
 4330 00a2 4046     		mov	r0, r8
 4331              	.LVL370:
 4332 00a4 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4333              	.LVL371:
 4334 00a8 0446     		mov	r4, r0
 4335 00aa 20B1     		cbz	r0, .L297
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 205


2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4336              		.loc 1 2603 0
 4337 00ac 0023     		movs	r3, #0
 4338 00ae 88F84030 		strb	r3, [r8, #64]
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4339              		.loc 1 2604 0
 4340 00b2 0124     		movs	r4, #1
 4341 00b4 14E0     		b	.L293
 4342              	.L297:
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4343              		.loc 1 2608 0
 4344 00b6 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4345 00ba 0027     		movs	r7, #0
 4346 00bc 0097     		str	r7, [sp]
 4347 00be 2B46     		mov	r3, r5
 4348 00c0 3146     		mov	r1, r6
 4349 00c2 4046     		mov	r0, r8
 4350 00c4 FFF7FEFF 		bl	I2C_TransferConfig
 4351              	.LVL372:
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4352              		.loc 1 2611 0
 4353 00c8 88F84070 		strb	r7, [r8, #64]
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4354              		.loc 1 2620 0
 4355 00cc 0121     		movs	r1, #1
 4356 00ce 4046     		mov	r0, r8
 4357 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
 4358              	.LVL373:
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4359              		.loc 1 2622 0
 4360 00d4 04E0     		b	.L293
 4361              	.LVL374:
 4362              	.L298:
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4363              		.loc 1 2626 0
 4364 00d6 0224     		movs	r4, #2
 4365 00d8 02E0     		b	.L293
 4366              	.L299:
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4367              		.loc 1 2569 0
 4368 00da 0224     		movs	r4, #2
 4369 00dc 00E0     		b	.L293
 4370              	.L300:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4371              		.loc 1 2573 0
 4372 00de 0224     		movs	r4, #2
 4373              	.LVL375:
 4374              	.L293:
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4375              		.loc 1 2628 0
 4376 00e0 2046     		mov	r0, r4
 4377 00e2 02B0     		add	sp, sp, #8
 4378              	.LCFI55:
 4379              		.cfi_def_cfa_offset 24
 4380              		@ sp needed
 4381 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4382              	.LVL376:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 206


 4383              	.L303:
 4384              		.align	2
 4385              	.L302:
 4386 00e8 0000FFFF 		.word	-65536
 4387 00ec 00000000 		.word	I2C_Master_ISR_IT
 4388              		.cfi_endproc
 4389              	.LFE159:
 4391              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4392              		.align	2
 4393              		.global	HAL_I2C_Mem_Read_IT
 4394              		.thumb
 4395              		.thumb_func
 4397              	HAL_I2C_Mem_Read_IT:
 4398              	.LFB160:
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4399              		.loc 1 2643 0
 4400              		.cfi_startproc
 4401              		@ args = 8, pretend = 0, frame = 0
 4402              		@ frame_needed = 0, uses_anonymous_args = 0
 4403              	.LVL377:
 4404 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4405              	.LCFI56:
 4406              		.cfi_def_cfa_offset 24
 4407              		.cfi_offset 4, -24
 4408              		.cfi_offset 5, -20
 4409              		.cfi_offset 6, -16
 4410              		.cfi_offset 7, -12
 4411              		.cfi_offset 8, -8
 4412              		.cfi_offset 14, -4
 4413 0004 82B0     		sub	sp, sp, #8
 4414              	.LCFI57:
 4415              		.cfi_def_cfa_offset 32
 4416 0006 BDF82450 		ldrh	r5, [sp, #36]
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4417              		.loc 1 2650 0
 4418 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4419 000e E4B2     		uxtb	r4, r4
 4420 0010 202C     		cmp	r4, #32
 4421 0012 61D1     		bne	.L310
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4422              		.loc 1 2652 0
 4423 0014 089C     		ldr	r4, [sp, #32]
 4424 0016 002D     		cmp	r5, #0
 4425 0018 18BF     		it	ne
 4426 001a 002C     		cmpne	r4, #0
 4427 001c 04D1     		bne	.L306
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4428              		.loc 1 2654 0
 4429 001e 4FF40073 		mov	r3, #512
 4430              	.LVL378:
 4431 0022 4364     		str	r3, [r0, #68]
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4432              		.loc 1 2655 0
 4433 0024 0124     		movs	r4, #1
 4434 0026 5CE0     		b	.L305
 4435              	.LVL379:
 4436              	.L306:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 207


2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4437              		.loc 1 2658 0
 4438 0028 0468     		ldr	r4, [r0]
 4439 002a A469     		ldr	r4, [r4, #24]
 4440 002c 14F4004F 		tst	r4, #32768
 4441 0030 54D1     		bne	.L311
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4442              		.loc 1 2664 0
 4443 0032 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4444 0036 012C     		cmp	r4, #1
 4445 0038 52D0     		beq	.L312
 4446 003a 1F46     		mov	r7, r3
 4447 003c 1446     		mov	r4, r2
 4448 003e 0E46     		mov	r6, r1
 4449 0040 8046     		mov	r8, r0
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4450              		.loc 1 2664 0 is_stmt 0 discriminator 2
 4451 0042 0123     		movs	r3, #1
 4452              	.LVL380:
 4453 0044 80F84030 		strb	r3, [r0, #64]
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4454              		.loc 1 2667 0 is_stmt 1 discriminator 2
 4455 0048 FFF7FEFF 		bl	HAL_GetTick
 4456              	.LVL381:
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4457              		.loc 1 2669 0 discriminator 2
 4458 004c 2223     		movs	r3, #34
 4459 004e 88F84130 		strb	r3, [r8, #65]
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4460              		.loc 1 2670 0 discriminator 2
 4461 0052 4023     		movs	r3, #64
 4462 0054 88F84230 		strb	r3, [r8, #66]
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4463              		.loc 1 2671 0 discriminator 2
 4464 0058 0023     		movs	r3, #0
 4465 005a C8F84430 		str	r3, [r8, #68]
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4466              		.loc 1 2674 0 discriminator 2
 4467 005e 089B     		ldr	r3, [sp, #32]
 4468 0060 C8F82430 		str	r3, [r8, #36]
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4469              		.loc 1 2675 0 discriminator 2
 4470 0064 A8F82A50 		strh	r5, [r8, #42]	@ movhi
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4471              		.loc 1 2676 0 discriminator 2
 4472 0068 204B     		ldr	r3, .L314
 4473 006a C8F82C30 		str	r3, [r8, #44]
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4474              		.loc 1 2677 0 discriminator 2
 4475 006e 204B     		ldr	r3, .L314+4
 4476 0070 C8F83430 		str	r3, [r8, #52]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4477              		.loc 1 2679 0 discriminator 2
 4478 0074 B8F82A30 		ldrh	r3, [r8, #42]
 4479 0078 9BB2     		uxth	r3, r3
 4480 007a FF2B     		cmp	r3, #255
 4481 007c 05D9     		bls	.L307
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 208


2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4482              		.loc 1 2681 0
 4483 007e FF23     		movs	r3, #255
 4484 0080 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4485              	.LVL382:
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4486              		.loc 1 2682 0
 4487 0084 4FF08075 		mov	r5, #16777216
 4488 0088 05E0     		b	.L308
 4489              	.LVL383:
 4490              	.L307:
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4491              		.loc 1 2686 0
 4492 008a B8F82A30 		ldrh	r3, [r8, #42]
 4493 008e A8F82830 		strh	r3, [r8, #40]	@ movhi
 4494              	.LVL384:
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4495              		.loc 1 2687 0
 4496 0092 4FF00075 		mov	r5, #33554432
 4497              	.LVL385:
 4498              	.L308:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4499              		.loc 1 2691 0
 4500 0096 0190     		str	r0, [sp, #4]
 4501 0098 1923     		movs	r3, #25
 4502 009a 0093     		str	r3, [sp]
 4503 009c 3B46     		mov	r3, r7
 4504 009e 2246     		mov	r2, r4
 4505 00a0 3146     		mov	r1, r6
 4506 00a2 4046     		mov	r0, r8
 4507              	.LVL386:
 4508 00a4 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4509              	.LVL387:
 4510 00a8 0446     		mov	r4, r0
 4511 00aa 20B1     		cbz	r0, .L309
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4512              		.loc 1 2694 0
 4513 00ac 0023     		movs	r3, #0
 4514 00ae 88F84030 		strb	r3, [r8, #64]
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4515              		.loc 1 2695 0
 4516 00b2 0124     		movs	r4, #1
 4517 00b4 15E0     		b	.L305
 4518              	.L309:
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4519              		.loc 1 2699 0
 4520 00b6 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4521 00ba 0E4B     		ldr	r3, .L314+8
 4522 00bc 0093     		str	r3, [sp]
 4523 00be 2B46     		mov	r3, r5
 4524 00c0 3146     		mov	r1, r6
 4525 00c2 4046     		mov	r0, r8
 4526 00c4 FFF7FEFF 		bl	I2C_TransferConfig
 4527              	.LVL388:
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4528              		.loc 1 2702 0
 4529 00c8 0023     		movs	r3, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 209


 4530 00ca 88F84030 		strb	r3, [r8, #64]
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4531              		.loc 1 2711 0
 4532 00ce 0221     		movs	r1, #2
 4533 00d0 4046     		mov	r0, r8
 4534 00d2 FFF7FEFF 		bl	I2C_Enable_IRQ
 4535              	.LVL389:
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4536              		.loc 1 2713 0
 4537 00d6 04E0     		b	.L305
 4538              	.LVL390:
 4539              	.L310:
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4540              		.loc 1 2717 0
 4541 00d8 0224     		movs	r4, #2
 4542 00da 02E0     		b	.L305
 4543              	.L311:
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4544              		.loc 1 2660 0
 4545 00dc 0224     		movs	r4, #2
 4546 00de 00E0     		b	.L305
 4547              	.L312:
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4548              		.loc 1 2664 0
 4549 00e0 0224     		movs	r4, #2
 4550              	.LVL391:
 4551              	.L305:
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** /**
 4552              		.loc 1 2719 0
 4553 00e2 2046     		mov	r0, r4
 4554 00e4 02B0     		add	sp, sp, #8
 4555              	.LCFI58:
 4556              		.cfi_def_cfa_offset 24
 4557              		@ sp needed
 4558 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4559              	.LVL392:
 4560              	.L315:
 4561 00ea 00BF     		.align	2
 4562              	.L314:
 4563 00ec 0000FFFF 		.word	-65536
 4564 00f0 00000000 		.word	I2C_Master_ISR_IT
 4565 00f4 00240080 		.word	-2147474432
 4566              		.cfi_endproc
 4567              	.LFE160:
 4569              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4570              		.align	2
 4571              		.global	HAL_I2C_Mem_Write_DMA
 4572              		.thumb
 4573              		.thumb_func
 4575              	HAL_I2C_Mem_Write_DMA:
 4576              	.LFB161:
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4577              		.loc 1 2733 0
 4578              		.cfi_startproc
 4579              		@ args = 8, pretend = 0, frame = 0
 4580              		@ frame_needed = 0, uses_anonymous_args = 0
 4581              	.LVL393:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 210


 4582 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4583              	.LCFI59:
 4584              		.cfi_def_cfa_offset 24
 4585              		.cfi_offset 4, -24
 4586              		.cfi_offset 5, -20
 4587              		.cfi_offset 6, -16
 4588              		.cfi_offset 7, -12
 4589              		.cfi_offset 8, -8
 4590              		.cfi_offset 14, -4
 4591 0004 82B0     		sub	sp, sp, #8
 4592              	.LCFI60:
 4593              		.cfi_def_cfa_offset 32
 4594 0006 BDF82450 		ldrh	r5, [sp, #36]
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4595              		.loc 1 2741 0
 4596 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4597 000e E4B2     		uxtb	r4, r4
 4598 0010 202C     		cmp	r4, #32
 4599 0012 40F0AE80 		bne	.L325
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4600              		.loc 1 2743 0
 4601 0016 089C     		ldr	r4, [sp, #32]
 4602 0018 002D     		cmp	r5, #0
 4603 001a 18BF     		it	ne
 4604 001c 002C     		cmpne	r4, #0
 4605 001e 04D1     		bne	.L318
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4606              		.loc 1 2745 0
 4607 0020 4FF40073 		mov	r3, #512
 4608              	.LVL394:
 4609 0024 4364     		str	r3, [r0, #68]
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4610              		.loc 1 2746 0
 4611 0026 0124     		movs	r4, #1
 4612 0028 A8E0     		b	.L317
 4613              	.LVL395:
 4614              	.L318:
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4615              		.loc 1 2749 0
 4616 002a 0468     		ldr	r4, [r0]
 4617 002c A469     		ldr	r4, [r4, #24]
 4618 002e 14F4004F 		tst	r4, #32768
 4619 0032 40F0A080 		bne	.L326
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4620              		.loc 1 2755 0
 4621 0036 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4622 003a 012C     		cmp	r4, #1
 4623 003c 00F09D80 		beq	.L327
 4624 0040 1F46     		mov	r7, r3
 4625 0042 1446     		mov	r4, r2
 4626 0044 0E46     		mov	r6, r1
 4627 0046 8046     		mov	r8, r0
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4628              		.loc 1 2755 0 is_stmt 0 discriminator 2
 4629 0048 0123     		movs	r3, #1
 4630              	.LVL396:
 4631 004a 80F84030 		strb	r3, [r0, #64]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 211


2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4632              		.loc 1 2758 0 is_stmt 1 discriminator 2
 4633 004e FFF7FEFF 		bl	HAL_GetTick
 4634              	.LVL397:
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4635              		.loc 1 2760 0 discriminator 2
 4636 0052 2123     		movs	r3, #33
 4637 0054 88F84130 		strb	r3, [r8, #65]
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4638              		.loc 1 2761 0 discriminator 2
 4639 0058 4023     		movs	r3, #64
 4640 005a 88F84230 		strb	r3, [r8, #66]
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4641              		.loc 1 2762 0 discriminator 2
 4642 005e 0023     		movs	r3, #0
 4643 0060 C8F84430 		str	r3, [r8, #68]
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4644              		.loc 1 2765 0 discriminator 2
 4645 0064 089B     		ldr	r3, [sp, #32]
 4646 0066 C8F82430 		str	r3, [r8, #36]
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4647              		.loc 1 2766 0 discriminator 2
 4648 006a A8F82A50 		strh	r5, [r8, #42]	@ movhi
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4649              		.loc 1 2767 0 discriminator 2
 4650 006e 454B     		ldr	r3, .L330
 4651 0070 C8F82C30 		str	r3, [r8, #44]
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4652              		.loc 1 2768 0 discriminator 2
 4653 0074 444B     		ldr	r3, .L330+4
 4654 0076 C8F83430 		str	r3, [r8, #52]
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4655              		.loc 1 2770 0 discriminator 2
 4656 007a B8F82A30 		ldrh	r3, [r8, #42]
 4657 007e 9BB2     		uxth	r3, r3
 4658 0080 FF2B     		cmp	r3, #255
 4659 0082 05D9     		bls	.L319
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4660              		.loc 1 2772 0
 4661 0084 FF23     		movs	r3, #255
 4662 0086 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4663              	.LVL398:
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4664              		.loc 1 2773 0
 4665 008a 4FF08075 		mov	r5, #16777216
 4666 008e 05E0     		b	.L320
 4667              	.LVL399:
 4668              	.L319:
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4669              		.loc 1 2777 0
 4670 0090 B8F82A30 		ldrh	r3, [r8, #42]
 4671 0094 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4672              	.LVL400:
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4673              		.loc 1 2778 0
 4674 0098 4FF00075 		mov	r5, #33554432
 4675              	.LVL401:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 212


 4676              	.L320:
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4677              		.loc 1 2782 0
 4678 009c 0190     		str	r0, [sp, #4]
 4679 009e 1923     		movs	r3, #25
 4680 00a0 0093     		str	r3, [sp]
 4681 00a2 3B46     		mov	r3, r7
 4682 00a4 2246     		mov	r2, r4
 4683 00a6 3146     		mov	r1, r6
 4684 00a8 4046     		mov	r0, r8
 4685              	.LVL402:
 4686 00aa FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4687              	.LVL403:
 4688 00ae 0446     		mov	r4, r0
 4689 00b0 20B1     		cbz	r0, .L321
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4690              		.loc 1 2785 0
 4691 00b2 0023     		movs	r3, #0
 4692 00b4 88F84030 		strb	r3, [r8, #64]
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4693              		.loc 1 2786 0
 4694 00b8 0124     		movs	r4, #1
 4695 00ba 5FE0     		b	.L317
 4696              	.L321:
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4697              		.loc 1 2790 0
 4698 00bc D8F83830 		ldr	r3, [r8, #56]
 4699 00c0 C3B1     		cbz	r3, .L322
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4700              		.loc 1 2793 0
 4701 00c2 324A     		ldr	r2, .L330+8
 4702 00c4 DA63     		str	r2, [r3, #60]
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4703              		.loc 1 2796 0
 4704 00c6 D8F83830 		ldr	r3, [r8, #56]
 4705 00ca 314A     		ldr	r2, .L330+12
 4706 00cc DA64     		str	r2, [r3, #76]
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4707              		.loc 1 2799 0
 4708 00ce D8F83820 		ldr	r2, [r8, #56]
 4709 00d2 0023     		movs	r3, #0
 4710 00d4 1364     		str	r3, [r2, #64]
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4711              		.loc 1 2800 0
 4712 00d6 D8F83820 		ldr	r2, [r8, #56]
 4713 00da 1365     		str	r3, [r2, #80]
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4714              		.loc 1 2803 0
 4715 00dc D8F80020 		ldr	r2, [r8]
 4716 00e0 B8F82830 		ldrh	r3, [r8, #40]
 4717 00e4 2832     		adds	r2, r2, #40
 4718 00e6 0899     		ldr	r1, [sp, #32]
 4719 00e8 D8F83800 		ldr	r0, [r8, #56]
 4720 00ec FFF7FEFF 		bl	HAL_DMA_Start_IT
 4721              	.LVL404:
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4722              		.loc 1 2820 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 213


 4723 00f0 78BB     		cbnz	r0, .L328
 4724 00f2 0FE0     		b	.L323
 4725              	.LVL405:
 4726              	.L322:
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4727              		.loc 1 2808 0
 4728 00f4 2023     		movs	r3, #32
 4729 00f6 88F84130 		strb	r3, [r8, #65]
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4730              		.loc 1 2809 0
 4731 00fa 0022     		movs	r2, #0
 4732 00fc 88F84220 		strb	r2, [r8, #66]
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4733              		.loc 1 2812 0
 4734 0100 D8F84430 		ldr	r3, [r8, #68]
 4735 0104 43F08003 		orr	r3, r3, #128
 4736 0108 C8F84430 		str	r3, [r8, #68]
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4737              		.loc 1 2815 0
 4738 010c 88F84020 		strb	r2, [r8, #64]
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4739              		.loc 1 2817 0
 4740 0110 0124     		movs	r4, #1
 4741 0112 33E0     		b	.L317
 4742              	.LVL406:
 4743              	.L323:
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4744              		.loc 1 2824 0
 4745 0114 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 4746 0118 0027     		movs	r7, #0
 4747 011a 0097     		str	r7, [sp]
 4748 011c 2B46     		mov	r3, r5
 4749 011e 3146     		mov	r1, r6
 4750 0120 4046     		mov	r0, r8
 4751              	.LVL407:
 4752 0122 FFF7FEFF 		bl	I2C_TransferConfig
 4753              	.LVL408:
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4754              		.loc 1 2827 0
 4755 0126 B8F82A30 		ldrh	r3, [r8, #42]
 4756 012a 9BB2     		uxth	r3, r3
 4757 012c B8F82820 		ldrh	r2, [r8, #40]
 4758 0130 9B1A     		subs	r3, r3, r2
 4759 0132 9BB2     		uxth	r3, r3
 4760 0134 A8F82A30 		strh	r3, [r8, #42]	@ movhi
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4761              		.loc 1 2830 0
 4762 0138 88F84070 		strb	r7, [r8, #64]
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4763              		.loc 1 2836 0
 4764 013c 1021     		movs	r1, #16
 4765 013e 4046     		mov	r0, r8
 4766 0140 FFF7FEFF 		bl	I2C_Enable_IRQ
 4767              	.LVL409:
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4768              		.loc 1 2839 0
 4769 0144 D8F80020 		ldr	r2, [r8]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 214


 4770 0148 1368     		ldr	r3, [r2]
 4771 014a 43F48043 		orr	r3, r3, #16384
 4772 014e 1360     		str	r3, [r2]
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4773              		.loc 1 2856 0
 4774 0150 14E0     		b	.L317
 4775              	.LVL410:
 4776              	.L328:
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4777              		.loc 1 2844 0
 4778 0152 2023     		movs	r3, #32
 4779 0154 88F84130 		strb	r3, [r8, #65]
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4780              		.loc 1 2845 0
 4781 0158 0022     		movs	r2, #0
 4782 015a 88F84220 		strb	r2, [r8, #66]
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4783              		.loc 1 2848 0
 4784 015e D8F84430 		ldr	r3, [r8, #68]
 4785 0162 43F01003 		orr	r3, r3, #16
 4786 0166 C8F84430 		str	r3, [r8, #68]
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4787              		.loc 1 2851 0
 4788 016a 88F84020 		strb	r2, [r8, #64]
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4789              		.loc 1 2853 0
 4790 016e 0124     		movs	r4, #1
 4791 0170 04E0     		b	.L317
 4792              	.LVL411:
 4793              	.L325:
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 4794              		.loc 1 2860 0
 4795 0172 0224     		movs	r4, #2
 4796 0174 02E0     		b	.L317
 4797              	.L326:
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4798              		.loc 1 2751 0
 4799 0176 0224     		movs	r4, #2
 4800 0178 00E0     		b	.L317
 4801              	.L327:
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4802              		.loc 1 2755 0
 4803 017a 0224     		movs	r4, #2
 4804              	.LVL412:
 4805              	.L317:
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4806              		.loc 1 2862 0
 4807 017c 2046     		mov	r0, r4
 4808 017e 02B0     		add	sp, sp, #8
 4809              	.LCFI61:
 4810              		.cfi_def_cfa_offset 24
 4811              		@ sp needed
 4812 0180 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4813              	.LVL413:
 4814              	.L331:
 4815              		.align	2
 4816              	.L330:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 215


 4817 0184 0000FFFF 		.word	-65536
 4818 0188 00000000 		.word	I2C_Master_ISR_DMA
 4819 018c 00000000 		.word	I2C_DMAMasterTransmitCplt
 4820 0190 00000000 		.word	I2C_DMAError
 4821              		.cfi_endproc
 4822              	.LFE161:
 4824              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4825              		.align	2
 4826              		.global	HAL_I2C_Mem_Read_DMA
 4827              		.thumb
 4828              		.thumb_func
 4830              	HAL_I2C_Mem_Read_DMA:
 4831              	.LFB162:
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 4832              		.loc 1 2877 0
 4833              		.cfi_startproc
 4834              		@ args = 8, pretend = 0, frame = 0
 4835              		@ frame_needed = 0, uses_anonymous_args = 0
 4836              	.LVL414:
 4837 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4838              	.LCFI62:
 4839              		.cfi_def_cfa_offset 24
 4840              		.cfi_offset 4, -24
 4841              		.cfi_offset 5, -20
 4842              		.cfi_offset 6, -16
 4843              		.cfi_offset 7, -12
 4844              		.cfi_offset 8, -8
 4845              		.cfi_offset 14, -4
 4846 0004 82B0     		sub	sp, sp, #8
 4847              	.LCFI63:
 4848              		.cfi_def_cfa_offset 32
 4849 0006 BDF82450 		ldrh	r5, [sp, #36]
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 4850              		.loc 1 2885 0
 4851 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4852 000e E4B2     		uxtb	r4, r4
 4853 0010 202C     		cmp	r4, #32
 4854 0012 40F0AF80 		bne	.L341
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4855              		.loc 1 2887 0
 4856 0016 089C     		ldr	r4, [sp, #32]
 4857 0018 002D     		cmp	r5, #0
 4858 001a 18BF     		it	ne
 4859 001c 002C     		cmpne	r4, #0
 4860 001e 04D1     		bne	.L334
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 4861              		.loc 1 2889 0
 4862 0020 4FF40073 		mov	r3, #512
 4863              	.LVL415:
 4864 0024 4364     		str	r3, [r0, #68]
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4865              		.loc 1 2890 0
 4866 0026 0124     		movs	r4, #1
 4867 0028 A9E0     		b	.L333
 4868              	.LVL416:
 4869              	.L334:
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 216


 4870              		.loc 1 2893 0
 4871 002a 0468     		ldr	r4, [r0]
 4872 002c A469     		ldr	r4, [r4, #24]
 4873 002e 14F4004F 		tst	r4, #32768
 4874 0032 40F0A180 		bne	.L342
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4875              		.loc 1 2899 0
 4876 0036 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4877 003a 012C     		cmp	r4, #1
 4878 003c 00F09E80 		beq	.L343
 4879 0040 1F46     		mov	r7, r3
 4880 0042 1446     		mov	r4, r2
 4881 0044 0E46     		mov	r6, r1
 4882 0046 8046     		mov	r8, r0
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4883              		.loc 1 2899 0 is_stmt 0 discriminator 2
 4884 0048 0123     		movs	r3, #1
 4885              	.LVL417:
 4886 004a 80F84030 		strb	r3, [r0, #64]
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4887              		.loc 1 2902 0 is_stmt 1 discriminator 2
 4888 004e FFF7FEFF 		bl	HAL_GetTick
 4889              	.LVL418:
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4890              		.loc 1 2904 0 discriminator 2
 4891 0052 2223     		movs	r3, #34
 4892 0054 88F84130 		strb	r3, [r8, #65]
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4893              		.loc 1 2905 0 discriminator 2
 4894 0058 4023     		movs	r3, #64
 4895 005a 88F84230 		strb	r3, [r8, #66]
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4896              		.loc 1 2906 0 discriminator 2
 4897 005e 0023     		movs	r3, #0
 4898 0060 C8F84430 		str	r3, [r8, #68]
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4899              		.loc 1 2909 0 discriminator 2
 4900 0064 089B     		ldr	r3, [sp, #32]
 4901 0066 C8F82430 		str	r3, [r8, #36]
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4902              		.loc 1 2910 0 discriminator 2
 4903 006a A8F82A50 		strh	r5, [r8, #42]	@ movhi
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4904              		.loc 1 2911 0 discriminator 2
 4905 006e 464B     		ldr	r3, .L346
 4906 0070 C8F82C30 		str	r3, [r8, #44]
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4907              		.loc 1 2912 0 discriminator 2
 4908 0074 454B     		ldr	r3, .L346+4
 4909 0076 C8F83430 		str	r3, [r8, #52]
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4910              		.loc 1 2914 0 discriminator 2
 4911 007a B8F82A30 		ldrh	r3, [r8, #42]
 4912 007e 9BB2     		uxth	r3, r3
 4913 0080 FF2B     		cmp	r3, #255
 4914 0082 05D9     		bls	.L335
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 217


 4915              		.loc 1 2916 0
 4916 0084 FF23     		movs	r3, #255
 4917 0086 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4918              	.LVL419:
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4919              		.loc 1 2917 0
 4920 008a 4FF08075 		mov	r5, #16777216
 4921 008e 05E0     		b	.L336
 4922              	.LVL420:
 4923              	.L335:
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4924              		.loc 1 2921 0
 4925 0090 B8F82A30 		ldrh	r3, [r8, #42]
 4926 0094 A8F82830 		strh	r3, [r8, #40]	@ movhi
 4927              	.LVL421:
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4928              		.loc 1 2922 0
 4929 0098 4FF00075 		mov	r5, #33554432
 4930              	.LVL422:
 4931              	.L336:
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4932              		.loc 1 2926 0
 4933 009c 0190     		str	r0, [sp, #4]
 4934 009e 1923     		movs	r3, #25
 4935 00a0 0093     		str	r3, [sp]
 4936 00a2 3B46     		mov	r3, r7
 4937 00a4 2246     		mov	r2, r4
 4938 00a6 3146     		mov	r1, r6
 4939 00a8 4046     		mov	r0, r8
 4940              	.LVL423:
 4941 00aa FFF7FEFF 		bl	I2C_RequestMemoryRead
 4942              	.LVL424:
 4943 00ae 0446     		mov	r4, r0
 4944 00b0 20B1     		cbz	r0, .L337
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return HAL_ERROR;
 4945              		.loc 1 2929 0
 4946 00b2 0023     		movs	r3, #0
 4947 00b4 88F84030 		strb	r3, [r8, #64]
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4948              		.loc 1 2930 0
 4949 00b8 0124     		movs	r4, #1
 4950 00ba 60E0     		b	.L333
 4951              	.L337:
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4952              		.loc 1 2933 0
 4953 00bc D8F83C30 		ldr	r3, [r8, #60]
 4954 00c0 C3B1     		cbz	r3, .L338
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4955              		.loc 1 2936 0
 4956 00c2 334A     		ldr	r2, .L346+8
 4957 00c4 DA63     		str	r2, [r3, #60]
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4958              		.loc 1 2939 0
 4959 00c6 D8F83C30 		ldr	r3, [r8, #60]
 4960 00ca 324A     		ldr	r2, .L346+12
 4961 00cc DA64     		str	r2, [r3, #76]
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 218


 4962              		.loc 1 2942 0
 4963 00ce D8F83C20 		ldr	r2, [r8, #60]
 4964 00d2 0023     		movs	r3, #0
 4965 00d4 1364     		str	r3, [r2, #64]
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4966              		.loc 1 2943 0
 4967 00d6 D8F83C20 		ldr	r2, [r8, #60]
 4968 00da 1365     		str	r3, [r2, #80]
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4969              		.loc 1 2946 0
 4970 00dc D8F80010 		ldr	r1, [r8]
 4971 00e0 B8F82830 		ldrh	r3, [r8, #40]
 4972 00e4 089A     		ldr	r2, [sp, #32]
 4973 00e6 2431     		adds	r1, r1, #36
 4974 00e8 D8F83C00 		ldr	r0, [r8, #60]
 4975 00ec FFF7FEFF 		bl	HAL_DMA_Start_IT
 4976              	.LVL425:
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 4977              		.loc 1 2963 0
 4978 00f0 80BB     		cbnz	r0, .L344
 4979 00f2 0FE0     		b	.L339
 4980              	.LVL426:
 4981              	.L338:
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4982              		.loc 1 2951 0
 4983 00f4 2023     		movs	r3, #32
 4984 00f6 88F84130 		strb	r3, [r8, #65]
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4985              		.loc 1 2952 0
 4986 00fa 0022     		movs	r2, #0
 4987 00fc 88F84220 		strb	r2, [r8, #66]
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4988              		.loc 1 2955 0
 4989 0100 D8F84430 		ldr	r3, [r8, #68]
 4990 0104 43F08003 		orr	r3, r3, #128
 4991 0108 C8F84430 		str	r3, [r8, #68]
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4992              		.loc 1 2958 0
 4993 010c 88F84020 		strb	r2, [r8, #64]
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 4994              		.loc 1 2960 0
 4995 0110 0124     		movs	r4, #1
 4996 0112 34E0     		b	.L333
 4997              	.LVL427:
 4998              	.L339:
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 4999              		.loc 1 2966 0
 5000 0114 98F82820 		ldrb	r2, [r8, #40]	@ zero_extendqisi2
 5001 0118 1F4B     		ldr	r3, .L346+16
 5002 011a 0093     		str	r3, [sp]
 5003 011c 2B46     		mov	r3, r5
 5004 011e 3146     		mov	r1, r6
 5005 0120 4046     		mov	r0, r8
 5006              	.LVL428:
 5007 0122 FFF7FEFF 		bl	I2C_TransferConfig
 5008              	.LVL429:
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 219


 5009              		.loc 1 2969 0
 5010 0126 B8F82A30 		ldrh	r3, [r8, #42]
 5011 012a 9BB2     		uxth	r3, r3
 5012 012c B8F82820 		ldrh	r2, [r8, #40]
 5013 0130 9B1A     		subs	r3, r3, r2
 5014 0132 9BB2     		uxth	r3, r3
 5015 0134 A8F82A30 		strh	r3, [r8, #42]	@ movhi
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5016              		.loc 1 2972 0
 5017 0138 0023     		movs	r3, #0
 5018 013a 88F84030 		strb	r3, [r8, #64]
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5019              		.loc 1 2978 0
 5020 013e 1021     		movs	r1, #16
 5021 0140 4046     		mov	r0, r8
 5022 0142 FFF7FEFF 		bl	I2C_Enable_IRQ
 5023              	.LVL430:
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5024              		.loc 1 2981 0
 5025 0146 D8F80020 		ldr	r2, [r8]
 5026 014a 1368     		ldr	r3, [r2]
 5027 014c 43F40043 		orr	r3, r3, #32768
 5028 0150 1360     		str	r3, [r2]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5029              		.loc 1 2998 0
 5030 0152 14E0     		b	.L333
 5031              	.LVL431:
 5032              	.L344:
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5033              		.loc 1 2986 0
 5034 0154 2023     		movs	r3, #32
 5035 0156 88F84130 		strb	r3, [r8, #65]
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5036              		.loc 1 2987 0
 5037 015a 0022     		movs	r2, #0
 5038 015c 88F84220 		strb	r2, [r8, #66]
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5039              		.loc 1 2990 0
 5040 0160 D8F84430 		ldr	r3, [r8, #68]
 5041 0164 43F01003 		orr	r3, r3, #16
 5042 0168 C8F84430 		str	r3, [r8, #68]
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5043              		.loc 1 2993 0
 5044 016c 88F84020 		strb	r2, [r8, #64]
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5045              		.loc 1 2995 0
 5046 0170 0124     		movs	r4, #1
 5047 0172 04E0     		b	.L333
 5048              	.LVL432:
 5049              	.L341:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5050              		.loc 1 3002 0
 5051 0174 0224     		movs	r4, #2
 5052 0176 02E0     		b	.L333
 5053              	.L342:
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5054              		.loc 1 2895 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 220


 5055 0178 0224     		movs	r4, #2
 5056 017a 00E0     		b	.L333
 5057              	.L343:
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5058              		.loc 1 2899 0
 5059 017c 0224     		movs	r4, #2
 5060              	.LVL433:
 5061              	.L333:
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5062              		.loc 1 3004 0
 5063 017e 2046     		mov	r0, r4
 5064 0180 02B0     		add	sp, sp, #8
 5065              	.LCFI64:
 5066              		.cfi_def_cfa_offset 24
 5067              		@ sp needed
 5068 0182 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5069              	.LVL434:
 5070              	.L347:
 5071 0186 00BF     		.align	2
 5072              	.L346:
 5073 0188 0000FFFF 		.word	-65536
 5074 018c 00000000 		.word	I2C_Master_ISR_DMA
 5075 0190 00000000 		.word	I2C_DMAMasterReceiveCplt
 5076 0194 00000000 		.word	I2C_DMAError
 5077 0198 00240080 		.word	-2147474432
 5078              		.cfi_endproc
 5079              	.LFE162:
 5081              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5082              		.align	2
 5083              		.global	HAL_I2C_IsDeviceReady
 5084              		.thumb
 5085              		.thumb_func
 5087              	HAL_I2C_IsDeviceReady:
 5088              	.LFB163:
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tickstart;
 5089              		.loc 1 3018 0
 5090              		.cfi_startproc
 5091              		@ args = 0, pretend = 0, frame = 8
 5092              		@ frame_needed = 0, uses_anonymous_args = 0
 5093              	.LVL435:
 5094 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5095              	.LCFI65:
 5096              		.cfi_def_cfa_offset 28
 5097              		.cfi_offset 4, -28
 5098              		.cfi_offset 5, -24
 5099              		.cfi_offset 6, -20
 5100              		.cfi_offset 7, -16
 5101              		.cfi_offset 8, -12
 5102              		.cfi_offset 9, -8
 5103              		.cfi_offset 14, -4
 5104 0004 85B0     		sub	sp, sp, #20
 5105              	.LCFI66:
 5106              		.cfi_def_cfa_offset 48
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5107              		.loc 1 3021 0
 5108 0006 0024     		movs	r4, #0
 5109 0008 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 221


3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5110              		.loc 1 3026 0
 5111 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5112 000e E4B2     		uxtb	r4, r4
 5113 0010 202C     		cmp	r4, #32
 5114 0012 40F0A280 		bne	.L359
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5115              		.loc 1 3028 0
 5116 0016 0468     		ldr	r4, [r0]
 5117 0018 A469     		ldr	r4, [r4, #24]
 5118 001a 14F4004F 		tst	r4, #32768
 5119 001e 40F09E80 		bne	.L360
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5120              		.loc 1 3034 0
 5121 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5122 0026 012C     		cmp	r4, #1
 5123 0028 00F09B80 		beq	.L361
 5124 002c 1E46     		mov	r6, r3
 5125 002e 9046     		mov	r8, r2
 5126 0030 0F46     		mov	r7, r1
 5127 0032 0546     		mov	r5, r0
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5128              		.loc 1 3034 0 is_stmt 0 discriminator 2
 5129 0034 0123     		movs	r3, #1
 5130              	.LVL436:
 5131 0036 80F84030 		strb	r3, [r0, #64]
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5132              		.loc 1 3036 0 is_stmt 1 discriminator 2
 5133 003a 2423     		movs	r3, #36
 5134 003c 80F84130 		strb	r3, [r0, #65]
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5135              		.loc 1 3037 0 discriminator 2
 5136 0040 0023     		movs	r3, #0
 5137 0042 4364     		str	r3, [r0, #68]
 5138              	.LVL437:
 5139              	.L358:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5140              		.loc 1 3042 0
 5141 0044 2A68     		ldr	r2, [r5]
 5142 0046 EB68     		ldr	r3, [r5, #12]
 5143 0048 012B     		cmp	r3, #1
 5144 004a 04D1     		bne	.L350
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5145              		.loc 1 3042 0 is_stmt 0 discriminator 1
 5146 004c C7F30901 		ubfx	r1, r7, #0, #10
 5147 0050 494B     		ldr	r3, .L366
 5148 0052 0B43     		orrs	r3, r3, r1
 5149 0054 03E0     		b	.L351
 5150              	.L350:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5151              		.loc 1 3042 0 discriminator 2
 5152 0056 C7F30903 		ubfx	r3, r7, #0, #10
 5153 005a 43F42053 		orr	r3, r3, #10240
 5154              	.L351:
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5155              		.loc 1 3042 0 discriminator 4
 5156 005e 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 222


3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5157              		.loc 1 3046 0 is_stmt 1 discriminator 4
 5158 0060 FFF7FEFF 		bl	HAL_GetTick
 5159              	.LVL438:
 5160 0064 8146     		mov	r9, r0
 5161              	.LVL439:
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5162              		.loc 1 3048 0 discriminator 4
 5163 0066 2A68     		ldr	r2, [r5]
 5164 0068 9369     		ldr	r3, [r2, #24]
 5165 006a C3F34013 		ubfx	r3, r3, #5, #1
 5166              	.LVL440:
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5167              		.loc 1 3049 0 discriminator 4
 5168 006e 9469     		ldr	r4, [r2, #24]
 5169 0070 C4F30014 		ubfx	r4, r4, #4, #1
 5170              	.LVL441:
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5171              		.loc 1 3051 0 discriminator 4
 5172 0074 1CE0     		b	.L352
 5173              	.LVL442:
 5174              	.L355:
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5175              		.loc 1 3053 0
 5176 0076 B6F1FF3F 		cmp	r6, #-1
 5177 007a 12D0     		beq	.L353
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 5178              		.loc 1 3055 0
 5179 007c FFF7FEFF 		bl	HAL_GetTick
 5180              	.LVL443:
 5181 0080 C9EB0000 		rsb	r0, r9, r0
 5182 0084 8642     		cmp	r6, r0
 5183 0086 00D3     		bcc	.L354
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 5184              		.loc 1 3055 0 is_stmt 0 discriminator 1
 5185 0088 5EB9     		cbnz	r6, .L353
 5186              	.L354:
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5187              		.loc 1 3058 0 is_stmt 1
 5188 008a 2023     		movs	r3, #32
 5189 008c 85F84130 		strb	r3, [r5, #65]
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5190              		.loc 1 3061 0
 5191 0090 6B6C     		ldr	r3, [r5, #68]
 5192 0092 43F02003 		orr	r3, r3, #32
 5193 0096 6B64     		str	r3, [r5, #68]
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5194              		.loc 1 3064 0
 5195 0098 0023     		movs	r3, #0
 5196 009a 85F84030 		strb	r3, [r5, #64]
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 5197              		.loc 1 3066 0
 5198 009e 0123     		movs	r3, #1
 5199 00a0 66E0     		b	.L349
 5200              	.L353:
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5201              		.loc 1 3070 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 223


 5202 00a2 2A68     		ldr	r2, [r5]
 5203 00a4 9369     		ldr	r3, [r2, #24]
 5204 00a6 C3F34013 		ubfx	r3, r3, #5, #1
 5205              	.LVL444:
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5206              		.loc 1 3071 0
 5207 00aa 9469     		ldr	r4, [r2, #24]
 5208 00ac C4F30014 		ubfx	r4, r4, #4, #1
 5209              	.LVL445:
 5210              	.L352:
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5211              		.loc 1 3051 0
 5212 00b0 83F00103 		eor	r3, r3, #1
 5213              	.LVL446:
 5214 00b4 84F00104 		eor	r4, r4, #1
 5215              	.LVL447:
 5216 00b8 2342     		tst	r3, r4
 5217 00ba DCD1     		bne	.L355
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5218              		.loc 1 3075 0
 5219 00bc 2B68     		ldr	r3, [r5]
 5220 00be 9B69     		ldr	r3, [r3, #24]
 5221 00c0 13F0100F 		tst	r3, #16
 5222 00c4 13D1     		bne	.L356
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5223              		.loc 1 3078 0
 5224 00c6 CDF80090 		str	r9, [sp]
 5225 00ca 3346     		mov	r3, r6
 5226 00cc 0022     		movs	r2, #0
 5227 00ce 2021     		movs	r1, #32
 5228 00d0 2846     		mov	r0, r5
 5229 00d2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5230              	.LVL448:
 5231 00d6 0346     		mov	r3, r0
 5232 00d8 0028     		cmp	r0, #0
 5233 00da 44D1     		bne	.L362
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5234              		.loc 1 3084 0
 5235 00dc 2968     		ldr	r1, [r5]
 5236 00de 2022     		movs	r2, #32
 5237 00e0 CA61     		str	r2, [r1, #28]
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5238              		.loc 1 3087 0
 5239 00e2 85F84120 		strb	r2, [r5, #65]
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5240              		.loc 1 3090 0
 5241 00e6 0022     		movs	r2, #0
 5242 00e8 85F84020 		strb	r2, [r5, #64]
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5243              		.loc 1 3092 0
 5244 00ec 40E0     		b	.L349
 5245              	.L356:
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5246              		.loc 1 3097 0
 5247 00ee CDF80090 		str	r9, [sp]
 5248 00f2 3346     		mov	r3, r6
 5249 00f4 0022     		movs	r2, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 224


 5250 00f6 2021     		movs	r1, #32
 5251 00f8 2846     		mov	r0, r5
 5252 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5253              	.LVL449:
 5254 00fe 0028     		cmp	r0, #0
 5255 0100 33D1     		bne	.L363
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5256              		.loc 1 3103 0
 5257 0102 2B68     		ldr	r3, [r5]
 5258 0104 1022     		movs	r2, #16
 5259 0106 DA61     		str	r2, [r3, #28]
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5260              		.loc 1 3106 0
 5261 0108 2B68     		ldr	r3, [r5]
 5262 010a 2022     		movs	r2, #32
 5263 010c DA61     		str	r2, [r3, #28]
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5264              		.loc 1 3110 0
 5265 010e 039B     		ldr	r3, [sp, #12]
 5266 0110 4345     		cmp	r3, r8
 5267 0112 10D1     		bne	.L357
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5268              		.loc 1 3113 0
 5269 0114 2A68     		ldr	r2, [r5]
 5270 0116 5368     		ldr	r3, [r2, #4]
 5271 0118 43F48043 		orr	r3, r3, #16384
 5272 011c 5360     		str	r3, [r2, #4]
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 5273              		.loc 1 3116 0
 5274 011e CDF80090 		str	r9, [sp]
 5275 0122 3346     		mov	r3, r6
 5276 0124 0022     		movs	r2, #0
 5277 0126 2021     		movs	r1, #32
 5278 0128 2846     		mov	r0, r5
 5279 012a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5280              	.LVL450:
 5281 012e F0B9     		cbnz	r0, .L364
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5282              		.loc 1 3122 0
 5283 0130 2B68     		ldr	r3, [r5]
 5284 0132 2022     		movs	r2, #32
 5285 0134 DA61     		str	r2, [r3, #28]
 5286              	.L357:
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5287              		.loc 1 3126 0
 5288 0136 039B     		ldr	r3, [sp, #12]
 5289 0138 0133     		adds	r3, r3, #1
 5290 013a 0393     		str	r3, [sp, #12]
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5291              		.loc 1 3128 0
 5292 013c 039B     		ldr	r3, [sp, #12]
 5293 013e 9845     		cmp	r8, r3
 5294 0140 80D8     		bhi	.L358
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5295              		.loc 1 3131 0
 5296 0142 2023     		movs	r3, #32
 5297 0144 85F84130 		strb	r3, [r5, #65]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 225


3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5298              		.loc 1 3134 0
 5299 0148 6B6C     		ldr	r3, [r5, #68]
 5300 014a 43F02003 		orr	r3, r3, #32
 5301 014e 6B64     		str	r3, [r5, #68]
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5302              		.loc 1 3137 0
 5303 0150 0023     		movs	r3, #0
 5304 0152 85F84030 		strb	r3, [r5, #64]
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5305              		.loc 1 3139 0
 5306 0156 0123     		movs	r3, #1
 5307 0158 0AE0     		b	.L349
 5308              	.LVL451:
 5309              	.L359:
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5310              		.loc 1 3143 0
 5311 015a 0223     		movs	r3, #2
 5312              	.LVL452:
 5313 015c 08E0     		b	.L349
 5314              	.LVL453:
 5315              	.L360:
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5316              		.loc 1 3030 0
 5317 015e 0223     		movs	r3, #2
 5318              	.LVL454:
 5319 0160 06E0     		b	.L349
 5320              	.LVL455:
 5321              	.L361:
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5322              		.loc 1 3034 0
 5323 0162 0223     		movs	r3, #2
 5324              	.LVL456:
 5325 0164 04E0     		b	.L349
 5326              	.LVL457:
 5327              	.L362:
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5328              		.loc 1 3080 0
 5329 0166 0123     		movs	r3, #1
 5330 0168 02E0     		b	.L349
 5331              	.L363:
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5332              		.loc 1 3099 0
 5333 016a 0123     		movs	r3, #1
 5334 016c 00E0     		b	.L349
 5335              	.L364:
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 5336              		.loc 1 3118 0
 5337 016e 0123     		movs	r3, #1
 5338              	.LVL458:
 5339              	.L349:
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5340              		.loc 1 3145 0
 5341 0170 1846     		mov	r0, r3
 5342 0172 05B0     		add	sp, sp, #20
 5343              	.LCFI67:
 5344              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 226


 5345              		@ sp needed
 5346 0174 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5347              	.L367:
 5348              		.align	2
 5349              	.L366:
 5350 0178 00200002 		.word	33562624
 5351              		.cfi_endproc
 5352              	.LFE163:
 5354              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5355              		.align	2
 5356              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5357              		.thumb
 5358              		.thumb_func
 5360              	HAL_I2C_Master_Seq_Transmit_IT:
 5361              	.LFB164:
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5362              		.loc 1 3160 0
 5363              		.cfi_startproc
 5364              		@ args = 4, pretend = 0, frame = 0
 5365              		@ frame_needed = 0, uses_anonymous_args = 0
 5366              	.LVL459:
 5367 0000 70B5     		push	{r4, r5, r6, lr}
 5368              	.LCFI68:
 5369              		.cfi_def_cfa_offset 16
 5370              		.cfi_offset 4, -16
 5371              		.cfi_offset 5, -12
 5372              		.cfi_offset 6, -8
 5373              		.cfi_offset 14, -4
 5374 0002 82B0     		sub	sp, sp, #8
 5375              	.LCFI69:
 5376              		.cfi_def_cfa_offset 24
 5377              	.LVL460:
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5378              		.loc 1 3167 0
 5379 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5380 0008 E4B2     		uxtb	r4, r4
 5381 000a 202C     		cmp	r4, #32
 5382 000c 49D1     		bne	.L374
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5383              		.loc 1 3170 0
 5384 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5385 0012 012C     		cmp	r4, #1
 5386 0014 47D0     		beq	.L375
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5387              		.loc 1 3170 0 is_stmt 0 discriminator 2
 5388 0016 0124     		movs	r4, #1
 5389 0018 80F84040 		strb	r4, [r0, #64]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5390              		.loc 1 3172 0 is_stmt 1 discriminator 2
 5391 001c 2124     		movs	r4, #33
 5392 001e 80F84140 		strb	r4, [r0, #65]
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5393              		.loc 1 3173 0 discriminator 2
 5394 0022 1024     		movs	r4, #16
 5395 0024 80F84240 		strb	r4, [r0, #66]
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5396              		.loc 1 3174 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 227


 5397 0028 0024     		movs	r4, #0
 5398 002a 4464     		str	r4, [r0, #68]
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5399              		.loc 1 3177 0 discriminator 2
 5400 002c 4262     		str	r2, [r0, #36]
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5401              		.loc 1 3178 0 discriminator 2
 5402 002e 4385     		strh	r3, [r0, #42]	@ movhi
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5403              		.loc 1 3179 0 discriminator 2
 5404 0030 069B     		ldr	r3, [sp, #24]
 5405              	.LVL461:
 5406 0032 C362     		str	r3, [r0, #44]
 5407              	.LVL462:
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5408              		.loc 1 3180 0 discriminator 2
 5409 0034 1D4B     		ldr	r3, .L379
 5410 0036 4363     		str	r3, [r0, #52]
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5411              		.loc 1 3183 0 discriminator 2
 5412 0038 438D     		ldrh	r3, [r0, #42]
 5413 003a 9BB2     		uxth	r3, r3
 5414 003c FF2B     		cmp	r3, #255
 5415 003e 04D9     		bls	.L370
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5416              		.loc 1 3185 0
 5417 0040 FF23     		movs	r3, #255
 5418 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5419              	.LVL463:
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5420              		.loc 1 3186 0
 5421 0044 4FF08076 		mov	r6, #16777216
 5422 0048 02E0     		b	.L371
 5423              	.LVL464:
 5424              	.L370:
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5425              		.loc 1 3190 0
 5426 004a 438D     		ldrh	r3, [r0, #42]
 5427 004c 0385     		strh	r3, [r0, #40]	@ movhi
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5428              		.loc 1 3191 0
 5429 004e C66A     		ldr	r6, [r0, #44]
 5430              	.LVL465:
 5431              	.L371:
 5432 0050 0D46     		mov	r5, r1
 5433 0052 0446     		mov	r4, r0
 5434              	.LVL466:
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5435              		.loc 1 3196 0
 5436 0054 036B     		ldr	r3, [r0, #48]
 5437 0056 112B     		cmp	r3, #17
 5438 0058 05D1     		bne	.L372
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5439              		.loc 1 3196 0 is_stmt 0 discriminator 1
 5440 005a 069B     		ldr	r3, [sp, #24]
 5441 005c B3F52A4F 		cmp	r3, #43520
 5442 0060 18BF     		it	ne
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 228


 5443 0062 AA2B     		cmpne	r3, #170
 5444 0064 09D1     		bne	.L376
 5445              	.L372:
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5446              		.loc 1 3203 0 is_stmt 1
 5447 0066 2046     		mov	r0, r4
 5448              	.LVL467:
 5449 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5450              	.LVL468:
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5451              		.loc 1 3206 0
 5452 006c 638D     		ldrh	r3, [r4, #42]
 5453 006e 9BB2     		uxth	r3, r3
 5454 0070 FF2B     		cmp	r3, #255
 5455 0072 04D8     		bhi	.L377
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5456              		.loc 1 3208 0
 5457 0074 E66A     		ldr	r6, [r4, #44]
 5458              	.LVL469:
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5459              		.loc 1 3162 0
 5460 0076 0E4B     		ldr	r3, .L379+4
 5461 0078 02E0     		b	.L373
 5462              	.LVL470:
 5463              	.L376:
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5464              		.loc 1 3198 0
 5465 007a 0023     		movs	r3, #0
 5466 007c 00E0     		b	.L373
 5467              	.LVL471:
 5468              	.L377:
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5469              		.loc 1 3162 0
 5470 007e 0C4B     		ldr	r3, .L379+4
 5471              	.L373:
 5472              	.LVL472:
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5473              		.loc 1 3213 0
 5474 0080 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5475 0084 0093     		str	r3, [sp]
 5476 0086 3346     		mov	r3, r6
 5477              	.LVL473:
 5478 0088 2946     		mov	r1, r5
 5479 008a 2046     		mov	r0, r4
 5480 008c FFF7FEFF 		bl	I2C_TransferConfig
 5481              	.LVL474:
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5482              		.loc 1 3216 0
 5483 0090 0025     		movs	r5, #0
 5484 0092 84F84050 		strb	r5, [r4, #64]
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5485              		.loc 1 3221 0
 5486 0096 0121     		movs	r1, #1
 5487 0098 2046     		mov	r0, r4
 5488 009a FFF7FEFF 		bl	I2C_Enable_IRQ
 5489              	.LVL475:
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 229


 5490              		.loc 1 3223 0
 5491 009e 2846     		mov	r0, r5
 5492 00a0 02E0     		b	.L369
 5493              	.LVL476:
 5494              	.L374:
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5495              		.loc 1 3227 0
 5496 00a2 0220     		movs	r0, #2
 5497              	.LVL477:
 5498 00a4 00E0     		b	.L369
 5499              	.LVL478:
 5500              	.L375:
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5501              		.loc 1 3170 0
 5502 00a6 0220     		movs	r0, #2
 5503              	.LVL479:
 5504              	.L369:
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5505              		.loc 1 3229 0
 5506 00a8 02B0     		add	sp, sp, #8
 5507              	.LCFI70:
 5508              		.cfi_def_cfa_offset 16
 5509              		@ sp needed
 5510 00aa 70BD     		pop	{r4, r5, r6, pc}
 5511              	.LVL480:
 5512              	.L380:
 5513              		.align	2
 5514              	.L379:
 5515 00ac 00000000 		.word	I2C_Master_ISR_IT
 5516 00b0 00200080 		.word	-2147475456
 5517              		.cfi_endproc
 5518              	.LFE164:
 5520              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5521              		.align	2
 5522              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5523              		.thumb
 5524              		.thumb_func
 5526              	HAL_I2C_Master_Seq_Transmit_DMA:
 5527              	.LFB165:
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5528              		.loc 1 3244 0
 5529              		.cfi_startproc
 5530              		@ args = 4, pretend = 0, frame = 0
 5531              		@ frame_needed = 0, uses_anonymous_args = 0
 5532              	.LVL481:
 5533 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5534              	.LCFI71:
 5535              		.cfi_def_cfa_offset 24
 5536              		.cfi_offset 4, -24
 5537              		.cfi_offset 5, -20
 5538              		.cfi_offset 6, -16
 5539              		.cfi_offset 7, -12
 5540              		.cfi_offset 8, -8
 5541              		.cfi_offset 14, -4
 5542 0004 82B0     		sub	sp, sp, #8
 5543              	.LCFI72:
 5544              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 230


 5545              	.LVL482:
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5546              		.loc 1 3252 0
 5547 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5548 000a E4B2     		uxtb	r4, r4
 5549 000c 202C     		cmp	r4, #32
 5550 000e 40F09F80 		bne	.L391
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5551              		.loc 1 3255 0
 5552 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5553 0016 012C     		cmp	r4, #1
 5554 0018 00F09C80 		beq	.L392
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5555              		.loc 1 3255 0 is_stmt 0 discriminator 2
 5556 001c 0124     		movs	r4, #1
 5557 001e 80F84040 		strb	r4, [r0, #64]
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5558              		.loc 1 3257 0 is_stmt 1 discriminator 2
 5559 0022 2124     		movs	r4, #33
 5560 0024 80F84140 		strb	r4, [r0, #65]
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5561              		.loc 1 3258 0 discriminator 2
 5562 0028 1024     		movs	r4, #16
 5563 002a 80F84240 		strb	r4, [r0, #66]
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5564              		.loc 1 3259 0 discriminator 2
 5565 002e 0024     		movs	r4, #0
 5566 0030 4464     		str	r4, [r0, #68]
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5567              		.loc 1 3262 0 discriminator 2
 5568 0032 4262     		str	r2, [r0, #36]
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5569              		.loc 1 3263 0 discriminator 2
 5570 0034 4385     		strh	r3, [r0, #42]	@ movhi
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5571              		.loc 1 3264 0 discriminator 2
 5572 0036 089B     		ldr	r3, [sp, #32]
 5573              	.LVL483:
 5574 0038 C362     		str	r3, [r0, #44]
 5575              	.LVL484:
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5576              		.loc 1 3265 0 discriminator 2
 5577 003a 484B     		ldr	r3, .L397
 5578 003c 4363     		str	r3, [r0, #52]
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5579              		.loc 1 3268 0 discriminator 2
 5580 003e 438D     		ldrh	r3, [r0, #42]
 5581 0040 9BB2     		uxth	r3, r3
 5582 0042 FF2B     		cmp	r3, #255
 5583 0044 04D9     		bls	.L383
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5584              		.loc 1 3270 0
 5585 0046 FF23     		movs	r3, #255
 5586 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5587              	.LVL485:
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5588              		.loc 1 3271 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 231


 5589 004a 4FF08077 		mov	r7, #16777216
 5590 004e 02E0     		b	.L384
 5591              	.LVL486:
 5592              	.L383:
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5593              		.loc 1 3275 0
 5594 0050 438D     		ldrh	r3, [r0, #42]
 5595 0052 0385     		strh	r3, [r0, #40]	@ movhi
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5596              		.loc 1 3276 0
 5597 0054 C76A     		ldr	r7, [r0, #44]
 5598              	.LVL487:
 5599              	.L384:
 5600 0056 1446     		mov	r4, r2
 5601 0058 8846     		mov	r8, r1
 5602 005a 0546     		mov	r5, r0
 5603              	.LVL488:
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5604              		.loc 1 3281 0
 5605 005c 036B     		ldr	r3, [r0, #48]
 5606 005e 112B     		cmp	r3, #17
 5607 0060 05D1     		bne	.L385
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5608              		.loc 1 3281 0 is_stmt 0 discriminator 1
 5609 0062 089B     		ldr	r3, [sp, #32]
 5610 0064 B3F52A4F 		cmp	r3, #43520
 5611 0068 18BF     		it	ne
 5612 006a AA2B     		cmpne	r3, #170
 5613 006c 09D1     		bne	.L393
 5614              	.L385:
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5615              		.loc 1 3288 0 is_stmt 1
 5616 006e 2846     		mov	r0, r5
 5617              	.LVL489:
 5618 0070 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5619              	.LVL490:
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5620              		.loc 1 3291 0
 5621 0074 6B8D     		ldrh	r3, [r5, #42]
 5622 0076 9BB2     		uxth	r3, r3
 5623 0078 FF2B     		cmp	r3, #255
 5624 007a 04D8     		bhi	.L394
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5625              		.loc 1 3293 0
 5626 007c EF6A     		ldr	r7, [r5, #44]
 5627              	.LVL491:
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5628              		.loc 1 3246 0
 5629 007e 384E     		ldr	r6, .L397+4
 5630 0080 02E0     		b	.L386
 5631              	.LVL492:
 5632              	.L393:
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5633              		.loc 1 3283 0
 5634 0082 0026     		movs	r6, #0
 5635 0084 00E0     		b	.L386
 5636              	.LVL493:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 232


 5637              	.L394:
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5638              		.loc 1 3246 0
 5639 0086 364E     		ldr	r6, .L397+4
 5640              	.L386:
 5641              	.LVL494:
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5642              		.loc 1 3297 0
 5643 0088 2A8D     		ldrh	r2, [r5, #40]
 5644 008a 002A     		cmp	r2, #0
 5645 008c 4CD0     		beq	.L387
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5646              		.loc 1 3299 0
 5647 008e AB6B     		ldr	r3, [r5, #56]
 5648 0090 93B1     		cbz	r3, .L388
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5649              		.loc 1 3302 0
 5650 0092 344A     		ldr	r2, .L397+8
 5651 0094 DA63     		str	r2, [r3, #60]
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5652              		.loc 1 3305 0
 5653 0096 AB6B     		ldr	r3, [r5, #56]
 5654 0098 334A     		ldr	r2, .L397+12
 5655 009a DA64     		str	r2, [r3, #76]
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5656              		.loc 1 3308 0
 5657 009c AA6B     		ldr	r2, [r5, #56]
 5658 009e 0023     		movs	r3, #0
 5659 00a0 1364     		str	r3, [r2, #64]
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5660              		.loc 1 3309 0
 5661 00a2 AA6B     		ldr	r2, [r5, #56]
 5662 00a4 1365     		str	r3, [r2, #80]
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5663              		.loc 1 3312 0
 5664 00a6 2A68     		ldr	r2, [r5]
 5665 00a8 2B8D     		ldrh	r3, [r5, #40]
 5666 00aa 2832     		adds	r2, r2, #40
 5667 00ac 2146     		mov	r1, r4
 5668 00ae A86B     		ldr	r0, [r5, #56]
 5669 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5670              	.LVL495:
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5671              		.loc 1 3329 0
 5672 00b4 50BB     		cbnz	r0, .L395
 5673 00b6 0DE0     		b	.L389
 5674              	.LVL496:
 5675              	.L388:
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5676              		.loc 1 3317 0
 5677 00b8 2023     		movs	r3, #32
 5678 00ba 85F84130 		strb	r3, [r5, #65]
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5679              		.loc 1 3318 0
 5680 00be 0022     		movs	r2, #0
 5681 00c0 85F84220 		strb	r2, [r5, #66]
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 233


 5682              		.loc 1 3321 0
 5683 00c4 6B6C     		ldr	r3, [r5, #68]
 5684 00c6 43F08003 		orr	r3, r3, #128
 5685 00ca 6B64     		str	r3, [r5, #68]
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5686              		.loc 1 3324 0
 5687 00cc 85F84020 		strb	r2, [r5, #64]
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5688              		.loc 1 3326 0
 5689 00d0 0120     		movs	r0, #1
 5690 00d2 40E0     		b	.L382
 5691              	.LVL497:
 5692              	.L389:
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5693              		.loc 1 3332 0
 5694 00d4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 5695 00d8 0096     		str	r6, [sp]
 5696 00da 3B46     		mov	r3, r7
 5697 00dc 4146     		mov	r1, r8
 5698 00de 2846     		mov	r0, r5
 5699              	.LVL498:
 5700 00e0 FFF7FEFF 		bl	I2C_TransferConfig
 5701              	.LVL499:
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5702              		.loc 1 3335 0
 5703 00e4 6B8D     		ldrh	r3, [r5, #42]
 5704 00e6 9BB2     		uxth	r3, r3
 5705 00e8 2A8D     		ldrh	r2, [r5, #40]
 5706 00ea 9B1A     		subs	r3, r3, r2
 5707 00ec 9BB2     		uxth	r3, r3
 5708 00ee 6B85     		strh	r3, [r5, #42]	@ movhi
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5709              		.loc 1 3338 0
 5710 00f0 0024     		movs	r4, #0
 5711              	.LVL500:
 5712 00f2 85F84040 		strb	r4, [r5, #64]
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5713              		.loc 1 3344 0
 5714 00f6 1021     		movs	r1, #16
 5715 00f8 2846     		mov	r0, r5
 5716 00fa FFF7FEFF 		bl	I2C_Enable_IRQ
 5717              	.LVL501:
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5718              		.loc 1 3347 0
 5719 00fe 2A68     		ldr	r2, [r5]
 5720 0100 1368     		ldr	r3, [r2]
 5721 0102 43F48043 		orr	r3, r3, #16384
 5722 0106 1360     		str	r3, [r2]
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5723              		.loc 1 3385 0
 5724 0108 2046     		mov	r0, r4
 5725 010a 24E0     		b	.L382
 5726              	.LVL502:
 5727              	.L395:
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5728              		.loc 1 3352 0
 5729 010c 2023     		movs	r3, #32
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 234


 5730 010e 85F84130 		strb	r3, [r5, #65]
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5731              		.loc 1 3353 0
 5732 0112 0022     		movs	r2, #0
 5733 0114 85F84220 		strb	r2, [r5, #66]
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5734              		.loc 1 3356 0
 5735 0118 6B6C     		ldr	r3, [r5, #68]
 5736 011a 43F01003 		orr	r3, r3, #16
 5737 011e 6B64     		str	r3, [r5, #68]
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5738              		.loc 1 3359 0
 5739 0120 85F84020 		strb	r2, [r5, #64]
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5740              		.loc 1 3361 0
 5741 0124 0120     		movs	r0, #1
 5742              	.LVL503:
 5743 0126 16E0     		b	.L382
 5744              	.L387:
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5745              		.loc 1 3367 0
 5746 0128 104B     		ldr	r3, .L397+16
 5747 012a 6B63     		str	r3, [r5, #52]
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5748              		.loc 1 3371 0
 5749 012c 0C4B     		ldr	r3, .L397+4
 5750 012e 0093     		str	r3, [sp]
 5751 0130 4FF00073 		mov	r3, #33554432
 5752 0134 D2B2     		uxtb	r2, r2
 5753 0136 4146     		mov	r1, r8
 5754 0138 2846     		mov	r0, r5
 5755 013a FFF7FEFF 		bl	I2C_TransferConfig
 5756              	.LVL504:
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5757              		.loc 1 3374 0
 5758 013e 0024     		movs	r4, #0
 5759              	.LVL505:
 5760 0140 85F84040 		strb	r4, [r5, #64]
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5761              		.loc 1 3382 0
 5762 0144 0121     		movs	r1, #1
 5763 0146 2846     		mov	r0, r5
 5764 0148 FFF7FEFF 		bl	I2C_Enable_IRQ
 5765              	.LVL506:
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5766              		.loc 1 3385 0
 5767 014c 2046     		mov	r0, r4
 5768 014e 02E0     		b	.L382
 5769              	.LVL507:
 5770              	.L391:
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5771              		.loc 1 3389 0
 5772 0150 0220     		movs	r0, #2
 5773              	.LVL508:
 5774 0152 00E0     		b	.L382
 5775              	.LVL509:
 5776              	.L392:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 235


3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5777              		.loc 1 3255 0
 5778 0154 0220     		movs	r0, #2
 5779              	.LVL510:
 5780              	.L382:
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5781              		.loc 1 3391 0
 5782 0156 02B0     		add	sp, sp, #8
 5783              	.LCFI73:
 5784              		.cfi_def_cfa_offset 24
 5785              		@ sp needed
 5786 0158 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5787              	.LVL511:
 5788              	.L398:
 5789              		.align	2
 5790              	.L397:
 5791 015c 00000000 		.word	I2C_Master_ISR_DMA
 5792 0160 00200080 		.word	-2147475456
 5793 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5794 0168 00000000 		.word	I2C_DMAError
 5795 016c 00000000 		.word	I2C_Master_ISR_IT
 5796              		.cfi_endproc
 5797              	.LFE165:
 5799              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5800              		.align	2
 5801              		.global	HAL_I2C_Master_Seq_Receive_IT
 5802              		.thumb
 5803              		.thumb_func
 5805              	HAL_I2C_Master_Seq_Receive_IT:
 5806              	.LFB166:
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5807              		.loc 1 3406 0
 5808              		.cfi_startproc
 5809              		@ args = 4, pretend = 0, frame = 0
 5810              		@ frame_needed = 0, uses_anonymous_args = 0
 5811              	.LVL512:
 5812 0000 70B5     		push	{r4, r5, r6, lr}
 5813              	.LCFI74:
 5814              		.cfi_def_cfa_offset 16
 5815              		.cfi_offset 4, -16
 5816              		.cfi_offset 5, -12
 5817              		.cfi_offset 6, -8
 5818              		.cfi_offset 14, -4
 5819 0002 82B0     		sub	sp, sp, #8
 5820              	.LCFI75:
 5821              		.cfi_def_cfa_offset 24
 5822              	.LVL513:
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5823              		.loc 1 3413 0
 5824 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5825 0008 E4B2     		uxtb	r4, r4
 5826 000a 202C     		cmp	r4, #32
 5827 000c 49D1     		bne	.L405
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5828              		.loc 1 3416 0
 5829 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5830 0012 012C     		cmp	r4, #1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 236


 5831 0014 47D0     		beq	.L406
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5832              		.loc 1 3416 0 is_stmt 0 discriminator 2
 5833 0016 0124     		movs	r4, #1
 5834 0018 80F84040 		strb	r4, [r0, #64]
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5835              		.loc 1 3418 0 is_stmt 1 discriminator 2
 5836 001c 2224     		movs	r4, #34
 5837 001e 80F84140 		strb	r4, [r0, #65]
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5838              		.loc 1 3419 0 discriminator 2
 5839 0022 1024     		movs	r4, #16
 5840 0024 80F84240 		strb	r4, [r0, #66]
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5841              		.loc 1 3420 0 discriminator 2
 5842 0028 0024     		movs	r4, #0
 5843 002a 4464     		str	r4, [r0, #68]
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5844              		.loc 1 3423 0 discriminator 2
 5845 002c 4262     		str	r2, [r0, #36]
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5846              		.loc 1 3424 0 discriminator 2
 5847 002e 4385     		strh	r3, [r0, #42]	@ movhi
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5848              		.loc 1 3425 0 discriminator 2
 5849 0030 069B     		ldr	r3, [sp, #24]
 5850              	.LVL514:
 5851 0032 C362     		str	r3, [r0, #44]
 5852              	.LVL515:
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5853              		.loc 1 3426 0 discriminator 2
 5854 0034 1D4B     		ldr	r3, .L410
 5855 0036 4363     		str	r3, [r0, #52]
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5856              		.loc 1 3429 0 discriminator 2
 5857 0038 438D     		ldrh	r3, [r0, #42]
 5858 003a 9BB2     		uxth	r3, r3
 5859 003c FF2B     		cmp	r3, #255
 5860 003e 04D9     		bls	.L401
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5861              		.loc 1 3431 0
 5862 0040 FF23     		movs	r3, #255
 5863 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5864              	.LVL516:
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5865              		.loc 1 3432 0
 5866 0044 4FF08076 		mov	r6, #16777216
 5867 0048 02E0     		b	.L402
 5868              	.LVL517:
 5869              	.L401:
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5870              		.loc 1 3436 0
 5871 004a 438D     		ldrh	r3, [r0, #42]
 5872 004c 0385     		strh	r3, [r0, #40]	@ movhi
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5873              		.loc 1 3437 0
 5874 004e C66A     		ldr	r6, [r0, #44]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 237


 5875              	.LVL518:
 5876              	.L402:
 5877 0050 0D46     		mov	r5, r1
 5878 0052 0446     		mov	r4, r0
 5879              	.LVL519:
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5880              		.loc 1 3442 0
 5881 0054 036B     		ldr	r3, [r0, #48]
 5882 0056 122B     		cmp	r3, #18
 5883 0058 05D1     		bne	.L403
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 5884              		.loc 1 3442 0 is_stmt 0 discriminator 1
 5885 005a 069B     		ldr	r3, [sp, #24]
 5886 005c B3F52A4F 		cmp	r3, #43520
 5887 0060 18BF     		it	ne
 5888 0062 AA2B     		cmpne	r3, #170
 5889 0064 09D1     		bne	.L407
 5890              	.L403:
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5891              		.loc 1 3449 0 is_stmt 1
 5892 0066 2046     		mov	r0, r4
 5893              	.LVL520:
 5894 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5895              	.LVL521:
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 5896              		.loc 1 3452 0
 5897 006c 638D     		ldrh	r3, [r4, #42]
 5898 006e 9BB2     		uxth	r3, r3
 5899 0070 FF2B     		cmp	r3, #255
 5900 0072 04D8     		bhi	.L408
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 5901              		.loc 1 3454 0
 5902 0074 E66A     		ldr	r6, [r4, #44]
 5903              	.LVL522:
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5904              		.loc 1 3408 0
 5905 0076 0E4B     		ldr	r3, .L410+4
 5906 0078 02E0     		b	.L404
 5907              	.LVL523:
 5908              	.L407:
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 5909              		.loc 1 3444 0
 5910 007a 0023     		movs	r3, #0
 5911 007c 00E0     		b	.L404
 5912              	.LVL524:
 5913              	.L408:
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5914              		.loc 1 3408 0
 5915 007e 0C4B     		ldr	r3, .L410+4
 5916              	.L404:
 5917              	.LVL525:
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5918              		.loc 1 3459 0
 5919 0080 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5920 0084 0093     		str	r3, [sp]
 5921 0086 3346     		mov	r3, r6
 5922              	.LVL526:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 238


 5923 0088 2946     		mov	r1, r5
 5924 008a 2046     		mov	r0, r4
 5925 008c FFF7FEFF 		bl	I2C_TransferConfig
 5926              	.LVL527:
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5927              		.loc 1 3462 0
 5928 0090 0025     		movs	r5, #0
 5929 0092 84F84050 		strb	r5, [r4, #64]
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5930              		.loc 1 3467 0
 5931 0096 0221     		movs	r1, #2
 5932 0098 2046     		mov	r0, r4
 5933 009a FFF7FEFF 		bl	I2C_Enable_IRQ
 5934              	.LVL528:
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5935              		.loc 1 3469 0
 5936 009e 2846     		mov	r0, r5
 5937 00a0 02E0     		b	.L400
 5938              	.LVL529:
 5939              	.L405:
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 5940              		.loc 1 3473 0
 5941 00a2 0220     		movs	r0, #2
 5942              	.LVL530:
 5943 00a4 00E0     		b	.L400
 5944              	.LVL531:
 5945              	.L406:
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5946              		.loc 1 3416 0
 5947 00a6 0220     		movs	r0, #2
 5948              	.LVL532:
 5949              	.L400:
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5950              		.loc 1 3475 0
 5951 00a8 02B0     		add	sp, sp, #8
 5952              	.LCFI76:
 5953              		.cfi_def_cfa_offset 16
 5954              		@ sp needed
 5955 00aa 70BD     		pop	{r4, r5, r6, pc}
 5956              	.LVL533:
 5957              	.L411:
 5958              		.align	2
 5959              	.L410:
 5960 00ac 00000000 		.word	I2C_Master_ISR_IT
 5961 00b0 00240080 		.word	-2147474432
 5962              		.cfi_endproc
 5963              	.LFE166:
 5965              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 5966              		.align	2
 5967              		.global	HAL_I2C_Master_Seq_Receive_DMA
 5968              		.thumb
 5969              		.thumb_func
 5971              	HAL_I2C_Master_Seq_Receive_DMA:
 5972              	.LFB167:
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t xfermode;
 5973              		.loc 1 3490 0
 5974              		.cfi_startproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 239


 5975              		@ args = 4, pretend = 0, frame = 0
 5976              		@ frame_needed = 0, uses_anonymous_args = 0
 5977              	.LVL534:
 5978 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5979              	.LCFI77:
 5980              		.cfi_def_cfa_offset 24
 5981              		.cfi_offset 4, -24
 5982              		.cfi_offset 5, -20
 5983              		.cfi_offset 6, -16
 5984              		.cfi_offset 7, -12
 5985              		.cfi_offset 8, -8
 5986              		.cfi_offset 14, -4
 5987 0004 82B0     		sub	sp, sp, #8
 5988              	.LCFI78:
 5989              		.cfi_def_cfa_offset 32
 5990              	.LVL535:
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 5991              		.loc 1 3498 0
 5992 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5993 000a E4B2     		uxtb	r4, r4
 5994 000c 202C     		cmp	r4, #32
 5995 000e 40F09F80 		bne	.L422
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 5996              		.loc 1 3501 0
 5997 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5998 0016 012C     		cmp	r4, #1
 5999 0018 00F09C80 		beq	.L423
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6000              		.loc 1 3501 0 is_stmt 0 discriminator 2
 6001 001c 0124     		movs	r4, #1
 6002 001e 80F84040 		strb	r4, [r0, #64]
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6003              		.loc 1 3503 0 is_stmt 1 discriminator 2
 6004 0022 2224     		movs	r4, #34
 6005 0024 80F84140 		strb	r4, [r0, #65]
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6006              		.loc 1 3504 0 discriminator 2
 6007 0028 1024     		movs	r4, #16
 6008 002a 80F84240 		strb	r4, [r0, #66]
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6009              		.loc 1 3505 0 discriminator 2
 6010 002e 0024     		movs	r4, #0
 6011 0030 4464     		str	r4, [r0, #68]
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6012              		.loc 1 3508 0 discriminator 2
 6013 0032 4262     		str	r2, [r0, #36]
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6014              		.loc 1 3509 0 discriminator 2
 6015 0034 4385     		strh	r3, [r0, #42]	@ movhi
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6016              		.loc 1 3510 0 discriminator 2
 6017 0036 089B     		ldr	r3, [sp, #32]
 6018              	.LVL536:
 6019 0038 C362     		str	r3, [r0, #44]
 6020              	.LVL537:
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6021              		.loc 1 3511 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 240


 6022 003a 484B     		ldr	r3, .L428
 6023 003c 4363     		str	r3, [r0, #52]
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6024              		.loc 1 3514 0 discriminator 2
 6025 003e 438D     		ldrh	r3, [r0, #42]
 6026 0040 9BB2     		uxth	r3, r3
 6027 0042 FF2B     		cmp	r3, #255
 6028 0044 04D9     		bls	.L414
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6029              		.loc 1 3516 0
 6030 0046 FF23     		movs	r3, #255
 6031 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6032              	.LVL538:
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6033              		.loc 1 3517 0
 6034 004a 4FF08077 		mov	r7, #16777216
 6035 004e 02E0     		b	.L415
 6036              	.LVL539:
 6037              	.L414:
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6038              		.loc 1 3521 0
 6039 0050 438D     		ldrh	r3, [r0, #42]
 6040 0052 0385     		strh	r3, [r0, #40]	@ movhi
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6041              		.loc 1 3522 0
 6042 0054 C76A     		ldr	r7, [r0, #44]
 6043              	.LVL540:
 6044              	.L415:
 6045 0056 1446     		mov	r4, r2
 6046 0058 8846     		mov	r8, r1
 6047 005a 0546     		mov	r5, r0
 6048              	.LVL541:
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6049              		.loc 1 3527 0
 6050 005c 036B     		ldr	r3, [r0, #48]
 6051 005e 122B     		cmp	r3, #18
 6052 0060 05D1     		bne	.L416
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6053              		.loc 1 3527 0 is_stmt 0 discriminator 1
 6054 0062 089B     		ldr	r3, [sp, #32]
 6055 0064 B3F52A4F 		cmp	r3, #43520
 6056 0068 18BF     		it	ne
 6057 006a AA2B     		cmpne	r3, #170
 6058 006c 09D1     		bne	.L424
 6059              	.L416:
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6060              		.loc 1 3534 0 is_stmt 1
 6061 006e 2846     		mov	r0, r5
 6062              	.LVL542:
 6063 0070 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6064              	.LVL543:
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6065              		.loc 1 3537 0
 6066 0074 6B8D     		ldrh	r3, [r5, #42]
 6067 0076 9BB2     		uxth	r3, r3
 6068 0078 FF2B     		cmp	r3, #255
 6069 007a 04D8     		bhi	.L425
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 241


3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6070              		.loc 1 3539 0
 6071 007c EF6A     		ldr	r7, [r5, #44]
 6072              	.LVL544:
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6073              		.loc 1 3492 0
 6074 007e 384E     		ldr	r6, .L428+4
 6075 0080 02E0     		b	.L417
 6076              	.LVL545:
 6077              	.L424:
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6078              		.loc 1 3529 0
 6079 0082 0026     		movs	r6, #0
 6080 0084 00E0     		b	.L417
 6081              	.LVL546:
 6082              	.L425:
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6083              		.loc 1 3492 0
 6084 0086 364E     		ldr	r6, .L428+4
 6085              	.L417:
 6086              	.LVL547:
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6087              		.loc 1 3543 0
 6088 0088 2A8D     		ldrh	r2, [r5, #40]
 6089 008a 002A     		cmp	r2, #0
 6090 008c 4CD0     		beq	.L418
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6091              		.loc 1 3545 0
 6092 008e EB6B     		ldr	r3, [r5, #60]
 6093 0090 93B1     		cbz	r3, .L419
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6094              		.loc 1 3548 0
 6095 0092 344A     		ldr	r2, .L428+8
 6096 0094 DA63     		str	r2, [r3, #60]
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6097              		.loc 1 3551 0
 6098 0096 EB6B     		ldr	r3, [r5, #60]
 6099 0098 334A     		ldr	r2, .L428+12
 6100 009a DA64     		str	r2, [r3, #76]
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6101              		.loc 1 3554 0
 6102 009c EA6B     		ldr	r2, [r5, #60]
 6103 009e 0023     		movs	r3, #0
 6104 00a0 1364     		str	r3, [r2, #64]
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6105              		.loc 1 3555 0
 6106 00a2 EA6B     		ldr	r2, [r5, #60]
 6107 00a4 1365     		str	r3, [r2, #80]
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6108              		.loc 1 3558 0
 6109 00a6 2968     		ldr	r1, [r5]
 6110 00a8 2B8D     		ldrh	r3, [r5, #40]
 6111 00aa 2246     		mov	r2, r4
 6112 00ac 2431     		adds	r1, r1, #36
 6113 00ae E86B     		ldr	r0, [r5, #60]
 6114 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6115              	.LVL548:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 242


3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6116              		.loc 1 3575 0
 6117 00b4 50BB     		cbnz	r0, .L426
 6118 00b6 0DE0     		b	.L420
 6119              	.LVL549:
 6120              	.L419:
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6121              		.loc 1 3563 0
 6122 00b8 2023     		movs	r3, #32
 6123 00ba 85F84130 		strb	r3, [r5, #65]
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6124              		.loc 1 3564 0
 6125 00be 0022     		movs	r2, #0
 6126 00c0 85F84220 		strb	r2, [r5, #66]
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6127              		.loc 1 3567 0
 6128 00c4 6B6C     		ldr	r3, [r5, #68]
 6129 00c6 43F08003 		orr	r3, r3, #128
 6130 00ca 6B64     		str	r3, [r5, #68]
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6131              		.loc 1 3570 0
 6132 00cc 85F84020 		strb	r2, [r5, #64]
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6133              		.loc 1 3572 0
 6134 00d0 0120     		movs	r0, #1
 6135 00d2 40E0     		b	.L413
 6136              	.LVL550:
 6137              	.L420:
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6138              		.loc 1 3578 0
 6139 00d4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 6140 00d8 0096     		str	r6, [sp]
 6141 00da 3B46     		mov	r3, r7
 6142 00dc 4146     		mov	r1, r8
 6143 00de 2846     		mov	r0, r5
 6144              	.LVL551:
 6145 00e0 FFF7FEFF 		bl	I2C_TransferConfig
 6146              	.LVL552:
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6147              		.loc 1 3581 0
 6148 00e4 6B8D     		ldrh	r3, [r5, #42]
 6149 00e6 9BB2     		uxth	r3, r3
 6150 00e8 2A8D     		ldrh	r2, [r5, #40]
 6151 00ea 9B1A     		subs	r3, r3, r2
 6152 00ec 9BB2     		uxth	r3, r3
 6153 00ee 6B85     		strh	r3, [r5, #42]	@ movhi
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6154              		.loc 1 3584 0
 6155 00f0 0024     		movs	r4, #0
 6156              	.LVL553:
 6157 00f2 85F84040 		strb	r4, [r5, #64]
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6158              		.loc 1 3590 0
 6159 00f6 1021     		movs	r1, #16
 6160 00f8 2846     		mov	r0, r5
 6161 00fa FFF7FEFF 		bl	I2C_Enable_IRQ
 6162              	.LVL554:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 243


3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6163              		.loc 1 3593 0
 6164 00fe 2A68     		ldr	r2, [r5]
 6165 0100 1368     		ldr	r3, [r2]
 6166 0102 43F40043 		orr	r3, r3, #32768
 6167 0106 1360     		str	r3, [r2]
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6168              		.loc 1 3631 0
 6169 0108 2046     		mov	r0, r4
 6170 010a 24E0     		b	.L413
 6171              	.LVL555:
 6172              	.L426:
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6173              		.loc 1 3598 0
 6174 010c 2023     		movs	r3, #32
 6175 010e 85F84130 		strb	r3, [r5, #65]
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6176              		.loc 1 3599 0
 6177 0112 0022     		movs	r2, #0
 6178 0114 85F84220 		strb	r2, [r5, #66]
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6179              		.loc 1 3602 0
 6180 0118 6B6C     		ldr	r3, [r5, #68]
 6181 011a 43F01003 		orr	r3, r3, #16
 6182 011e 6B64     		str	r3, [r5, #68]
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6183              		.loc 1 3605 0
 6184 0120 85F84020 		strb	r2, [r5, #64]
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 6185              		.loc 1 3607 0
 6186 0124 0120     		movs	r0, #1
 6187              	.LVL556:
 6188 0126 16E0     		b	.L413
 6189              	.L418:
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6190              		.loc 1 3613 0
 6191 0128 104B     		ldr	r3, .L428+16
 6192 012a 6B63     		str	r3, [r5, #52]
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6193              		.loc 1 3617 0
 6194 012c 0C4B     		ldr	r3, .L428+4
 6195 012e 0093     		str	r3, [sp]
 6196 0130 4FF00073 		mov	r3, #33554432
 6197 0134 D2B2     		uxtb	r2, r2
 6198 0136 4146     		mov	r1, r8
 6199 0138 2846     		mov	r0, r5
 6200 013a FFF7FEFF 		bl	I2C_TransferConfig
 6201              	.LVL557:
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6202              		.loc 1 3620 0
 6203 013e 0024     		movs	r4, #0
 6204              	.LVL558:
 6205 0140 85F84040 		strb	r4, [r5, #64]
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6206              		.loc 1 3628 0
 6207 0144 0121     		movs	r1, #1
 6208 0146 2846     		mov	r0, r5
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 244


 6209 0148 FFF7FEFF 		bl	I2C_Enable_IRQ
 6210              	.LVL559:
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6211              		.loc 1 3631 0
 6212 014c 2046     		mov	r0, r4
 6213 014e 02E0     		b	.L413
 6214              	.LVL560:
 6215              	.L422:
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6216              		.loc 1 3635 0
 6217 0150 0220     		movs	r0, #2
 6218              	.LVL561:
 6219 0152 00E0     		b	.L413
 6220              	.LVL562:
 6221              	.L423:
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6222              		.loc 1 3501 0
 6223 0154 0220     		movs	r0, #2
 6224              	.LVL563:
 6225              	.L413:
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6226              		.loc 1 3637 0
 6227 0156 02B0     		add	sp, sp, #8
 6228              	.LCFI79:
 6229              		.cfi_def_cfa_offset 24
 6230              		@ sp needed
 6231 0158 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6232              	.LVL564:
 6233              	.L429:
 6234              		.align	2
 6235              	.L428:
 6236 015c 00000000 		.word	I2C_Master_ISR_DMA
 6237 0160 00240080 		.word	-2147474432
 6238 0164 00000000 		.word	I2C_DMAMasterReceiveCplt
 6239 0168 00000000 		.word	I2C_DMAError
 6240 016c 00000000 		.word	I2C_Master_ISR_IT
 6241              		.cfi_endproc
 6242              	.LFE167:
 6244              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6245              		.align	2
 6246              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6247              		.thumb
 6248              		.thumb_func
 6250              	HAL_I2C_Slave_Seq_Transmit_IT:
 6251              	.LFB168:
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 6252              		.loc 1 3650 0
 6253              		.cfi_startproc
 6254              		@ args = 0, pretend = 0, frame = 0
 6255              		@ frame_needed = 0, uses_anonymous_args = 0
 6256              	.LVL565:
 6257 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6258              	.LCFI80:
 6259              		.cfi_def_cfa_offset 24
 6260              		.cfi_offset 3, -24
 6261              		.cfi_offset 4, -20
 6262              		.cfi_offset 5, -16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 245


 6263              		.cfi_offset 6, -12
 6264              		.cfi_offset 7, -8
 6265              		.cfi_offset 14, -4
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6266              		.loc 1 3654 0
 6267 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6268 0006 04F02804 		and	r4, r4, #40
 6269 000a 282C     		cmp	r4, #40
 6270 000c 59D1     		bne	.L435
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6271              		.loc 1 3656 0
 6272 000e 002A     		cmp	r2, #0
 6273 0010 18BF     		it	ne
 6274 0012 0029     		cmpne	r1, #0
 6275 0014 04D1     		bne	.L432
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6276              		.loc 1 3658 0
 6277 0016 4FF40073 		mov	r3, #512
 6278              	.LVL566:
 6279 001a 4364     		str	r3, [r0, #68]
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6280              		.loc 1 3659 0
 6281 001c 0120     		movs	r0, #1
 6282              	.LVL567:
 6283 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6284              	.LVL568:
 6285              	.L432:
 6286 0020 1F46     		mov	r7, r3
 6287 0022 1646     		mov	r6, r2
 6288 0024 0D46     		mov	r5, r1
 6289 0026 0446     		mov	r4, r0
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6290              		.loc 1 3663 0
 6291 0028 48F20101 		movw	r1, #32769
 6292              	.LVL569:
 6293 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 6294              	.LVL570:
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6295              		.loc 1 3666 0
 6296 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6297 0034 012B     		cmp	r3, #1
 6298 0036 46D0     		beq	.L436
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6299              		.loc 1 3666 0 is_stmt 0 discriminator 2
 6300 0038 0123     		movs	r3, #1
 6301 003a 84F84030 		strb	r3, [r4, #64]
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6302              		.loc 1 3670 0 is_stmt 1 discriminator 2
 6303 003e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6304 0042 DBB2     		uxtb	r3, r3
 6305 0044 2A2B     		cmp	r3, #42
 6306 0046 17D1     		bne	.L433
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6307              		.loc 1 3673 0
 6308 0048 0221     		movs	r1, #2
 6309 004a 2046     		mov	r0, r4
 6310 004c FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 246


 6311              	.LVL571:
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6312              		.loc 1 3676 0
 6313 0050 2368     		ldr	r3, [r4]
 6314 0052 1A68     		ldr	r2, [r3]
 6315 0054 12F4004F 		tst	r2, #32768
 6316 0058 0ED0     		beq	.L433
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6317              		.loc 1 3678 0
 6318 005a 1A68     		ldr	r2, [r3]
 6319 005c 22F40042 		bic	r2, r2, #32768
 6320 0060 1A60     		str	r2, [r3]
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6321              		.loc 1 3680 0
 6322 0062 E36B     		ldr	r3, [r4, #60]
 6323 0064 43B1     		cbz	r3, .L433
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6324              		.loc 1 3684 0
 6325 0066 194A     		ldr	r2, .L438
 6326 0068 1A65     		str	r2, [r3, #80]
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6327              		.loc 1 3687 0
 6328 006a E06B     		ldr	r0, [r4, #60]
 6329 006c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6330              	.LVL572:
 6331 0070 10B1     		cbz	r0, .L433
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6332              		.loc 1 3690 0
 6333 0072 E06B     		ldr	r0, [r4, #60]
 6334 0074 036D     		ldr	r3, [r0, #80]
 6335 0076 9847     		blx	r3
 6336              	.LVL573:
 6337              	.L433:
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6338              		.loc 1 3696 0
 6339 0078 2923     		movs	r3, #41
 6340 007a 84F84130 		strb	r3, [r4, #65]
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6341              		.loc 1 3697 0
 6342 007e 2023     		movs	r3, #32
 6343 0080 84F84230 		strb	r3, [r4, #66]
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6344              		.loc 1 3698 0
 6345 0084 0023     		movs	r3, #0
 6346 0086 6364     		str	r3, [r4, #68]
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6347              		.loc 1 3701 0
 6348 0088 2268     		ldr	r2, [r4]
 6349 008a 5368     		ldr	r3, [r2, #4]
 6350 008c 23F40043 		bic	r3, r3, #32768
 6351 0090 5360     		str	r3, [r2, #4]
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6352              		.loc 1 3704 0
 6353 0092 6562     		str	r5, [r4, #36]
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6354              		.loc 1 3705 0
 6355 0094 6685     		strh	r6, [r4, #42]	@ movhi
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 247


3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6356              		.loc 1 3706 0
 6357 0096 638D     		ldrh	r3, [r4, #42]
 6358 0098 2385     		strh	r3, [r4, #40]	@ movhi
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6359              		.loc 1 3707 0
 6360 009a E762     		str	r7, [r4, #44]
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6361              		.loc 1 3708 0
 6362 009c 0C4B     		ldr	r3, .L438+4
 6363 009e 6363     		str	r3, [r4, #52]
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6364              		.loc 1 3710 0
 6365 00a0 2368     		ldr	r3, [r4]
 6366 00a2 9A69     		ldr	r2, [r3, #24]
 6367 00a4 12F4803F 		tst	r2, #65536
 6368 00a8 01D0     		beq	.L434
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6369              		.loc 1 3714 0
 6370 00aa 0822     		movs	r2, #8
 6371 00ac DA61     		str	r2, [r3, #28]
 6372              	.L434:
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6373              		.loc 1 3718 0
 6374 00ae 0025     		movs	r5, #0
 6375              	.LVL574:
 6376 00b0 84F84050 		strb	r5, [r4, #64]
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6377              		.loc 1 3724 0
 6378 00b4 48F20101 		movw	r1, #32769
 6379 00b8 2046     		mov	r0, r4
 6380 00ba FFF7FEFF 		bl	I2C_Enable_IRQ
 6381              	.LVL575:
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6382              		.loc 1 3726 0
 6383 00be 2846     		mov	r0, r5
 6384 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6385              	.LVL576:
 6386              	.L435:
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6387              		.loc 1 3730 0
 6388 00c2 0120     		movs	r0, #1
 6389              	.LVL577:
 6390 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6391              	.LVL578:
 6392              	.L436:
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6393              		.loc 1 3666 0
 6394 00c6 0220     		movs	r0, #2
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6395              		.loc 1 3732 0
 6396 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6397              	.LVL579:
 6398              	.L439:
 6399 00ca 00BF     		.align	2
 6400              	.L438:
 6401 00cc 00000000 		.word	I2C_DMAAbort
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 248


 6402 00d0 00000000 		.word	I2C_Slave_ISR_IT
 6403              		.cfi_endproc
 6404              	.LFE168:
 6406              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6407              		.align	2
 6408              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6409              		.thumb
 6410              		.thumb_func
 6412              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6413              	.LFB169:
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6414              		.loc 1 3745 0
 6415              		.cfi_startproc
 6416              		@ args = 0, pretend = 0, frame = 0
 6417              		@ frame_needed = 0, uses_anonymous_args = 0
 6418              	.LVL580:
 6419 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6420              	.LCFI81:
 6421              		.cfi_def_cfa_offset 24
 6422              		.cfi_offset 3, -24
 6423              		.cfi_offset 4, -20
 6424              		.cfi_offset 5, -16
 6425              		.cfi_offset 6, -12
 6426              		.cfi_offset 7, -8
 6427              		.cfi_offset 14, -4
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6428              		.loc 1 3751 0
 6429 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6430 0006 04F02804 		and	r4, r4, #40
 6431 000a 282C     		cmp	r4, #40
 6432 000c 40F0B580 		bne	.L450
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6433              		.loc 1 3753 0
 6434 0010 002A     		cmp	r2, #0
 6435 0012 18BF     		it	ne
 6436 0014 0029     		cmpne	r1, #0
 6437 0016 04D1     		bne	.L442
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6438              		.loc 1 3755 0
 6439 0018 4FF40073 		mov	r3, #512
 6440              	.LVL581:
 6441 001c 4364     		str	r3, [r0, #68]
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6442              		.loc 1 3756 0
 6443 001e 0120     		movs	r0, #1
 6444              	.LVL582:
 6445 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6446              	.LVL583:
 6447              	.L442:
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6448              		.loc 1 3760 0
 6449 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6450 0026 012C     		cmp	r4, #1
 6451 0028 00F0A980 		beq	.L451
 6452 002c 1F46     		mov	r7, r3
 6453 002e 1646     		mov	r6, r2
 6454 0030 0D46     		mov	r5, r1
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 249


 6455 0032 0446     		mov	r4, r0
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6456              		.loc 1 3760 0 is_stmt 0 discriminator 2
 6457 0034 0123     		movs	r3, #1
 6458              	.LVL584:
 6459 0036 80F84030 		strb	r3, [r0, #64]
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6460              		.loc 1 3763 0 is_stmt 1 discriminator 2
 6461 003a 48F20101 		movw	r1, #32769
 6462              	.LVL585:
 6463 003e FFF7FEFF 		bl	I2C_Disable_IRQ
 6464              	.LVL586:
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6465              		.loc 1 3767 0 discriminator 2
 6466 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6467 0046 DBB2     		uxtb	r3, r3
 6468 0048 2A2B     		cmp	r3, #42
 6469 004a 19D1     		bne	.L443
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6470              		.loc 1 3770 0
 6471 004c 0221     		movs	r1, #2
 6472 004e 2046     		mov	r0, r4
 6473 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 6474              	.LVL587:
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6475              		.loc 1 3772 0
 6476 0054 2368     		ldr	r3, [r4]
 6477 0056 1A68     		ldr	r2, [r3]
 6478 0058 12F4004F 		tst	r2, #32768
 6479 005c 29D0     		beq	.L444
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6480              		.loc 1 3775 0
 6481 005e E26B     		ldr	r2, [r4, #60]
 6482 0060 3AB3     		cbz	r2, .L444
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6483              		.loc 1 3777 0
 6484 0062 1A68     		ldr	r2, [r3]
 6485 0064 22F40042 		bic	r2, r2, #32768
 6486 0068 1A60     		str	r2, [r3]
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6487              		.loc 1 3781 0
 6488 006a E36B     		ldr	r3, [r4, #60]
 6489 006c 454A     		ldr	r2, .L454
 6490 006e 1A65     		str	r2, [r3, #80]
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6491              		.loc 1 3784 0
 6492 0070 E06B     		ldr	r0, [r4, #60]
 6493 0072 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6494              	.LVL588:
 6495 0076 E0B1     		cbz	r0, .L444
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6496              		.loc 1 3787 0
 6497 0078 E06B     		ldr	r0, [r4, #60]
 6498 007a 036D     		ldr	r3, [r0, #80]
 6499 007c 9847     		blx	r3
 6500              	.LVL589:
 6501 007e 18E0     		b	.L444
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 250


 6502              	.L443:
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6503              		.loc 1 3792 0
 6504 0080 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6505 0084 DBB2     		uxtb	r3, r3
 6506 0086 292B     		cmp	r3, #41
 6507 0088 13D1     		bne	.L444
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6508              		.loc 1 3794 0
 6509 008a 2368     		ldr	r3, [r4]
 6510 008c 1A68     		ldr	r2, [r3]
 6511 008e 12F4804F 		tst	r2, #16384
 6512 0092 0ED0     		beq	.L444
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6513              		.loc 1 3796 0
 6514 0094 1A68     		ldr	r2, [r3]
 6515 0096 22F48042 		bic	r2, r2, #16384
 6516 009a 1A60     		str	r2, [r3]
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6517              		.loc 1 3799 0
 6518 009c A36B     		ldr	r3, [r4, #56]
 6519 009e 43B1     		cbz	r3, .L444
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6520              		.loc 1 3803 0
 6521 00a0 384A     		ldr	r2, .L454
 6522 00a2 1A65     		str	r2, [r3, #80]
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6523              		.loc 1 3806 0
 6524 00a4 A06B     		ldr	r0, [r4, #56]
 6525 00a6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6526              	.LVL590:
 6527 00aa 10B1     		cbz	r0, .L444
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6528              		.loc 1 3809 0
 6529 00ac A06B     		ldr	r0, [r4, #56]
 6530 00ae 036D     		ldr	r3, [r0, #80]
 6531 00b0 9847     		blx	r3
 6532              	.LVL591:
 6533              	.L444:
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6534              		.loc 1 3819 0
 6535 00b2 2923     		movs	r3, #41
 6536 00b4 84F84130 		strb	r3, [r4, #65]
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6537              		.loc 1 3820 0
 6538 00b8 2023     		movs	r3, #32
 6539 00ba 84F84230 		strb	r3, [r4, #66]
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6540              		.loc 1 3821 0
 6541 00be 0023     		movs	r3, #0
 6542 00c0 6364     		str	r3, [r4, #68]
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6543              		.loc 1 3824 0
 6544 00c2 2268     		ldr	r2, [r4]
 6545 00c4 5368     		ldr	r3, [r2, #4]
 6546 00c6 23F40043 		bic	r3, r3, #32768
 6547 00ca 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 251


3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6548              		.loc 1 3827 0
 6549 00cc 6562     		str	r5, [r4, #36]
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6550              		.loc 1 3828 0
 6551 00ce 6685     		strh	r6, [r4, #42]	@ movhi
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6552              		.loc 1 3829 0
 6553 00d0 638D     		ldrh	r3, [r4, #42]
 6554 00d2 2385     		strh	r3, [r4, #40]	@ movhi
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6555              		.loc 1 3830 0
 6556 00d4 E762     		str	r7, [r4, #44]
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6557              		.loc 1 3831 0
 6558 00d6 2C4B     		ldr	r3, .L454+4
 6559 00d8 6363     		str	r3, [r4, #52]
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6560              		.loc 1 3833 0
 6561 00da A36B     		ldr	r3, [r4, #56]
 6562 00dc 93B1     		cbz	r3, .L445
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6563              		.loc 1 3836 0
 6564 00de 2B4A     		ldr	r2, .L454+8
 6565 00e0 DA63     		str	r2, [r3, #60]
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6566              		.loc 1 3839 0
 6567 00e2 A36B     		ldr	r3, [r4, #56]
 6568 00e4 2A4A     		ldr	r2, .L454+12
 6569 00e6 DA64     		str	r2, [r3, #76]
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6570              		.loc 1 3842 0
 6571 00e8 A26B     		ldr	r2, [r4, #56]
 6572 00ea 0023     		movs	r3, #0
 6573 00ec 1364     		str	r3, [r2, #64]
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6574              		.loc 1 3843 0
 6575 00ee A26B     		ldr	r2, [r4, #56]
 6576 00f0 1365     		str	r3, [r2, #80]
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6577              		.loc 1 3846 0
 6578 00f2 2268     		ldr	r2, [r4]
 6579 00f4 238D     		ldrh	r3, [r4, #40]
 6580 00f6 2832     		adds	r2, r2, #40
 6581 00f8 2946     		mov	r1, r5
 6582 00fa A06B     		ldr	r0, [r4, #56]
 6583 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 6584              	.LVL592:
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6585              		.loc 1 3863 0
 6586 0100 70B1     		cbz	r0, .L446
 6587 0102 1BE0     		b	.L452
 6588              	.LVL593:
 6589              	.L445:
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6590              		.loc 1 3851 0
 6591 0104 2823     		movs	r3, #40
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 252


 6592 0106 84F84130 		strb	r3, [r4, #65]
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6593              		.loc 1 3852 0
 6594 010a 0022     		movs	r2, #0
 6595 010c 84F84220 		strb	r2, [r4, #66]
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6596              		.loc 1 3855 0
 6597 0110 636C     		ldr	r3, [r4, #68]
 6598 0112 43F08003 		orr	r3, r3, #128
 6599 0116 6364     		str	r3, [r4, #68]
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6600              		.loc 1 3858 0
 6601 0118 84F84020 		strb	r2, [r4, #64]
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6602              		.loc 1 3860 0
 6603 011c 0120     		movs	r0, #1
 6604 011e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6605              	.LVL594:
 6606              	.L446:
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6607              		.loc 1 3866 0
 6608 0120 638D     		ldrh	r3, [r4, #42]
 6609 0122 9BB2     		uxth	r3, r3
 6610 0124 228D     		ldrh	r2, [r4, #40]
 6611 0126 9B1A     		subs	r3, r3, r2
 6612 0128 9BB2     		uxth	r3, r3
 6613 012a 6385     		strh	r3, [r4, #42]	@ movhi
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6614              		.loc 1 3869 0
 6615 012c 0023     		movs	r3, #0
 6616 012e 2385     		strh	r3, [r4, #40]	@ movhi
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6617              		.loc 1 3886 0
 6618 0130 2368     		ldr	r3, [r4]
 6619 0132 9A69     		ldr	r2, [r3, #24]
 6620 0134 12F4803F 		tst	r2, #65536
 6621 0138 10D0     		beq	.L449
 6622 013a 0DE0     		b	.L448
 6623              	.L452:
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6624              		.loc 1 3874 0
 6625 013c 2823     		movs	r3, #40
 6626 013e 84F84130 		strb	r3, [r4, #65]
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6627              		.loc 1 3875 0
 6628 0142 0022     		movs	r2, #0
 6629 0144 84F84220 		strb	r2, [r4, #66]
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6630              		.loc 1 3878 0
 6631 0148 636C     		ldr	r3, [r4, #68]
 6632 014a 43F01003 		orr	r3, r3, #16
 6633 014e 6364     		str	r3, [r4, #68]
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6634              		.loc 1 3881 0
 6635 0150 84F84020 		strb	r2, [r4, #64]
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6636              		.loc 1 3883 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 253


 6637 0154 0120     		movs	r0, #1
 6638              	.LVL595:
 6639 0156 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6640              	.LVL596:
 6641              	.L448:
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6642              		.loc 1 3890 0
 6643 0158 0822     		movs	r2, #8
 6644 015a DA61     		str	r2, [r3, #28]
 6645              	.L449:
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6646              		.loc 1 3894 0
 6647 015c 0025     		movs	r5, #0
 6648              	.LVL597:
 6649 015e 84F84050 		strb	r5, [r4, #64]
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6650              		.loc 1 3900 0
 6651 0162 4FF40041 		mov	r1, #32768
 6652 0166 2046     		mov	r0, r4
 6653              	.LVL598:
 6654 0168 FFF7FEFF 		bl	I2C_Enable_IRQ
 6655              	.LVL599:
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6656              		.loc 1 3903 0
 6657 016c 2268     		ldr	r2, [r4]
 6658 016e 1368     		ldr	r3, [r2]
 6659 0170 43F48043 		orr	r3, r3, #16384
 6660 0174 1360     		str	r3, [r2]
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6661              		.loc 1 3905 0
 6662 0176 2846     		mov	r0, r5
 6663 0178 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6664              	.LVL600:
 6665              	.L450:
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6666              		.loc 1 3909 0
 6667 017a 0120     		movs	r0, #1
 6668              	.LVL601:
 6669 017c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6670              	.LVL602:
 6671              	.L451:
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6672              		.loc 1 3760 0
 6673 017e 0220     		movs	r0, #2
 6674              	.LVL603:
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6675              		.loc 1 3911 0
 6676 0180 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6677              	.LVL604:
 6678              	.L455:
 6679 0182 00BF     		.align	2
 6680              	.L454:
 6681 0184 00000000 		.word	I2C_DMAAbort
 6682 0188 00000000 		.word	I2C_Slave_ISR_DMA
 6683 018c 00000000 		.word	I2C_DMASlaveTransmitCplt
 6684 0190 00000000 		.word	I2C_DMAError
 6685              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 254


 6686              	.LFE169:
 6688              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6689              		.align	2
 6690              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6691              		.thumb
 6692              		.thumb_func
 6694              	HAL_I2C_Slave_Seq_Receive_IT:
 6695              	.LFB170:
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Check the parameters */
 6696              		.loc 1 3924 0
 6697              		.cfi_startproc
 6698              		@ args = 0, pretend = 0, frame = 0
 6699              		@ frame_needed = 0, uses_anonymous_args = 0
 6700              	.LVL605:
 6701 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6702              	.LCFI82:
 6703              		.cfi_def_cfa_offset 24
 6704              		.cfi_offset 3, -24
 6705              		.cfi_offset 4, -20
 6706              		.cfi_offset 5, -16
 6707              		.cfi_offset 6, -12
 6708              		.cfi_offset 7, -8
 6709              		.cfi_offset 14, -4
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6710              		.loc 1 3928 0
 6711 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6712 0006 04F02804 		and	r4, r4, #40
 6713 000a 282C     		cmp	r4, #40
 6714 000c 59D1     		bne	.L461
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6715              		.loc 1 3930 0
 6716 000e 002A     		cmp	r2, #0
 6717 0010 18BF     		it	ne
 6718 0012 0029     		cmpne	r1, #0
 6719 0014 04D1     		bne	.L458
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6720              		.loc 1 3932 0
 6721 0016 4FF40073 		mov	r3, #512
 6722              	.LVL606:
 6723 001a 4364     		str	r3, [r0, #68]
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6724              		.loc 1 3933 0
 6725 001c 0120     		movs	r0, #1
 6726              	.LVL607:
 6727 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6728              	.LVL608:
 6729              	.L458:
 6730 0020 1F46     		mov	r7, r3
 6731 0022 1646     		mov	r6, r2
 6732 0024 0D46     		mov	r5, r1
 6733 0026 0446     		mov	r4, r0
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6734              		.loc 1 3937 0
 6735 0028 48F20201 		movw	r1, #32770
 6736              	.LVL609:
 6737 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 6738              	.LVL610:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 255


3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6739              		.loc 1 3940 0
 6740 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6741 0034 012B     		cmp	r3, #1
 6742 0036 46D0     		beq	.L462
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6743              		.loc 1 3940 0 is_stmt 0 discriminator 2
 6744 0038 0123     		movs	r3, #1
 6745 003a 84F84030 		strb	r3, [r4, #64]
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6746              		.loc 1 3944 0 is_stmt 1 discriminator 2
 6747 003e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6748 0042 DBB2     		uxtb	r3, r3
 6749 0044 292B     		cmp	r3, #41
 6750 0046 17D1     		bne	.L459
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6751              		.loc 1 3947 0
 6752 0048 0121     		movs	r1, #1
 6753 004a 2046     		mov	r0, r4
 6754 004c FFF7FEFF 		bl	I2C_Disable_IRQ
 6755              	.LVL611:
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6756              		.loc 1 3949 0
 6757 0050 2368     		ldr	r3, [r4]
 6758 0052 1A68     		ldr	r2, [r3]
 6759 0054 12F4804F 		tst	r2, #16384
 6760 0058 0ED0     		beq	.L459
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6761              		.loc 1 3951 0
 6762 005a 1A68     		ldr	r2, [r3]
 6763 005c 22F48042 		bic	r2, r2, #16384
 6764 0060 1A60     		str	r2, [r3]
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6765              		.loc 1 3954 0
 6766 0062 A36B     		ldr	r3, [r4, #56]
 6767 0064 43B1     		cbz	r3, .L459
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6768              		.loc 1 3958 0
 6769 0066 194A     		ldr	r2, .L464
 6770 0068 1A65     		str	r2, [r3, #80]
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6771              		.loc 1 3961 0
 6772 006a A06B     		ldr	r0, [r4, #56]
 6773 006c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6774              	.LVL612:
 6775 0070 10B1     		cbz	r0, .L459
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6776              		.loc 1 3964 0
 6777 0072 A06B     		ldr	r0, [r4, #56]
 6778 0074 036D     		ldr	r3, [r0, #80]
 6779 0076 9847     		blx	r3
 6780              	.LVL613:
 6781              	.L459:
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6782              		.loc 1 3970 0
 6783 0078 2A23     		movs	r3, #42
 6784 007a 84F84130 		strb	r3, [r4, #65]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 256


3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6785              		.loc 1 3971 0
 6786 007e 2023     		movs	r3, #32
 6787 0080 84F84230 		strb	r3, [r4, #66]
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6788              		.loc 1 3972 0
 6789 0084 0023     		movs	r3, #0
 6790 0086 6364     		str	r3, [r4, #68]
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6791              		.loc 1 3975 0
 6792 0088 2268     		ldr	r2, [r4]
 6793 008a 5368     		ldr	r3, [r2, #4]
 6794 008c 23F40043 		bic	r3, r3, #32768
 6795 0090 5360     		str	r3, [r2, #4]
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6796              		.loc 1 3978 0
 6797 0092 6562     		str	r5, [r4, #36]
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6798              		.loc 1 3979 0
 6799 0094 6685     		strh	r6, [r4, #42]	@ movhi
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6800              		.loc 1 3980 0
 6801 0096 638D     		ldrh	r3, [r4, #42]
 6802 0098 2385     		strh	r3, [r4, #40]	@ movhi
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6803              		.loc 1 3981 0
 6804 009a E762     		str	r7, [r4, #44]
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6805              		.loc 1 3982 0
 6806 009c 0C4B     		ldr	r3, .L464+4
 6807 009e 6363     		str	r3, [r4, #52]
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6808              		.loc 1 3984 0
 6809 00a0 2368     		ldr	r3, [r4]
 6810 00a2 9A69     		ldr	r2, [r3, #24]
 6811 00a4 12F4803F 		tst	r2, #65536
 6812 00a8 01D1     		bne	.L460
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6813              		.loc 1 3988 0
 6814 00aa 0822     		movs	r2, #8
 6815 00ac DA61     		str	r2, [r3, #28]
 6816              	.L460:
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6817              		.loc 1 3992 0
 6818 00ae 0025     		movs	r5, #0
 6819              	.LVL614:
 6820 00b0 84F84050 		strb	r5, [r4, #64]
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6821              		.loc 1 3998 0
 6822 00b4 48F20201 		movw	r1, #32770
 6823 00b8 2046     		mov	r0, r4
 6824 00ba FFF7FEFF 		bl	I2C_Enable_IRQ
 6825              	.LVL615:
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6826              		.loc 1 4000 0
 6827 00be 2846     		mov	r0, r5
 6828 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 257


 6829              	.LVL616:
 6830              	.L461:
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 6831              		.loc 1 4004 0
 6832 00c2 0120     		movs	r0, #1
 6833              	.LVL617:
 6834 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6835              	.LVL618:
 6836              	.L462:
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6837              		.loc 1 3940 0
 6838 00c6 0220     		movs	r0, #2
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6839              		.loc 1 4006 0
 6840 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6841              	.LVL619:
 6842              	.L465:
 6843 00ca 00BF     		.align	2
 6844              	.L464:
 6845 00cc 00000000 		.word	I2C_DMAAbort
 6846 00d0 00000000 		.word	I2C_Slave_ISR_IT
 6847              		.cfi_endproc
 6848              	.LFE170:
 6850              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 6851              		.align	2
 6852              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 6853              		.thumb
 6854              		.thumb_func
 6856              	HAL_I2C_Slave_Seq_Receive_DMA:
 6857              	.LFB171:
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6858              		.loc 1 4019 0
 6859              		.cfi_startproc
 6860              		@ args = 0, pretend = 0, frame = 0
 6861              		@ frame_needed = 0, uses_anonymous_args = 0
 6862              	.LVL620:
 6863 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6864              	.LCFI83:
 6865              		.cfi_def_cfa_offset 24
 6866              		.cfi_offset 3, -24
 6867              		.cfi_offset 4, -20
 6868              		.cfi_offset 5, -16
 6869              		.cfi_offset 6, -12
 6870              		.cfi_offset 7, -8
 6871              		.cfi_offset 14, -4
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 6872              		.loc 1 4025 0
 6873 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 6874 0006 05F02805 		and	r5, r5, #40
 6875 000a 282D     		cmp	r5, #40
 6876 000c 40F0B580 		bne	.L476
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6877              		.loc 1 4027 0
 6878 0010 002A     		cmp	r2, #0
 6879 0012 18BF     		it	ne
 6880 0014 0029     		cmpne	r1, #0
 6881 0016 04D1     		bne	.L468
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 258


4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       return  HAL_ERROR;
 6882              		.loc 1 4029 0
 6883 0018 4FF40073 		mov	r3, #512
 6884              	.LVL621:
 6885 001c 4364     		str	r3, [r0, #68]
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 6886              		.loc 1 4030 0
 6887 001e 0120     		movs	r0, #1
 6888              	.LVL622:
 6889 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6890              	.LVL623:
 6891              	.L468:
 6892 0022 1F46     		mov	r7, r3
 6893 0024 1646     		mov	r6, r2
 6894 0026 0D46     		mov	r5, r1
 6895 0028 0446     		mov	r4, r0
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6896              		.loc 1 4034 0
 6897 002a 48F20201 		movw	r1, #32770
 6898              	.LVL624:
 6899 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6900              	.LVL625:
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6901              		.loc 1 4037 0
 6902 0032 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6903 0036 012B     		cmp	r3, #1
 6904 0038 00F0A180 		beq	.L477
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6905              		.loc 1 4037 0 is_stmt 0 discriminator 2
 6906 003c 0123     		movs	r3, #1
 6907 003e 84F84030 		strb	r3, [r4, #64]
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6908              		.loc 1 4041 0 is_stmt 1 discriminator 2
 6909 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6910 0046 DBB2     		uxtb	r3, r3
 6911 0048 292B     		cmp	r3, #41
 6912 004a 19D1     		bne	.L469
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6913              		.loc 1 4044 0
 6914 004c 0121     		movs	r1, #1
 6915 004e 2046     		mov	r0, r4
 6916 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 6917              	.LVL626:
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6918              		.loc 1 4046 0
 6919 0054 2368     		ldr	r3, [r4]
 6920 0056 1A68     		ldr	r2, [r3]
 6921 0058 12F4804F 		tst	r2, #16384
 6922 005c 29D0     		beq	.L470
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6923              		.loc 1 4049 0
 6924 005e A26B     		ldr	r2, [r4, #56]
 6925 0060 3AB3     		cbz	r2, .L470
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6926              		.loc 1 4051 0
 6927 0062 1A68     		ldr	r2, [r3]
 6928 0064 22F48042 		bic	r2, r2, #16384
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 259


 6929 0068 1A60     		str	r2, [r3]
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6930              		.loc 1 4055 0
 6931 006a A36B     		ldr	r3, [r4, #56]
 6932 006c 454A     		ldr	r2, .L480
 6933 006e 1A65     		str	r2, [r3, #80]
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6934              		.loc 1 4058 0
 6935 0070 A06B     		ldr	r0, [r4, #56]
 6936 0072 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6937              	.LVL627:
 6938 0076 E0B1     		cbz	r0, .L470
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6939              		.loc 1 4061 0
 6940 0078 A06B     		ldr	r0, [r4, #56]
 6941 007a 036D     		ldr	r3, [r0, #80]
 6942 007c 9847     		blx	r3
 6943              	.LVL628:
 6944 007e 18E0     		b	.L470
 6945              	.L469:
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 6946              		.loc 1 4066 0
 6947 0080 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6948 0084 DBB2     		uxtb	r3, r3
 6949 0086 2A2B     		cmp	r3, #42
 6950 0088 13D1     		bne	.L470
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 6951              		.loc 1 4068 0
 6952 008a 2368     		ldr	r3, [r4]
 6953 008c 1A68     		ldr	r2, [r3]
 6954 008e 12F4004F 		tst	r2, #32768
 6955 0092 0ED0     		beq	.L470
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6956              		.loc 1 4070 0
 6957 0094 1A68     		ldr	r2, [r3]
 6958 0096 22F40042 		bic	r2, r2, #32768
 6959 009a 1A60     		str	r2, [r3]
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 6960              		.loc 1 4073 0
 6961 009c E36B     		ldr	r3, [r4, #60]
 6962 009e 43B1     		cbz	r3, .L470
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6963              		.loc 1 4077 0
 6964 00a0 384A     		ldr	r2, .L480
 6965 00a2 1A65     		str	r2, [r3, #80]
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 6966              		.loc 1 4080 0
 6967 00a4 E06B     		ldr	r0, [r4, #60]
 6968 00a6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6969              	.LVL629:
 6970 00aa 10B1     		cbz	r0, .L470
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 6971              		.loc 1 4083 0
 6972 00ac E06B     		ldr	r0, [r4, #60]
 6973 00ae 036D     		ldr	r3, [r0, #80]
 6974 00b0 9847     		blx	r3
 6975              	.LVL630:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 260


 6976              	.L470:
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6977              		.loc 1 4093 0
 6978 00b2 2A23     		movs	r3, #42
 6979 00b4 84F84130 		strb	r3, [r4, #65]
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6980              		.loc 1 4094 0
 6981 00b8 2023     		movs	r3, #32
 6982 00ba 84F84230 		strb	r3, [r4, #66]
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6983              		.loc 1 4095 0
 6984 00be 0023     		movs	r3, #0
 6985 00c0 6364     		str	r3, [r4, #68]
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 6986              		.loc 1 4098 0
 6987 00c2 2268     		ldr	r2, [r4]
 6988 00c4 5368     		ldr	r3, [r2, #4]
 6989 00c6 23F40043 		bic	r3, r3, #32768
 6990 00ca 5360     		str	r3, [r2, #4]
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6991              		.loc 1 4101 0
 6992 00cc 6562     		str	r5, [r4, #36]
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6993              		.loc 1 4102 0
 6994 00ce 6685     		strh	r6, [r4, #42]	@ movhi
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6995              		.loc 1 4103 0
 6996 00d0 638D     		ldrh	r3, [r4, #42]
 6997 00d2 2385     		strh	r3, [r4, #40]	@ movhi
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6998              		.loc 1 4104 0
 6999 00d4 E762     		str	r7, [r4, #44]
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7000              		.loc 1 4105 0
 7001 00d6 2C4B     		ldr	r3, .L480+4
 7002 00d8 6363     		str	r3, [r4, #52]
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7003              		.loc 1 4107 0
 7004 00da E36B     		ldr	r3, [r4, #60]
 7005 00dc 93B1     		cbz	r3, .L471
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7006              		.loc 1 4110 0
 7007 00de 2B4A     		ldr	r2, .L480+8
 7008 00e0 DA63     		str	r2, [r3, #60]
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7009              		.loc 1 4113 0
 7010 00e2 E36B     		ldr	r3, [r4, #60]
 7011 00e4 2A4A     		ldr	r2, .L480+12
 7012 00e6 DA64     		str	r2, [r3, #76]
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7013              		.loc 1 4116 0
 7014 00e8 E26B     		ldr	r2, [r4, #60]
 7015 00ea 0023     		movs	r3, #0
 7016 00ec 1364     		str	r3, [r2, #64]
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7017              		.loc 1 4117 0
 7018 00ee E26B     		ldr	r2, [r4, #60]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 261


 7019 00f0 1365     		str	r3, [r2, #80]
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7020              		.loc 1 4120 0
 7021 00f2 2168     		ldr	r1, [r4]
 7022 00f4 238D     		ldrh	r3, [r4, #40]
 7023 00f6 2A46     		mov	r2, r5
 7024 00f8 2431     		adds	r1, r1, #36
 7025 00fa E06B     		ldr	r0, [r4, #60]
 7026 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 7027              	.LVL631:
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7028              		.loc 1 4137 0
 7029 0100 70B1     		cbz	r0, .L472
 7030 0102 1BE0     		b	.L478
 7031              	.LVL632:
 7032              	.L471:
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7033              		.loc 1 4125 0
 7034 0104 2823     		movs	r3, #40
 7035 0106 84F84130 		strb	r3, [r4, #65]
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7036              		.loc 1 4126 0
 7037 010a 0022     		movs	r2, #0
 7038 010c 84F84220 		strb	r2, [r4, #66]
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7039              		.loc 1 4129 0
 7040 0110 636C     		ldr	r3, [r4, #68]
 7041 0112 43F08003 		orr	r3, r3, #128
 7042 0116 6364     		str	r3, [r4, #68]
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7043              		.loc 1 4132 0
 7044 0118 84F84020 		strb	r2, [r4, #64]
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7045              		.loc 1 4134 0
 7046 011c 0120     		movs	r0, #1
 7047 011e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7048              	.LVL633:
 7049              	.L472:
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7050              		.loc 1 4140 0
 7051 0120 638D     		ldrh	r3, [r4, #42]
 7052 0122 9BB2     		uxth	r3, r3
 7053 0124 228D     		ldrh	r2, [r4, #40]
 7054 0126 9B1A     		subs	r3, r3, r2
 7055 0128 9BB2     		uxth	r3, r3
 7056 012a 6385     		strh	r3, [r4, #42]	@ movhi
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7057              		.loc 1 4143 0
 7058 012c 0023     		movs	r3, #0
 7059 012e 2385     		strh	r3, [r4, #40]	@ movhi
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7060              		.loc 1 4160 0
 7061 0130 2368     		ldr	r3, [r4]
 7062 0132 9A69     		ldr	r2, [r3, #24]
 7063 0134 12F4803F 		tst	r2, #65536
 7064 0138 0ED0     		beq	.L474
 7065 013a 0FE0     		b	.L475
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 262


 7066              	.L478:
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7067              		.loc 1 4148 0
 7068 013c 2823     		movs	r3, #40
 7069 013e 84F84130 		strb	r3, [r4, #65]
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7070              		.loc 1 4149 0
 7071 0142 0022     		movs	r2, #0
 7072 0144 84F84220 		strb	r2, [r4, #66]
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7073              		.loc 1 4152 0
 7074 0148 636C     		ldr	r3, [r4, #68]
 7075 014a 43F01003 		orr	r3, r3, #16
 7076 014e 6364     		str	r3, [r4, #68]
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7077              		.loc 1 4155 0
 7078 0150 84F84020 		strb	r2, [r4, #64]
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7079              		.loc 1 4157 0
 7080 0154 0120     		movs	r0, #1
 7081              	.LVL634:
 7082 0156 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7083              	.LVL635:
 7084              	.L474:
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7085              		.loc 1 4164 0
 7086 0158 0822     		movs	r2, #8
 7087 015a DA61     		str	r2, [r3, #28]
 7088              	.L475:
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7089              		.loc 1 4168 0
 7090 015c 0025     		movs	r5, #0
 7091              	.LVL636:
 7092 015e 84F84050 		strb	r5, [r4, #64]
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7093              		.loc 1 4174 0
 7094 0162 48F20201 		movw	r1, #32770
 7095 0166 2046     		mov	r0, r4
 7096              	.LVL637:
 7097 0168 FFF7FEFF 		bl	I2C_Enable_IRQ
 7098              	.LVL638:
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7099              		.loc 1 4177 0
 7100 016c 2268     		ldr	r2, [r4]
 7101 016e 1368     		ldr	r3, [r2]
 7102 0170 43F40043 		orr	r3, r3, #32768
 7103 0174 1360     		str	r3, [r2]
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7104              		.loc 1 4179 0
 7105 0176 2846     		mov	r0, r5
 7106 0178 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7107              	.LVL639:
 7108              	.L476:
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7109              		.loc 1 4183 0
 7110 017a 0120     		movs	r0, #1
 7111              	.LVL640:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 263


 7112 017c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7113              	.LVL641:
 7114              	.L477:
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7115              		.loc 1 4037 0
 7116 017e 0220     		movs	r0, #2
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7117              		.loc 1 4185 0
 7118 0180 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7119              	.LVL642:
 7120              	.L481:
 7121 0182 00BF     		.align	2
 7122              	.L480:
 7123 0184 00000000 		.word	I2C_DMAAbort
 7124 0188 00000000 		.word	I2C_Slave_ISR_DMA
 7125 018c 00000000 		.word	I2C_DMASlaveReceiveCplt
 7126 0190 00000000 		.word	I2C_DMAError
 7127              		.cfi_endproc
 7128              	.LFE171:
 7130              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7131              		.align	2
 7132              		.global	HAL_I2C_EnableListen_IT
 7133              		.thumb
 7134              		.thumb_func
 7136              	HAL_I2C_EnableListen_IT:
 7137              	.LFB172:
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7138              		.loc 1 4194 0
 7139              		.cfi_startproc
 7140              		@ args = 0, pretend = 0, frame = 0
 7141              		@ frame_needed = 0, uses_anonymous_args = 0
 7142              	.LVL643:
 7143 0000 08B5     		push	{r3, lr}
 7144              	.LCFI84:
 7145              		.cfi_def_cfa_offset 8
 7146              		.cfi_offset 3, -8
 7147              		.cfi_offset 14, -4
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7148              		.loc 1 4195 0
 7149 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7150 0006 DBB2     		uxtb	r3, r3
 7151 0008 202B     		cmp	r3, #32
 7152 000a 0AD1     		bne	.L484
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7153              		.loc 1 4197 0
 7154 000c 2823     		movs	r3, #40
 7155 000e 80F84130 		strb	r3, [r0, #65]
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7156              		.loc 1 4198 0
 7157 0012 054B     		ldr	r3, .L486
 7158 0014 4363     		str	r3, [r0, #52]
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7159              		.loc 1 4201 0
 7160 0016 4FF40041 		mov	r1, #32768
 7161 001a FFF7FEFF 		bl	I2C_Enable_IRQ
 7162              	.LVL644:
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 264


 7163              		.loc 1 4203 0
 7164 001e 0020     		movs	r0, #0
 7165 0020 08BD     		pop	{r3, pc}
 7166              	.LVL645:
 7167              	.L484:
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7168              		.loc 1 4207 0
 7169 0022 0220     		movs	r0, #2
 7170              	.LVL646:
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7171              		.loc 1 4209 0
 7172 0024 08BD     		pop	{r3, pc}
 7173              	.L487:
 7174 0026 00BF     		.align	2
 7175              	.L486:
 7176 0028 00000000 		.word	I2C_Slave_ISR_IT
 7177              		.cfi_endproc
 7178              	.LFE172:
 7180              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7181              		.align	2
 7182              		.global	HAL_I2C_DisableListen_IT
 7183              		.thumb
 7184              		.thumb_func
 7186              	HAL_I2C_DisableListen_IT:
 7187              	.LFB173:
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7188              		.loc 1 4218 0
 7189              		.cfi_startproc
 7190              		@ args = 0, pretend = 0, frame = 0
 7191              		@ frame_needed = 0, uses_anonymous_args = 0
 7192              	.LVL647:
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7193              		.loc 1 4223 0
 7194 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7195 0004 DBB2     		uxtb	r3, r3
 7196 0006 282B     		cmp	r3, #40
 7197 0008 15D1     		bne	.L490
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7198              		.loc 1 4218 0
 7199 000a 10B5     		push	{r4, lr}
 7200              	.LCFI85:
 7201              		.cfi_def_cfa_offset 8
 7202              		.cfi_offset 4, -8
 7203              		.cfi_offset 14, -4
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7204              		.loc 1 4225 0
 7205 000c 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7206              	.LVL648:
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7207              		.loc 1 4226 0
 7208 0010 90F84220 		ldrb	r2, [r0, #66]	@ zero_extendqisi2
 7209 0014 03F00303 		and	r3, r3, #3
 7210              	.LVL649:
 7211 0018 1343     		orrs	r3, r3, r2
 7212 001a 0363     		str	r3, [r0, #48]
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7213              		.loc 1 4227 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 265


 7214 001c 2023     		movs	r3, #32
 7215 001e 80F84130 		strb	r3, [r0, #65]
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7216              		.loc 1 4228 0
 7217 0022 0024     		movs	r4, #0
 7218 0024 80F84240 		strb	r4, [r0, #66]
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7219              		.loc 1 4229 0
 7220 0028 4463     		str	r4, [r0, #52]
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7221              		.loc 1 4232 0
 7222 002a 4FF40041 		mov	r1, #32768
 7223 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 7224              	.LVL650:
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7225              		.loc 1 4234 0
 7226 0032 2046     		mov	r0, r4
 7227 0034 10BD     		pop	{r4, pc}
 7228              	.LVL651:
 7229              	.L490:
 7230              	.LCFI86:
 7231              		.cfi_def_cfa_offset 0
 7232              		.cfi_restore 4
 7233              		.cfi_restore 14
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7234              		.loc 1 4238 0
 7235 0036 0220     		movs	r0, #2
 7236              	.LVL652:
 7237 0038 7047     		bx	lr
 7238              		.cfi_endproc
 7239              	.LFE173:
 7241 003a 00BF     		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7242              		.align	2
 7243              		.global	HAL_I2C_Master_Abort_IT
 7244              		.thumb
 7245              		.thumb_func
 7247              	HAL_I2C_Master_Abort_IT:
 7248              	.LFB174:
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7249              		.loc 1 4251 0
 7250              		.cfi_startproc
 7251              		@ args = 0, pretend = 0, frame = 0
 7252              		@ frame_needed = 0, uses_anonymous_args = 0
 7253              	.LVL653:
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7254              		.loc 1 4252 0
 7255 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7256 0004 DBB2     		uxtb	r3, r3
 7257 0006 102B     		cmp	r3, #16
 7258 0008 34D1     		bne	.L497
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7259              		.loc 1 4255 0
 7260 000a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7261 000e 012B     		cmp	r3, #1
 7262 0010 32D0     		beq	.L498
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7263              		.loc 1 4251 0 discriminator 2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 266


 7264 0012 30B5     		push	{r4, r5, lr}
 7265              	.LCFI87:
 7266              		.cfi_def_cfa_offset 12
 7267              		.cfi_offset 4, -12
 7268              		.cfi_offset 5, -8
 7269              		.cfi_offset 14, -4
 7270 0014 83B0     		sub	sp, sp, #12
 7271              	.LCFI88:
 7272              		.cfi_def_cfa_offset 24
 7273 0016 0C46     		mov	r4, r1
 7274 0018 0546     		mov	r5, r0
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7275              		.loc 1 4255 0 discriminator 2
 7276 001a 0123     		movs	r3, #1
 7277 001c 80F84030 		strb	r3, [r0, #64]
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7278              		.loc 1 4258 0 discriminator 2
 7279 0020 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7280 0024 DBB2     		uxtb	r3, r3
 7281 0026 212B     		cmp	r3, #33
 7282 0028 05D1     		bne	.L495
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7283              		.loc 1 4260 0
 7284 002a 0121     		movs	r1, #1
 7285              	.LVL654:
 7286 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 7287              	.LVL655:
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7288              		.loc 1 4261 0
 7289 0030 1123     		movs	r3, #17
 7290 0032 2B63     		str	r3, [r5, #48]
 7291 0034 09E0     		b	.L496
 7292              	.LVL656:
 7293              	.L495:
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7294              		.loc 1 4263 0
 7295 0036 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7296 003a DBB2     		uxtb	r3, r3
 7297 003c 222B     		cmp	r3, #34
 7298 003e 04D1     		bne	.L496
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7299              		.loc 1 4265 0
 7300 0040 0221     		movs	r1, #2
 7301              	.LVL657:
 7302 0042 FFF7FEFF 		bl	I2C_Disable_IRQ
 7303              	.LVL658:
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 7304              		.loc 1 4266 0
 7305 0046 1223     		movs	r3, #18
 7306 0048 2B63     		str	r3, [r5, #48]
 7307              	.L496:
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7308              		.loc 1 4274 0
 7309 004a 6023     		movs	r3, #96
 7310 004c 85F84130 		strb	r3, [r5, #65]
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7311              		.loc 1 4278 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 267


 7312 0050 0B4B     		ldr	r3, .L501
 7313 0052 0093     		str	r3, [sp]
 7314 0054 4FF00073 		mov	r3, #33554432
 7315 0058 0122     		movs	r2, #1
 7316 005a 2146     		mov	r1, r4
 7317 005c 2846     		mov	r0, r5
 7318 005e FFF7FEFF 		bl	I2C_TransferConfig
 7319              	.LVL659:
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7320              		.loc 1 4281 0
 7321 0062 0024     		movs	r4, #0
 7322 0064 85F84040 		strb	r4, [r5, #64]
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7323              		.loc 1 4286 0
 7324 0068 2021     		movs	r1, #32
 7325 006a 2846     		mov	r0, r5
 7326 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 7327              	.LVL660:
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7328              		.loc 1 4288 0
 7329 0070 2046     		mov	r0, r4
 7330 0072 03E0     		b	.L494
 7331              	.LVL661:
 7332              	.L497:
 7333              	.LCFI89:
 7334              		.cfi_def_cfa_offset 0
 7335              		.cfi_restore 4
 7336              		.cfi_restore 5
 7337              		.cfi_restore 14
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7338              		.loc 1 4294 0
 7339 0074 0120     		movs	r0, #1
 7340              	.LVL662:
 7341 0076 7047     		bx	lr
 7342              	.LVL663:
 7343              	.L498:
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7344              		.loc 1 4255 0
 7345 0078 0220     		movs	r0, #2
 7346              	.LVL664:
 7347 007a 7047     		bx	lr
 7348              	.LVL665:
 7349              	.L494:
 7350              	.LCFI90:
 7351              		.cfi_def_cfa_offset 24
 7352              		.cfi_offset 4, -12
 7353              		.cfi_offset 5, -8
 7354              		.cfi_offset 14, -4
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7355              		.loc 1 4296 0
 7356 007c 03B0     		add	sp, sp, #12
 7357              	.LCFI91:
 7358              		.cfi_def_cfa_offset 12
 7359              		@ sp needed
 7360 007e 30BD     		pop	{r4, r5, pc}
 7361              	.LVL666:
 7362              	.L502:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 268


 7363              		.align	2
 7364              	.L501:
 7365 0080 00400080 		.word	-2147467264
 7366              		.cfi_endproc
 7367              	.LFE174:
 7369              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7370              		.align	2
 7371              		.global	HAL_I2C_EV_IRQHandler
 7372              		.thumb
 7373              		.thumb_func
 7375              	HAL_I2C_EV_IRQHandler:
 7376              	.LFB175:
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7377              		.loc 1 4313 0
 7378              		.cfi_startproc
 7379              		@ args = 0, pretend = 0, frame = 0
 7380              		@ frame_needed = 0, uses_anonymous_args = 0
 7381              	.LVL667:
 7382 0000 08B5     		push	{r3, lr}
 7383              	.LCFI92:
 7384              		.cfi_def_cfa_offset 8
 7385              		.cfi_offset 3, -8
 7386              		.cfi_offset 14, -4
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7387              		.loc 1 4315 0
 7388 0002 0368     		ldr	r3, [r0]
 7389 0004 9969     		ldr	r1, [r3, #24]
 7390              	.LVL668:
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7391              		.loc 1 4316 0
 7392 0006 1A68     		ldr	r2, [r3]
 7393              	.LVL669:
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7394              		.loc 1 4319 0
 7395 0008 436B     		ldr	r3, [r0, #52]
 7396 000a 03B1     		cbz	r3, .L503
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7397              		.loc 1 4321 0
 7398 000c 9847     		blx	r3
 7399              	.LVL670:
 7400              	.L503:
 7401 000e 08BD     		pop	{r3, pc}
 7402              		.cfi_endproc
 7403              	.LFE175:
 7405              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7406              		.align	2
 7407              		.weak	HAL_I2C_MasterTxCpltCallback
 7408              		.thumb
 7409              		.thumb_func
 7411              	HAL_I2C_MasterTxCpltCallback:
 7412              	.LFB177:
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7413              		.loc 1 4381 0
 7414              		.cfi_startproc
 7415              		@ args = 0, pretend = 0, frame = 0
 7416              		@ frame_needed = 0, uses_anonymous_args = 0
 7417              		@ link register save eliminated.
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 269


 7418              	.LVL671:
 7419 0000 7047     		bx	lr
 7420              		.cfi_endproc
 7421              	.LFE177:
 7423 0002 00BF     		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7424              		.align	2
 7425              		.weak	HAL_I2C_MasterRxCpltCallback
 7426              		.thumb
 7427              		.thumb_func
 7429              	HAL_I2C_MasterRxCpltCallback:
 7430              	.LFB178:
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7431              		.loc 1 4397 0
 7432              		.cfi_startproc
 7433              		@ args = 0, pretend = 0, frame = 0
 7434              		@ frame_needed = 0, uses_anonymous_args = 0
 7435              		@ link register save eliminated.
 7436              	.LVL672:
 7437 0000 7047     		bx	lr
 7438              		.cfi_endproc
 7439              	.LFE178:
 7441 0002 00BF     		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7442              		.align	2
 7443              		.thumb
 7444              		.thumb_func
 7446              	I2C_ITMasterSeqCplt:
 7447              	.LFB197:
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7448              		.loc 1 5350 0
 7449              		.cfi_startproc
 7450              		@ args = 0, pretend = 0, frame = 0
 7451              		@ frame_needed = 0, uses_anonymous_args = 0
 7452              	.LVL673:
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7453              		.loc 1 5350 0
 7454 0000 38B5     		push	{r3, r4, r5, lr}
 7455              	.LCFI93:
 7456              		.cfi_def_cfa_offset 16
 7457              		.cfi_offset 3, -16
 7458              		.cfi_offset 4, -12
 7459              		.cfi_offset 5, -8
 7460              		.cfi_offset 14, -4
 7461 0002 0446     		mov	r4, r0
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7462              		.loc 1 5352 0
 7463 0004 0023     		movs	r3, #0
 7464 0006 80F84230 		strb	r3, [r0, #66]
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7465              		.loc 1 5356 0
 7466 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7467 000e DBB2     		uxtb	r3, r3
 7468 0010 212B     		cmp	r3, #33
 7469 0012 0FD1     		bne	.L509
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7470              		.loc 1 5358 0
 7471 0014 2023     		movs	r3, #32
 7472 0016 80F84130 		strb	r3, [r0, #65]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 270


5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7473              		.loc 1 5359 0
 7474 001a 1123     		movs	r3, #17
 7475 001c 0363     		str	r3, [r0, #48]
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7476              		.loc 1 5360 0
 7477 001e 0025     		movs	r5, #0
 7478 0020 4563     		str	r5, [r0, #52]
5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7479              		.loc 1 5363 0
 7480 0022 0121     		movs	r1, #1
 7481 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7482              	.LVL674:
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7483              		.loc 1 5366 0
 7484 0028 84F84050 		strb	r5, [r4, #64]
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7485              		.loc 1 5372 0
 7486 002c 2046     		mov	r0, r4
 7487 002e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7488              	.LVL675:
 7489 0032 38BD     		pop	{r3, r4, r5, pc}
 7490              	.LVL676:
 7491              	.L509:
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7492              		.loc 1 5378 0
 7493 0034 2023     		movs	r3, #32
 7494 0036 80F84130 		strb	r3, [r0, #65]
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7495              		.loc 1 5379 0
 7496 003a 1223     		movs	r3, #18
 7497 003c 0363     		str	r3, [r0, #48]
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7498              		.loc 1 5380 0
 7499 003e 0025     		movs	r5, #0
 7500 0040 4563     		str	r5, [r0, #52]
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7501              		.loc 1 5383 0
 7502 0042 0221     		movs	r1, #2
 7503 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7504              	.LVL677:
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7505              		.loc 1 5386 0
 7506 0048 84F84050 		strb	r5, [r4, #64]
5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7507              		.loc 1 5392 0
 7508 004c 2046     		mov	r0, r4
 7509 004e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7510              	.LVL678:
 7511 0052 38BD     		pop	{r3, r4, r5, pc}
 7512              		.cfi_endproc
 7513              	.LFE197:
 7515              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7516              		.align	2
 7517              		.weak	HAL_I2C_SlaveTxCpltCallback
 7518              		.thumb
 7519              		.thumb_func
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 271


 7521              	HAL_I2C_SlaveTxCpltCallback:
 7522              	.LFB179:
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7523              		.loc 1 4412 0
 7524              		.cfi_startproc
 7525              		@ args = 0, pretend = 0, frame = 0
 7526              		@ frame_needed = 0, uses_anonymous_args = 0
 7527              		@ link register save eliminated.
 7528              	.LVL679:
 7529 0000 7047     		bx	lr
 7530              		.cfi_endproc
 7531              	.LFE179:
 7533 0002 00BF     		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7534              		.align	2
 7535              		.weak	HAL_I2C_SlaveRxCpltCallback
 7536              		.thumb
 7537              		.thumb_func
 7539              	HAL_I2C_SlaveRxCpltCallback:
 7540              	.LFB180:
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7541              		.loc 1 4428 0
 7542              		.cfi_startproc
 7543              		@ args = 0, pretend = 0, frame = 0
 7544              		@ frame_needed = 0, uses_anonymous_args = 0
 7545              		@ link register save eliminated.
 7546              	.LVL680:
 7547 0000 7047     		bx	lr
 7548              		.cfi_endproc
 7549              	.LFE180:
 7551 0002 00BF     		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7552              		.align	2
 7553              		.thumb
 7554              		.thumb_func
 7556              	I2C_ITSlaveSeqCplt:
 7557              	.LFB198:
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7558              		.loc 1 5403 0
 7559              		.cfi_startproc
 7560              		@ args = 0, pretend = 0, frame = 0
 7561              		@ frame_needed = 0, uses_anonymous_args = 0
 7562              	.LVL681:
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7563              		.loc 1 5403 0
 7564 0000 10B5     		push	{r4, lr}
 7565              	.LCFI94:
 7566              		.cfi_def_cfa_offset 8
 7567              		.cfi_offset 4, -8
 7568              		.cfi_offset 14, -4
 7569 0002 0446     		mov	r4, r0
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7570              		.loc 1 5404 0
 7571 0004 0368     		ldr	r3, [r0]
 7572 0006 1A68     		ldr	r2, [r3]
 7573              	.LVL682:
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7574              		.loc 1 5407 0
 7575 0008 0021     		movs	r1, #0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 272


 7576 000a 80F84210 		strb	r1, [r0, #66]
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7577              		.loc 1 5410 0
 7578 000e 12F4804F 		tst	r2, #16384
 7579 0012 04D0     		beq	.L515
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7580              		.loc 1 5413 0
 7581 0014 1A68     		ldr	r2, [r3]
 7582              	.LVL683:
 7583 0016 22F48042 		bic	r2, r2, #16384
 7584 001a 1A60     		str	r2, [r3]
 7585 001c 06E0     		b	.L516
 7586              	.LVL684:
 7587              	.L515:
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7588              		.loc 1 5415 0
 7589 001e 12F4004F 		tst	r2, #32768
 7590 0022 03D0     		beq	.L516
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7591              		.loc 1 5418 0
 7592 0024 1A68     		ldr	r2, [r3]
 7593              	.LVL685:
 7594 0026 22F40042 		bic	r2, r2, #32768
 7595 002a 1A60     		str	r2, [r3]
 7596              	.L516:
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7597              		.loc 1 5425 0
 7598 002c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7599 0030 DBB2     		uxtb	r3, r3
 7600 0032 292B     		cmp	r3, #41
 7601 0034 0FD1     		bne	.L517
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7602              		.loc 1 5428 0
 7603 0036 2823     		movs	r3, #40
 7604 0038 84F84130 		strb	r3, [r4, #65]
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7605              		.loc 1 5429 0
 7606 003c 2123     		movs	r3, #33
 7607 003e 2363     		str	r3, [r4, #48]
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7608              		.loc 1 5432 0
 7609 0040 0121     		movs	r1, #1
 7610 0042 2046     		mov	r0, r4
 7611              	.LVL686:
 7612 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7613              	.LVL687:
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7614              		.loc 1 5435 0
 7615 0048 0023     		movs	r3, #0
 7616 004a 84F84030 		strb	r3, [r4, #64]
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7617              		.loc 1 5441 0
 7618 004e 2046     		mov	r0, r4
 7619 0050 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7620              	.LVL688:
 7621 0054 10BD     		pop	{r4, pc}
 7622              	.LVL689:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 273


 7623              	.L517:
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7624              		.loc 1 5445 0
 7625 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7626 005a DBB2     		uxtb	r3, r3
 7627 005c 2A2B     		cmp	r3, #42
 7628 005e 0ED1     		bne	.L514
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7629              		.loc 1 5448 0
 7630 0060 2823     		movs	r3, #40
 7631 0062 84F84130 		strb	r3, [r4, #65]
5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7632              		.loc 1 5449 0
 7633 0066 2223     		movs	r3, #34
 7634 0068 2363     		str	r3, [r4, #48]
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7635              		.loc 1 5452 0
 7636 006a 0221     		movs	r1, #2
 7637 006c 2046     		mov	r0, r4
 7638              	.LVL690:
 7639 006e FFF7FEFF 		bl	I2C_Disable_IRQ
 7640              	.LVL691:
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7641              		.loc 1 5455 0
 7642 0072 0023     		movs	r3, #0
 7643 0074 84F84030 		strb	r3, [r4, #64]
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7644              		.loc 1 5461 0
 7645 0078 2046     		mov	r0, r4
 7646 007a FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7647              	.LVL692:
 7648              	.L514:
 7649 007e 10BD     		pop	{r4, pc}
 7650              		.cfi_endproc
 7651              	.LFE198:
 7653              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7654              		.align	2
 7655              		.thumb
 7656              		.thumb_func
 7658              	I2C_DMASlaveTransmitCplt:
 7659              	.LFB206:
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7660              		.loc 1 6047 0
 7661              		.cfi_startproc
 7662              		@ args = 0, pretend = 0, frame = 0
 7663              		@ frame_needed = 0, uses_anonymous_args = 0
 7664              	.LVL693:
 7665 0000 08B5     		push	{r3, lr}
 7666              	.LCFI95:
 7667              		.cfi_def_cfa_offset 8
 7668              		.cfi_offset 3, -8
 7669              		.cfi_offset 14, -4
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7670              		.loc 1 6048 0
 7671 0002 806B     		ldr	r0, [r0, #56]
 7672              	.LVL694:
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 274


 7673              		.loc 1 6049 0
 7674 0004 C36A     		ldr	r3, [r0, #44]
 7675              	.LVL695:
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7676              		.loc 1 6051 0
 7677 0006 002B     		cmp	r3, #0
 7678 0008 18BF     		it	ne
 7679 000a B3F1807F 		cmpne	r3, #16777216
 7680 000e 06D1     		bne	.L520
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7681              		.loc 1 6054 0
 7682 0010 0268     		ldr	r2, [r0]
 7683 0012 1368     		ldr	r3, [r2]
 7684              	.LVL696:
 7685 0014 23F48043 		bic	r3, r3, #16384
 7686 0018 1360     		str	r3, [r2]
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7687              		.loc 1 6058 0
 7688 001a FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7689              	.LVL697:
 7690              	.L520:
 7691 001e 08BD     		pop	{r3, pc}
 7692              		.cfi_endproc
 7693              	.LFE206:
 7695              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7696              		.align	2
 7697              		.thumb
 7698              		.thumb_func
 7700              	I2C_DMASlaveReceiveCplt:
 7701              	.LFB208:
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7702              		.loc 1 6122 0
 7703              		.cfi_startproc
 7704              		@ args = 0, pretend = 0, frame = 0
 7705              		@ frame_needed = 0, uses_anonymous_args = 0
 7706              	.LVL698:
 7707 0000 10B5     		push	{r4, lr}
 7708              	.LCFI96:
 7709              		.cfi_def_cfa_offset 8
 7710              		.cfi_offset 4, -8
 7711              		.cfi_offset 14, -4
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7712              		.loc 1 6123 0
 7713 0002 806B     		ldr	r0, [r0, #56]
 7714              	.LVL699:
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7715              		.loc 1 6124 0
 7716 0004 C46A     		ldr	r4, [r0, #44]
 7717              	.LVL700:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7718              		.loc 1 6126 0
 7719 0006 C36B     		ldr	r3, [r0, #60]
 7720 0008 1B68     		ldr	r3, [r3]
 7721 000a 234A     		ldr	r2, .L529
 7722 000c 2349     		ldr	r1, .L529+4
 7723 000e 9342     		cmp	r3, r2
 7724 0010 18BF     		it	ne
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 275


 7725 0012 8B42     		cmpne	r3, r1
 7726 0014 2AD0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7727              		.loc 1 6126 0 is_stmt 0 discriminator 2
 7728 0016 1832     		adds	r2, r2, #24
 7729 0018 9342     		cmp	r3, r2
 7730 001a 27D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7731              		.loc 1 6126 0 discriminator 4
 7732 001c 1832     		adds	r2, r2, #24
 7733 001e 9342     		cmp	r3, r2
 7734 0020 24D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7735              		.loc 1 6126 0 discriminator 6
 7736 0022 1832     		adds	r2, r2, #24
 7737 0024 9342     		cmp	r3, r2
 7738 0026 21D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7739              		.loc 1 6126 0 discriminator 8
 7740 0028 1832     		adds	r2, r2, #24
 7741 002a 9342     		cmp	r3, r2
 7742 002c 1ED0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7743              		.loc 1 6126 0 discriminator 10
 7744 002e 1832     		adds	r2, r2, #24
 7745 0030 9342     		cmp	r3, r2
 7746 0032 1BD0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7747              		.loc 1 6126 0 discriminator 12
 7748 0034 1832     		adds	r2, r2, #24
 7749 0036 9342     		cmp	r3, r2
 7750 0038 18D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7751              		.loc 1 6126 0 discriminator 14
 7752 003a 02F55672 		add	r2, r2, #856
 7753 003e 9342     		cmp	r3, r2
 7754 0040 14D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7755              		.loc 1 6126 0 discriminator 16
 7756 0042 1832     		adds	r2, r2, #24
 7757 0044 9342     		cmp	r3, r2
 7758 0046 11D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7759              		.loc 1 6126 0 discriminator 18
 7760 0048 1832     		adds	r2, r2, #24
 7761 004a 9342     		cmp	r3, r2
 7762 004c 0ED0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7763              		.loc 1 6126 0 discriminator 20
 7764 004e 1832     		adds	r2, r2, #24
 7765 0050 9342     		cmp	r3, r2
 7766 0052 0BD0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7767              		.loc 1 6126 0 discriminator 22
 7768 0054 1832     		adds	r2, r2, #24
 7769 0056 9342     		cmp	r3, r2
 7770 0058 08D0     		beq	.L524
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 276


6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7771              		.loc 1 6126 0 discriminator 24
 7772 005a 1832     		adds	r2, r2, #24
 7773 005c 9342     		cmp	r3, r2
 7774 005e 05D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7775              		.loc 1 6126 0 discriminator 26
 7776 0060 1832     		adds	r2, r2, #24
 7777 0062 9342     		cmp	r3, r2
 7778 0064 02D0     		beq	.L524
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7779              		.loc 1 6126 0 discriminator 28
 7780 0066 1832     		adds	r2, r2, #24
 7781 0068 9342     		cmp	r3, r2
 7782 006a 04D1     		bne	.L525
 7783              	.L524:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7784              		.loc 1 6126 0 discriminator 29
 7785 006c 5B68     		ldr	r3, [r3, #4]
 7786 006e B3FA83F3 		clz	r3, r3
 7787 0072 5B09     		lsrs	r3, r3, #5
 7788 0074 03E0     		b	.L526
 7789              	.L525:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7790              		.loc 1 6126 0 discriminator 30
 7791 0076 5B68     		ldr	r3, [r3, #4]
 7792 0078 B3FA83F3 		clz	r3, r3
 7793 007c 5B09     		lsrs	r3, r3, #5
 7794              	.L526:
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7795              		.loc 1 6126 0 discriminator 32
 7796 007e 4BB1     		cbz	r3, .L523
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7797              		.loc 1 6126 0 discriminator 33
 7798 0080 14F5803F 		cmn	r4, #65536
 7799 0084 06D0     		beq	.L523
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7800              		.loc 1 6130 0 is_stmt 1
 7801 0086 0268     		ldr	r2, [r0]
 7802 0088 1368     		ldr	r3, [r2]
 7803 008a 23F40043 		bic	r3, r3, #32768
 7804 008e 1360     		str	r3, [r2]
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7805              		.loc 1 6133 0
 7806 0090 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7807              	.LVL701:
 7808              	.L523:
 7809 0094 10BD     		pop	{r4, pc}
 7810              	.LVL702:
 7811              	.L530:
 7812 0096 00BF     		.align	2
 7813              	.L529:
 7814 0098 28000240 		.word	1073872936
 7815 009c 10000240 		.word	1073872912
 7816              		.cfi_endproc
 7817              	.LFE208:
 7819              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 277


 7820              		.align	2
 7821              		.weak	HAL_I2C_AddrCallback
 7822              		.thumb
 7823              		.thumb_func
 7825              	HAL_I2C_AddrCallback:
 7826              	.LFB181:
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7827              		.loc 1 4446 0
 7828              		.cfi_startproc
 7829              		@ args = 0, pretend = 0, frame = 0
 7830              		@ frame_needed = 0, uses_anonymous_args = 0
 7831              		@ link register save eliminated.
 7832              	.LVL703:
 7833 0000 7047     		bx	lr
 7834              		.cfi_endproc
 7835              	.LFE181:
 7837 0002 00BF     		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7838              		.align	2
 7839              		.thumb
 7840              		.thumb_func
 7842              	I2C_ITAddrCplt:
 7843              	.LFB196:
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint8_t transferdirection;
 7844              		.loc 1 5255 0
 7845              		.cfi_startproc
 7846              		@ args = 0, pretend = 0, frame = 0
 7847              		@ frame_needed = 0, uses_anonymous_args = 0
 7848              	.LVL704:
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint8_t transferdirection;
 7849              		.loc 1 5255 0
 7850 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7851              	.LCFI97:
 7852              		.cfi_def_cfa_offset 24
 7853              		.cfi_offset 3, -24
 7854              		.cfi_offset 4, -20
 7855              		.cfi_offset 5, -16
 7856              		.cfi_offset 6, -12
 7857              		.cfi_offset 7, -8
 7858              		.cfi_offset 14, -4
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 7859              		.loc 1 5265 0
 7860 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7861 0006 03F02803 		and	r3, r3, #40
 7862 000a 282B     		cmp	r3, #40
 7863 000c 44D1     		bne	.L533
 7864 000e 0446     		mov	r4, r0
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 7865              		.loc 1 5267 0
 7866 0010 0068     		ldr	r0, [r0]
 7867              	.LVL705:
 7868 0012 8569     		ldr	r5, [r0, #24]
 7869 0014 C5F30045 		ubfx	r5, r5, #16, #1
 7870              	.LVL706:
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 7871              		.loc 1 5268 0
 7872 0018 8369     		ldr	r3, [r0, #24]
 7873 001a 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 278


 7874 001c 03F0FE03 		and	r3, r3, #254
 7875 0020 9EB2     		uxth	r6, r3
 7876              	.LVL707:
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 7877              		.loc 1 5269 0
 7878 0022 8268     		ldr	r2, [r0, #8]
 7879 0024 C2F30902 		ubfx	r2, r2, #0, #10
 7880              	.LVL708:
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7881              		.loc 1 5270 0
 7882 0028 C168     		ldr	r1, [r0, #12]
 7883              	.LVL709:
 7884 002a 01F0FE07 		and	r7, r1, #254
 7885              	.LVL710:
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 7886              		.loc 1 5273 0
 7887 002e E168     		ldr	r1, [r4, #12]
 7888 0030 0229     		cmp	r1, #2
 7889 0032 23D1     		bne	.L534
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 7890              		.loc 1 5275 0
 7891 0034 83EAD213 		eor	r3, r3, r2, lsr #7
 7892 0038 13F0060F 		tst	r3, #6
 7893 003c 10D1     		bne	.L535
 7894              	.LVL711:
5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 7895              		.loc 1 5278 0
 7896 003e A36C     		ldr	r3, [r4, #72]
 7897 0040 0133     		adds	r3, r3, #1
 7898 0042 A364     		str	r3, [r4, #72]
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 7899              		.loc 1 5279 0
 7900 0044 A36C     		ldr	r3, [r4, #72]
 7901 0046 022B     		cmp	r3, #2
 7902 0048 2CD1     		bne	.L532
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7903              		.loc 1 5282 0
 7904 004a 0023     		movs	r3, #0
 7905 004c A364     		str	r3, [r4, #72]
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7906              		.loc 1 5285 0
 7907 004e 0821     		movs	r1, #8
 7908 0050 C161     		str	r1, [r0, #28]
5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7909              		.loc 1 5288 0
 7910 0052 84F84030 		strb	r3, [r4, #64]
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7911              		.loc 1 5294 0
 7912 0056 2946     		mov	r1, r5
 7913 0058 2046     		mov	r0, r4
 7914 005a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7915              	.LVL712:
 7916 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7917              	.LVL713:
 7918              	.L535:
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7919              		.loc 1 5303 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 279


 7920 0060 4FF40041 		mov	r1, #32768
 7921 0064 2046     		mov	r0, r4
 7922 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 7923              	.LVL714:
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7924              		.loc 1 5306 0
 7925 006a 0023     		movs	r3, #0
 7926 006c 84F84030 		strb	r3, [r4, #64]
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7927              		.loc 1 5312 0
 7928 0070 3A46     		mov	r2, r7
 7929 0072 2946     		mov	r1, r5
 7930 0074 2046     		mov	r0, r4
 7931 0076 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7932              	.LVL715:
 7933 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7934              	.LVL716:
 7935              	.L534:
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7936              		.loc 1 5320 0
 7937 007c 4FF40041 		mov	r1, #32768
 7938 0080 2046     		mov	r0, r4
 7939 0082 FFF7FEFF 		bl	I2C_Disable_IRQ
 7940              	.LVL717:
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7941              		.loc 1 5323 0
 7942 0086 0023     		movs	r3, #0
 7943 0088 84F84030 		strb	r3, [r4, #64]
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7944              		.loc 1 5329 0
 7945 008c 3246     		mov	r2, r6
 7946 008e 2946     		mov	r1, r5
 7947 0090 2046     		mov	r0, r4
 7948 0092 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7949              	.LVL718:
 7950 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7951              	.LVL719:
 7952              	.L533:
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 7953              		.loc 1 5337 0
 7954 0098 0368     		ldr	r3, [r0]
 7955 009a 0822     		movs	r2, #8
 7956 009c DA61     		str	r2, [r3, #28]
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 7957              		.loc 1 5340 0
 7958 009e 0023     		movs	r3, #0
 7959 00a0 80F84030 		strb	r3, [r0, #64]
 7960              	.LVL720:
 7961              	.L532:
 7962 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7963              		.cfi_endproc
 7964              	.LFE196:
 7966 00a6 00BF     		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 7967              		.align	2
 7968              		.weak	HAL_I2C_ListenCpltCallback
 7969              		.thumb
 7970              		.thumb_func
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 280


 7972              	HAL_I2C_ListenCpltCallback:
 7973              	.LFB182:
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7974              		.loc 1 4464 0
 7975              		.cfi_startproc
 7976              		@ args = 0, pretend = 0, frame = 0
 7977              		@ frame_needed = 0, uses_anonymous_args = 0
 7978              		@ link register save eliminated.
 7979              	.LVL721:
 7980 0000 7047     		bx	lr
 7981              		.cfi_endproc
 7982              	.LFE182:
 7984 0002 00BF     		.section	.text.I2C_ITListenCplt,"ax",%progbits
 7985              		.align	2
 7986              		.thumb
 7987              		.thumb_func
 7989              	I2C_ITListenCplt:
 7990              	.LFB201:
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
 7991              		.loc 1 5779 0
 7992              		.cfi_startproc
 7993              		@ args = 0, pretend = 0, frame = 0
 7994              		@ frame_needed = 0, uses_anonymous_args = 0
 7995              	.LVL722:
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Reset handle parameters */
 7996              		.loc 1 5779 0
 7997 0000 10B5     		push	{r4, lr}
 7998              	.LCFI98:
 7999              		.cfi_def_cfa_offset 8
 8000              		.cfi_offset 4, -8
 8001              		.cfi_offset 14, -4
 8002 0002 0446     		mov	r4, r0
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8003              		.loc 1 5781 0
 8004 0004 174B     		ldr	r3, .L542
 8005 0006 C362     		str	r3, [r0, #44]
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8006              		.loc 1 5782 0
 8007 0008 0023     		movs	r3, #0
 8008 000a 0363     		str	r3, [r0, #48]
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8009              		.loc 1 5783 0
 8010 000c 2022     		movs	r2, #32
 8011 000e 80F84120 		strb	r2, [r0, #65]
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8012              		.loc 1 5784 0
 8013 0012 80F84230 		strb	r3, [r0, #66]
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8014              		.loc 1 5785 0
 8015 0016 4363     		str	r3, [r0, #52]
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8016              		.loc 1 5788 0
 8017 0018 11F0040F 		tst	r1, #4
 8018 001c 13D0     		beq	.L540
5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8019              		.loc 1 5791 0
 8020 001e 436A     		ldr	r3, [r0, #36]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 281


 8021 0020 0268     		ldr	r2, [r0]
 8022 0022 526A     		ldr	r2, [r2, #36]
 8023 0024 1A70     		strb	r2, [r3]
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8024              		.loc 1 5794 0
 8025 0026 436A     		ldr	r3, [r0, #36]
 8026 0028 0133     		adds	r3, r3, #1
 8027 002a 4362     		str	r3, [r0, #36]
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8028              		.loc 1 5796 0
 8029 002c 038D     		ldrh	r3, [r0, #40]
 8030 002e 53B1     		cbz	r3, .L540
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 8031              		.loc 1 5798 0
 8032 0030 013B     		subs	r3, r3, #1
 8033 0032 0385     		strh	r3, [r0, #40]	@ movhi
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8034              		.loc 1 5799 0
 8035 0034 438D     		ldrh	r3, [r0, #42]
 8036 0036 9BB2     		uxth	r3, r3
 8037 0038 013B     		subs	r3, r3, #1
 8038 003a 9BB2     		uxth	r3, r3
 8039 003c 4385     		strh	r3, [r0, #42]	@ movhi
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8040              		.loc 1 5802 0
 8041 003e 436C     		ldr	r3, [r0, #68]
 8042 0040 43F00403 		orr	r3, r3, #4
 8043 0044 4364     		str	r3, [r0, #68]
 8044              	.L540:
5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8045              		.loc 1 5807 0
 8046 0046 48F20301 		movw	r1, #32771
 8047              	.LVL723:
 8048 004a 2046     		mov	r0, r4
 8049              	.LVL724:
 8050 004c FFF7FEFF 		bl	I2C_Disable_IRQ
 8051              	.LVL725:
5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8052              		.loc 1 5810 0
 8053 0050 2368     		ldr	r3, [r4]
 8054 0052 1022     		movs	r2, #16
 8055 0054 DA61     		str	r2, [r3, #28]
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8056              		.loc 1 5813 0
 8057 0056 0023     		movs	r3, #0
 8058 0058 84F84030 		strb	r3, [r4, #64]
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8059              		.loc 1 5819 0
 8060 005c 2046     		mov	r0, r4
 8061 005e FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8062              	.LVL726:
 8063 0062 10BD     		pop	{r4, pc}
 8064              	.LVL727:
 8065              	.L543:
 8066              		.align	2
 8067              	.L542:
 8068 0064 0000FFFF 		.word	-65536
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 282


 8069              		.cfi_endproc
 8070              	.LFE201:
 8072              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8073              		.align	2
 8074              		.weak	HAL_I2C_MemTxCpltCallback
 8075              		.thumb
 8076              		.thumb_func
 8078              	HAL_I2C_MemTxCpltCallback:
 8079              	.LFB183:
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8080              		.loc 1 4480 0
 8081              		.cfi_startproc
 8082              		@ args = 0, pretend = 0, frame = 0
 8083              		@ frame_needed = 0, uses_anonymous_args = 0
 8084              		@ link register save eliminated.
 8085              	.LVL728:
 8086 0000 7047     		bx	lr
 8087              		.cfi_endproc
 8088              	.LFE183:
 8090 0002 00BF     		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8091              		.align	2
 8092              		.weak	HAL_I2C_MemRxCpltCallback
 8093              		.thumb
 8094              		.thumb_func
 8096              	HAL_I2C_MemRxCpltCallback:
 8097              	.LFB184:
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8098              		.loc 1 4496 0
 8099              		.cfi_startproc
 8100              		@ args = 0, pretend = 0, frame = 0
 8101              		@ frame_needed = 0, uses_anonymous_args = 0
 8102              		@ link register save eliminated.
 8103              	.LVL729:
 8104 0000 7047     		bx	lr
 8105              		.cfi_endproc
 8106              	.LFE184:
 8108 0002 00BF     		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8109              		.align	2
 8110              		.weak	HAL_I2C_ErrorCallback
 8111              		.thumb
 8112              		.thumb_func
 8114              	HAL_I2C_ErrorCallback:
 8115              	.LFB185:
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8116              		.loc 1 4512 0
 8117              		.cfi_startproc
 8118              		@ args = 0, pretend = 0, frame = 0
 8119              		@ frame_needed = 0, uses_anonymous_args = 0
 8120              		@ link register save eliminated.
 8121              	.LVL730:
 8122 0000 7047     		bx	lr
 8123              		.cfi_endproc
 8124              	.LFE185:
 8126 0002 00BF     		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8127              		.align	2
 8128              		.weak	HAL_I2C_AbortCpltCallback
 8129              		.thumb
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 283


 8130              		.thumb_func
 8132              	HAL_I2C_AbortCpltCallback:
 8133              	.LFB186:
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8134              		.loc 1 4528 0
 8135              		.cfi_startproc
 8136              		@ args = 0, pretend = 0, frame = 0
 8137              		@ frame_needed = 0, uses_anonymous_args = 0
 8138              		@ link register save eliminated.
 8139              	.LVL731:
 8140 0000 7047     		bx	lr
 8141              		.cfi_endproc
 8142              	.LFE186:
 8144 0002 00BF     		.section	.text.I2C_TreatErrorCallback,"ax",%progbits
 8145              		.align	2
 8146              		.thumb
 8147              		.thumb_func
 8149              	I2C_TreatErrorCallback:
 8150              	.LFB203:
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8151              		.loc 1 5940 0
 8152              		.cfi_startproc
 8153              		@ args = 0, pretend = 0, frame = 0
 8154              		@ frame_needed = 0, uses_anonymous_args = 0
 8155              	.LVL732:
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8156              		.loc 1 5940 0
 8157 0000 08B5     		push	{r3, lr}
 8158              	.LCFI99:
 8159              		.cfi_def_cfa_offset 8
 8160              		.cfi_offset 3, -8
 8161              		.cfi_offset 14, -4
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8162              		.loc 1 5941 0
 8163 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8164 0006 DBB2     		uxtb	r3, r3
 8165 0008 602B     		cmp	r3, #96
 8166 000a 09D1     		bne	.L549
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8167              		.loc 1 5943 0
 8168 000c 2023     		movs	r3, #32
 8169 000e 80F84130 		strb	r3, [r0, #65]
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8170              		.loc 1 5944 0
 8171 0012 0023     		movs	r3, #0
 8172 0014 0363     		str	r3, [r0, #48]
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8173              		.loc 1 5947 0
 8174 0016 80F84030 		strb	r3, [r0, #64]
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8175              		.loc 1 5953 0
 8176 001a FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8177              	.LVL733:
 8178 001e 08BD     		pop	{r3, pc}
 8179              	.LVL734:
 8180              	.L549:
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 284


 8181              		.loc 1 5958 0
 8182 0020 0023     		movs	r3, #0
 8183 0022 0363     		str	r3, [r0, #48]
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8184              		.loc 1 5961 0
 8185 0024 80F84030 		strb	r3, [r0, #64]
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8186              		.loc 1 5967 0
 8187 0028 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8188              	.LVL735:
 8189 002c 08BD     		pop	{r3, pc}
 8190              		.cfi_endproc
 8191              	.LFE203:
 8193 002e 00BF     		.section	.text.I2C_ITError,"ax",%progbits
 8194              		.align	2
 8195              		.thumb
 8196              		.thumb_func
 8198              	I2C_ITError:
 8199              	.LFB202:
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8200              		.loc 1 5830 0
 8201              		.cfi_startproc
 8202              		@ args = 0, pretend = 0, frame = 0
 8203              		@ frame_needed = 0, uses_anonymous_args = 0
 8204              	.LVL736:
 8205 0000 10B5     		push	{r4, lr}
 8206              	.LCFI100:
 8207              		.cfi_def_cfa_offset 8
 8208              		.cfi_offset 4, -8
 8209              		.cfi_offset 14, -4
 8210 0002 0446     		mov	r4, r0
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
 8211              		.loc 1 5831 0
 8212 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8213              	.LVL737:
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8214              		.loc 1 5835 0
 8215 0008 0022     		movs	r2, #0
 8216 000a 80F84220 		strb	r2, [r0, #66]
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8217              		.loc 1 5836 0
 8218 000e 3A48     		ldr	r0, .L564
 8219              	.LVL738:
 8220 0010 E062     		str	r0, [r4, #44]
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8221              		.loc 1 5837 0
 8222 0012 6285     		strh	r2, [r4, #42]	@ movhi
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8223              		.loc 1 5840 0
 8224 0014 626C     		ldr	r2, [r4, #68]
 8225 0016 1143     		orrs	r1, r1, r2
 8226              	.LVL739:
 8227 0018 6164     		str	r1, [r4, #68]
5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8228              		.loc 1 5844 0
 8229 001a 283B     		subs	r3, r3, #40
 8230              	.LVL740:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 285


 8231 001c DBB2     		uxtb	r3, r3
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8232              		.loc 1 5843 0
 8233 001e 022B     		cmp	r3, #2
 8234 0020 09D8     		bhi	.L553
5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8235              		.loc 1 5848 0
 8236 0022 0321     		movs	r1, #3
 8237 0024 2046     		mov	r0, r4
 8238 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8239              	.LVL741:
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8240              		.loc 1 5851 0
 8241 002a 2823     		movs	r3, #40
 8242 002c 84F84130 		strb	r3, [r4, #65]
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8243              		.loc 1 5852 0
 8244 0030 324B     		ldr	r3, .L564+4
 8245 0032 6363     		str	r3, [r4, #52]
 8246 0034 0EE0     		b	.L554
 8247              	.L553:
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8248              		.loc 1 5857 0
 8249 0036 48F20301 		movw	r1, #32771
 8250 003a 2046     		mov	r0, r4
 8251 003c FFF7FEFF 		bl	I2C_Disable_IRQ
 8252              	.LVL742:
5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8253              		.loc 1 5861 0
 8254 0040 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8255 0044 DBB2     		uxtb	r3, r3
 8256 0046 602B     		cmp	r3, #96
 8257 0048 02D0     		beq	.L555
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8258              		.loc 1 5864 0
 8259 004a 2023     		movs	r3, #32
 8260 004c 84F84130 		strb	r3, [r4, #65]
 8261              	.L555:
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8262              		.loc 1 5866 0
 8263 0050 0023     		movs	r3, #0
 8264 0052 6363     		str	r3, [r4, #52]
 8265              	.L554:
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || (tmppreviousstat
 8266              		.loc 1 5870 0
 8267 0054 236B     		ldr	r3, [r4, #48]
 8268              	.LVL743:
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8269              		.loc 1 5871 0
 8270 0056 A26B     		ldr	r2, [r4, #56]
 8271 0058 22B3     		cbz	r2, .L556
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8272              		.loc 1 5871 0 is_stmt 0 discriminator 1
 8273 005a 212B     		cmp	r3, #33
 8274 005c 18BF     		it	ne
 8275 005e 112B     		cmpne	r3, #17
 8276 0060 20D1     		bne	.L556
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 286


5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8277              		.loc 1 5873 0 is_stmt 1
 8278 0062 2368     		ldr	r3, [r4]
 8279              	.LVL744:
 8280 0064 1A68     		ldr	r2, [r3]
 8281 0066 12F4804F 		tst	r2, #16384
 8282 006a 03D0     		beq	.L557
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8283              		.loc 1 5875 0
 8284 006c 1A68     		ldr	r2, [r3]
 8285 006e 22F48042 		bic	r2, r2, #16384
 8286 0072 1A60     		str	r2, [r3]
 8287              	.L557:
5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8288              		.loc 1 5878 0
 8289 0074 A06B     		ldr	r0, [r4, #56]
 8290 0076 FFF7FEFF 		bl	HAL_DMA_GetState
 8291              	.LVL745:
 8292 007a 0128     		cmp	r0, #1
 8293 007c 0ED0     		beq	.L558
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8294              		.loc 1 5882 0
 8295 007e A36B     		ldr	r3, [r4, #56]
 8296 0080 1F4A     		ldr	r2, .L564+8
 8297 0082 1A65     		str	r2, [r3, #80]
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8298              		.loc 1 5885 0
 8299 0084 0023     		movs	r3, #0
 8300 0086 84F84030 		strb	r3, [r4, #64]
5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8301              		.loc 1 5888 0
 8302 008a A06B     		ldr	r0, [r4, #56]
 8303 008c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8304              	.LVL746:
 8305 0090 0028     		cmp	r0, #0
 8306 0092 30D0     		beq	.L552
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8307              		.loc 1 5891 0
 8308 0094 A06B     		ldr	r0, [r4, #56]
 8309 0096 036D     		ldr	r3, [r0, #80]
 8310 0098 9847     		blx	r3
 8311              	.LVL747:
 8312 009a 10BD     		pop	{r4, pc}
 8313              	.LVL748:
 8314              	.L558:
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8315              		.loc 1 5896 0
 8316 009c 2046     		mov	r0, r4
 8317 009e FFF7FEFF 		bl	I2C_TreatErrorCallback
 8318              	.LVL749:
 8319 00a2 10BD     		pop	{r4, pc}
 8320              	.LVL750:
 8321              	.L556:
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8322              		.loc 1 5900 0
 8323 00a4 E26B     		ldr	r2, [r4, #60]
 8324 00a6 1AB3     		cbz	r2, .L560
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 287


5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8325              		.loc 1 5900 0 is_stmt 0 discriminator 1
 8326 00a8 222B     		cmp	r3, #34
 8327 00aa 18BF     		it	ne
 8328 00ac 122B     		cmpne	r3, #18
 8329 00ae 1FD1     		bne	.L560
5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8330              		.loc 1 5902 0 is_stmt 1
 8331 00b0 2368     		ldr	r3, [r4]
 8332              	.LVL751:
 8333 00b2 1A68     		ldr	r2, [r3]
 8334 00b4 12F4004F 		tst	r2, #32768
 8335 00b8 03D0     		beq	.L561
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8336              		.loc 1 5904 0
 8337 00ba 1A68     		ldr	r2, [r3]
 8338 00bc 22F40042 		bic	r2, r2, #32768
 8339 00c0 1A60     		str	r2, [r3]
 8340              	.L561:
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8341              		.loc 1 5907 0
 8342 00c2 E06B     		ldr	r0, [r4, #60]
 8343 00c4 FFF7FEFF 		bl	HAL_DMA_GetState
 8344              	.LVL752:
 8345 00c8 0128     		cmp	r0, #1
 8346 00ca 0DD0     		beq	.L562
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8347              		.loc 1 5911 0
 8348 00cc E36B     		ldr	r3, [r4, #60]
 8349 00ce 0C4A     		ldr	r2, .L564+8
 8350 00d0 1A65     		str	r2, [r3, #80]
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8351              		.loc 1 5914 0
 8352 00d2 0023     		movs	r3, #0
 8353 00d4 84F84030 		strb	r3, [r4, #64]
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8354              		.loc 1 5917 0
 8355 00d8 E06B     		ldr	r0, [r4, #60]
 8356 00da FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8357              	.LVL753:
 8358 00de 50B1     		cbz	r0, .L552
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8359              		.loc 1 5920 0
 8360 00e0 E06B     		ldr	r0, [r4, #60]
 8361 00e2 036D     		ldr	r3, [r0, #80]
 8362 00e4 9847     		blx	r3
 8363              	.LVL754:
 8364 00e6 10BD     		pop	{r4, pc}
 8365              	.LVL755:
 8366              	.L562:
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8367              		.loc 1 5925 0
 8368 00e8 2046     		mov	r0, r4
 8369 00ea FFF7FEFF 		bl	I2C_TreatErrorCallback
 8370              	.LVL756:
 8371 00ee 10BD     		pop	{r4, pc}
 8372              	.LVL757:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 288


 8373              	.L560:
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8374              		.loc 1 5930 0
 8375 00f0 2046     		mov	r0, r4
 8376 00f2 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8377              	.LVL758:
 8378              	.L552:
 8379 00f6 10BD     		pop	{r4, pc}
 8380              	.LVL759:
 8381              	.L565:
 8382              		.align	2
 8383              	.L564:
 8384 00f8 0000FFFF 		.word	-65536
 8385 00fc 00000000 		.word	I2C_Slave_ISR_IT
 8386 0100 00000000 		.word	I2C_DMAAbort
 8387              		.cfi_endproc
 8388              	.LFE202:
 8390              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8391              		.align	2
 8392              		.thumb
 8393              		.thumb_func
 8395              	I2C_ITSlaveCplt:
 8396              	.LFB200:
5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8397              		.loc 1 5620 0
 8398              		.cfi_startproc
 8399              		@ args = 0, pretend = 0, frame = 0
 8400              		@ frame_needed = 0, uses_anonymous_args = 0
 8401              	.LVL760:
 8402 0000 70B5     		push	{r4, r5, r6, lr}
 8403              	.LCFI101:
 8404              		.cfi_def_cfa_offset 16
 8405              		.cfi_offset 4, -16
 8406              		.cfi_offset 5, -12
 8407              		.cfi_offset 6, -8
 8408              		.cfi_offset 14, -4
 8409 0002 0446     		mov	r4, r0
 8410 0004 0D46     		mov	r5, r1
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8411              		.loc 1 5621 0
 8412 0006 0268     		ldr	r2, [r0]
 8413 0008 1668     		ldr	r6, [r2]
 8414              	.LVL761:
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8415              		.loc 1 5623 0
 8416 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8417 000e DBB2     		uxtb	r3, r3
 8418              	.LVL762:
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8419              		.loc 1 5626 0
 8420 0010 2021     		movs	r1, #32
 8421              	.LVL763:
 8422 0012 D161     		str	r1, [r2, #28]
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8423              		.loc 1 5629 0
 8424 0014 292B     		cmp	r3, #41
 8425 0016 18BF     		it	ne
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 289


 8426 0018 212B     		cmpne	r3, #33
 8427 001a 06D1     		bne	.L567
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8428              		.loc 1 5631 0
 8429 001c 48F20101 		movw	r1, #32769
 8430 0020 FFF7FEFF 		bl	I2C_Disable_IRQ
 8431              	.LVL764:
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8432              		.loc 1 5632 0
 8433 0024 2123     		movs	r3, #33
 8434 0026 2363     		str	r3, [r4, #48]
 8435 0028 09E0     		b	.L568
 8436              	.LVL765:
 8437              	.L567:
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8438              		.loc 1 5634 0
 8439 002a 2A2B     		cmp	r3, #42
 8440 002c 18BF     		it	ne
 8441 002e 222B     		cmpne	r3, #34
 8442 0030 05D1     		bne	.L568
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8443              		.loc 1 5636 0
 8444 0032 48F20201 		movw	r1, #32770
 8445 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 8446              	.LVL766:
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8447              		.loc 1 5637 0
 8448 003a 2223     		movs	r3, #34
 8449 003c 2363     		str	r3, [r4, #48]
 8450              	.L568:
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8451              		.loc 1 5645 0
 8452 003e 2268     		ldr	r2, [r4]
 8453 0040 5368     		ldr	r3, [r2, #4]
 8454 0042 43F40043 		orr	r3, r3, #32768
 8455 0046 5360     		str	r3, [r2, #4]
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8456              		.loc 1 5648 0
 8457 0048 2268     		ldr	r2, [r4]
 8458 004a 5368     		ldr	r3, [r2, #4]
 8459 004c 23F0FF73 		bic	r3, r3, #33423360
 8460 0050 23F48B33 		bic	r3, r3, #71168
 8461 0054 23F4FF73 		bic	r3, r3, #510
 8462 0058 23F00103 		bic	r3, r3, #1
 8463 005c 5360     		str	r3, [r2, #4]
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8464              		.loc 1 5651 0
 8465 005e 2046     		mov	r0, r4
 8466 0060 FFF7FEFF 		bl	I2C_Flush_TXDR
 8467              	.LVL767:
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8468              		.loc 1 5654 0
 8469 0064 16F4804F 		tst	r6, #16384
 8470 0068 40D0     		beq	.L569
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8471              		.loc 1 5657 0
 8472 006a 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 290


 8473 006c 1368     		ldr	r3, [r2]
 8474 006e 23F48043 		bic	r3, r3, #16384
 8475 0072 1360     		str	r3, [r2]
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8476              		.loc 1 5659 0
 8477 0074 A36B     		ldr	r3, [r4, #56]
 8478 0076 002B     		cmp	r3, #0
 8479 0078 7AD0     		beq	.L570
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8480              		.loc 1 5661 0
 8481 007a 1B68     		ldr	r3, [r3]
 8482 007c 6C4A     		ldr	r2, .L584
 8483 007e 6D49     		ldr	r1, .L584+4
 8484 0080 9342     		cmp	r3, r2
 8485 0082 18BF     		it	ne
 8486 0084 8B42     		cmpne	r3, r1
 8487 0086 2AD0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8488              		.loc 1 5661 0 is_stmt 0 discriminator 2
 8489 0088 1832     		adds	r2, r2, #24
 8490 008a 9342     		cmp	r3, r2
 8491 008c 27D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8492              		.loc 1 5661 0 discriminator 4
 8493 008e 1832     		adds	r2, r2, #24
 8494 0090 9342     		cmp	r3, r2
 8495 0092 24D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8496              		.loc 1 5661 0 discriminator 6
 8497 0094 1832     		adds	r2, r2, #24
 8498 0096 9342     		cmp	r3, r2
 8499 0098 21D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8500              		.loc 1 5661 0 discriminator 8
 8501 009a 1832     		adds	r2, r2, #24
 8502 009c 9342     		cmp	r3, r2
 8503 009e 1ED0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8504              		.loc 1 5661 0 discriminator 10
 8505 00a0 1832     		adds	r2, r2, #24
 8506 00a2 9342     		cmp	r3, r2
 8507 00a4 1BD0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8508              		.loc 1 5661 0 discriminator 12
 8509 00a6 1832     		adds	r2, r2, #24
 8510 00a8 9342     		cmp	r3, r2
 8511 00aa 18D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8512              		.loc 1 5661 0 discriminator 14
 8513 00ac 02F55672 		add	r2, r2, #856
 8514 00b0 9342     		cmp	r3, r2
 8515 00b2 14D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8516              		.loc 1 5661 0 discriminator 16
 8517 00b4 1832     		adds	r2, r2, #24
 8518 00b6 9342     		cmp	r3, r2
 8519 00b8 11D0     		beq	.L571
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 291


5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8520              		.loc 1 5661 0 discriminator 18
 8521 00ba 1832     		adds	r2, r2, #24
 8522 00bc 9342     		cmp	r3, r2
 8523 00be 0ED0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8524              		.loc 1 5661 0 discriminator 20
 8525 00c0 1832     		adds	r2, r2, #24
 8526 00c2 9342     		cmp	r3, r2
 8527 00c4 0BD0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8528              		.loc 1 5661 0 discriminator 22
 8529 00c6 1832     		adds	r2, r2, #24
 8530 00c8 9342     		cmp	r3, r2
 8531 00ca 08D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8532              		.loc 1 5661 0 discriminator 24
 8533 00cc 1832     		adds	r2, r2, #24
 8534 00ce 9342     		cmp	r3, r2
 8535 00d0 05D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8536              		.loc 1 5661 0 discriminator 26
 8537 00d2 1832     		adds	r2, r2, #24
 8538 00d4 9342     		cmp	r3, r2
 8539 00d6 02D0     		beq	.L571
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8540              		.loc 1 5661 0 discriminator 28
 8541 00d8 1832     		adds	r2, r2, #24
 8542 00da 9342     		cmp	r3, r2
 8543 00dc 02D1     		bne	.L572
 8544              	.L571:
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8545              		.loc 1 5661 0 discriminator 29
 8546 00de 5B68     		ldr	r3, [r3, #4]
 8547 00e0 9BB2     		uxth	r3, r3
 8548 00e2 01E0     		b	.L573
 8549              	.L572:
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8550              		.loc 1 5661 0 discriminator 30
 8551 00e4 5B68     		ldr	r3, [r3, #4]
 8552 00e6 9BB2     		uxth	r3, r3
 8553              	.L573:
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8554              		.loc 1 5661 0 discriminator 32
 8555 00e8 6385     		strh	r3, [r4, #42]	@ movhi
 8556 00ea 41E0     		b	.L570
 8557              	.L569:
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8558              		.loc 1 5664 0 is_stmt 1
 8559 00ec 16F4004F 		tst	r6, #32768
 8560 00f0 3ED0     		beq	.L570
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8561              		.loc 1 5667 0
 8562 00f2 2268     		ldr	r2, [r4]
 8563 00f4 1368     		ldr	r3, [r2]
 8564 00f6 23F40043 		bic	r3, r3, #32768
 8565 00fa 1360     		str	r3, [r2]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 292


5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8566              		.loc 1 5669 0
 8567 00fc E36B     		ldr	r3, [r4, #60]
 8568 00fe BBB3     		cbz	r3, .L570
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8569              		.loc 1 5671 0
 8570 0100 1B68     		ldr	r3, [r3]
 8571 0102 4B4A     		ldr	r2, .L584
 8572 0104 4B49     		ldr	r1, .L584+4
 8573 0106 9342     		cmp	r3, r2
 8574 0108 18BF     		it	ne
 8575 010a 8B42     		cmpne	r3, r1
 8576 010c 2AD0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8577              		.loc 1 5671 0 is_stmt 0 discriminator 2
 8578 010e 1832     		adds	r2, r2, #24
 8579 0110 9342     		cmp	r3, r2
 8580 0112 27D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8581              		.loc 1 5671 0 discriminator 4
 8582 0114 1832     		adds	r2, r2, #24
 8583 0116 9342     		cmp	r3, r2
 8584 0118 24D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8585              		.loc 1 5671 0 discriminator 6
 8586 011a 1832     		adds	r2, r2, #24
 8587 011c 9342     		cmp	r3, r2
 8588 011e 21D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8589              		.loc 1 5671 0 discriminator 8
 8590 0120 1832     		adds	r2, r2, #24
 8591 0122 9342     		cmp	r3, r2
 8592 0124 1ED0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8593              		.loc 1 5671 0 discriminator 10
 8594 0126 1832     		adds	r2, r2, #24
 8595 0128 9342     		cmp	r3, r2
 8596 012a 1BD0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8597              		.loc 1 5671 0 discriminator 12
 8598 012c 1832     		adds	r2, r2, #24
 8599 012e 9342     		cmp	r3, r2
 8600 0130 18D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8601              		.loc 1 5671 0 discriminator 14
 8602 0132 02F55672 		add	r2, r2, #856
 8603 0136 9342     		cmp	r3, r2
 8604 0138 14D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8605              		.loc 1 5671 0 discriminator 16
 8606 013a 1832     		adds	r2, r2, #24
 8607 013c 9342     		cmp	r3, r2
 8608 013e 11D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8609              		.loc 1 5671 0 discriminator 18
 8610 0140 1832     		adds	r2, r2, #24
 8611 0142 9342     		cmp	r3, r2
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 293


 8612 0144 0ED0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8613              		.loc 1 5671 0 discriminator 20
 8614 0146 1832     		adds	r2, r2, #24
 8615 0148 9342     		cmp	r3, r2
 8616 014a 0BD0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8617              		.loc 1 5671 0 discriminator 22
 8618 014c 1832     		adds	r2, r2, #24
 8619 014e 9342     		cmp	r3, r2
 8620 0150 08D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8621              		.loc 1 5671 0 discriminator 24
 8622 0152 1832     		adds	r2, r2, #24
 8623 0154 9342     		cmp	r3, r2
 8624 0156 05D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8625              		.loc 1 5671 0 discriminator 26
 8626 0158 1832     		adds	r2, r2, #24
 8627 015a 9342     		cmp	r3, r2
 8628 015c 02D0     		beq	.L574
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8629              		.loc 1 5671 0 discriminator 28
 8630 015e 1832     		adds	r2, r2, #24
 8631 0160 9342     		cmp	r3, r2
 8632 0162 02D1     		bne	.L575
 8633              	.L574:
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8634              		.loc 1 5671 0 discriminator 29
 8635 0164 5B68     		ldr	r3, [r3, #4]
 8636 0166 9BB2     		uxth	r3, r3
 8637 0168 01E0     		b	.L576
 8638              	.L575:
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8639              		.loc 1 5671 0 discriminator 30
 8640 016a 5B68     		ldr	r3, [r3, #4]
 8641 016c 9BB2     		uxth	r3, r3
 8642              	.L576:
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8643              		.loc 1 5671 0 discriminator 32
 8644 016e 6385     		strh	r3, [r4, #42]	@ movhi
 8645              	.L570:
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8646              		.loc 1 5680 0 is_stmt 1
 8647 0170 15F0040F 		tst	r5, #4
 8648 0174 11D0     		beq	.L577
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8649              		.loc 1 5683 0
 8650 0176 25F00405 		bic	r5, r5, #4
 8651              	.LVL768:
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8652              		.loc 1 5686 0
 8653 017a 636A     		ldr	r3, [r4, #36]
 8654 017c 2268     		ldr	r2, [r4]
 8655 017e 526A     		ldr	r2, [r2, #36]
 8656 0180 1A70     		strb	r2, [r3]
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 294


 8657              		.loc 1 5689 0
 8658 0182 636A     		ldr	r3, [r4, #36]
 8659 0184 0133     		adds	r3, r3, #1
 8660 0186 6362     		str	r3, [r4, #36]
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8661              		.loc 1 5691 0
 8662 0188 238D     		ldrh	r3, [r4, #40]
 8663 018a 33B1     		cbz	r3, .L577
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 8664              		.loc 1 5693 0
 8665 018c 013B     		subs	r3, r3, #1
 8666 018e 2385     		strh	r3, [r4, #40]	@ movhi
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8667              		.loc 1 5694 0
 8668 0190 638D     		ldrh	r3, [r4, #42]
 8669 0192 9BB2     		uxth	r3, r3
 8670 0194 013B     		subs	r3, r3, #1
 8671 0196 9BB2     		uxth	r3, r3
 8672 0198 6385     		strh	r3, [r4, #42]	@ movhi
 8673              	.L577:
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8674              		.loc 1 5699 0
 8675 019a 638D     		ldrh	r3, [r4, #42]
 8676 019c 9BB2     		uxth	r3, r3
 8677 019e 1BB1     		cbz	r3, .L578
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8678              		.loc 1 5702 0
 8679 01a0 636C     		ldr	r3, [r4, #68]
 8680 01a2 43F00403 		orr	r3, r3, #4
 8681 01a6 6364     		str	r3, [r4, #68]
 8682              	.L578:
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8683              		.loc 1 5705 0
 8684 01a8 0023     		movs	r3, #0
 8685 01aa 84F84230 		strb	r3, [r4, #66]
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8686              		.loc 1 5706 0
 8687 01ae 6363     		str	r3, [r4, #52]
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8688              		.loc 1 5708 0
 8689 01b0 636C     		ldr	r3, [r4, #68]
 8690 01b2 6BB1     		cbz	r3, .L579
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8691              		.loc 1 5711 0
 8692 01b4 616C     		ldr	r1, [r4, #68]
 8693 01b6 2046     		mov	r0, r4
 8694 01b8 FFF7FEFF 		bl	I2C_ITError
 8695              	.LVL769:
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8696              		.loc 1 5714 0
 8697 01bc 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8698 01c0 DBB2     		uxtb	r3, r3
 8699 01c2 282B     		cmp	r3, #40
 8700 01c4 32D1     		bne	.L566
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8701              		.loc 1 5717 0
 8702 01c6 2946     		mov	r1, r5
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 295


 8703 01c8 2046     		mov	r0, r4
 8704 01ca FFF7FEFF 		bl	I2C_ITListenCplt
 8705              	.LVL770:
 8706 01ce 70BD     		pop	{r4, r5, r6, pc}
 8707              	.LVL771:
 8708              	.L579:
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8709              		.loc 1 5720 0
 8710 01d0 E36A     		ldr	r3, [r4, #44]
 8711 01d2 13F5803F 		cmn	r3, #65536
 8712 01d6 0FD0     		beq	.L581
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8713              		.loc 1 5723 0
 8714 01d8 2046     		mov	r0, r4
 8715 01da FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8716              	.LVL772:
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8717              		.loc 1 5725 0
 8718 01de 164B     		ldr	r3, .L584+8
 8719 01e0 E362     		str	r3, [r4, #44]
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8720              		.loc 1 5726 0
 8721 01e2 2023     		movs	r3, #32
 8722 01e4 84F84130 		strb	r3, [r4, #65]
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8723              		.loc 1 5727 0
 8724 01e8 0023     		movs	r3, #0
 8725 01ea 2363     		str	r3, [r4, #48]
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8726              		.loc 1 5730 0
 8727 01ec 84F84030 		strb	r3, [r4, #64]
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8728              		.loc 1 5736 0
 8729 01f0 2046     		mov	r0, r4
 8730 01f2 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8731              	.LVL773:
 8732 01f6 70BD     		pop	{r4, r5, r6, pc}
 8733              	.LVL774:
 8734              	.L581:
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8735              		.loc 1 5740 0
 8736 01f8 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8737 01fc DBB2     		uxtb	r3, r3
 8738 01fe 222B     		cmp	r3, #34
 8739 0200 0AD1     		bne	.L582
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8740              		.loc 1 5742 0
 8741 0202 2023     		movs	r3, #32
 8742 0204 84F84130 		strb	r3, [r4, #65]
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8743              		.loc 1 5743 0
 8744 0208 0023     		movs	r3, #0
 8745 020a 2363     		str	r3, [r4, #48]
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8746              		.loc 1 5746 0
 8747 020c 84F84030 		strb	r3, [r4, #64]
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 296


 8748              		.loc 1 5752 0
 8749 0210 2046     		mov	r0, r4
 8750 0212 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8751              	.LVL775:
 8752 0216 70BD     		pop	{r4, r5, r6, pc}
 8753              	.LVL776:
 8754              	.L582:
5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8755              		.loc 1 5757 0
 8756 0218 2023     		movs	r3, #32
 8757 021a 84F84130 		strb	r3, [r4, #65]
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8758              		.loc 1 5758 0
 8759 021e 0023     		movs	r3, #0
 8760 0220 2363     		str	r3, [r4, #48]
5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8761              		.loc 1 5761 0
 8762 0222 84F84030 		strb	r3, [r4, #64]
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8763              		.loc 1 5767 0
 8764 0226 2046     		mov	r0, r4
 8765 0228 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8766              	.LVL777:
 8767              	.L566:
 8768 022c 70BD     		pop	{r4, r5, r6, pc}
 8769              	.LVL778:
 8770              	.L585:
 8771 022e 00BF     		.align	2
 8772              	.L584:
 8773 0230 28000240 		.word	1073872936
 8774 0234 10000240 		.word	1073872912
 8775 0238 0000FFFF 		.word	-65536
 8776              		.cfi_endproc
 8777              	.LFE200:
 8779              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8780              		.align	2
 8781              		.thumb
 8782              		.thumb_func
 8784              	I2C_Slave_ISR_IT:
 8785              	.LFB191:
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8786              		.loc 1 4748 0
 8787              		.cfi_startproc
 8788              		@ args = 0, pretend = 0, frame = 0
 8789              		@ frame_needed = 0, uses_anonymous_args = 0
 8790              	.LVL779:
 8791 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8792              	.LCFI102:
 8793              		.cfi_def_cfa_offset 24
 8794              		.cfi_offset 3, -24
 8795              		.cfi_offset 4, -20
 8796              		.cfi_offset 5, -16
 8797              		.cfi_offset 6, -12
 8798              		.cfi_offset 7, -8
 8799              		.cfi_offset 14, -4
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8800              		.loc 1 4749 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 297


 8801 0002 C76A     		ldr	r7, [r0, #44]
 8802              	.LVL780:
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8803              		.loc 1 4753 0
 8804 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8805 0008 012B     		cmp	r3, #1
 8806 000a 00F09E80 		beq	.L598
 8807 000e 1646     		mov	r6, r2
 8808 0010 0C46     		mov	r4, r1
 8809 0012 0546     		mov	r5, r0
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8810              		.loc 1 4753 0 is_stmt 0 discriminator 2
 8811 0014 0123     		movs	r3, #1
 8812 0016 80F84030 		strb	r3, [r0, #64]
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8813              		.loc 1 4756 0 is_stmt 1 discriminator 2
 8814 001a 11F0200F 		tst	r1, #32
 8815 001e 04D0     		beq	.L588
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8816              		.loc 1 4756 0 is_stmt 0 discriminator 1
 8817 0020 12F0200F 		tst	r2, #32
 8818 0024 01D0     		beq	.L588
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8819              		.loc 1 4759 0 is_stmt 1
 8820 0026 FFF7FEFF 		bl	I2C_ITSlaveCplt
 8821              	.LVL781:
 8822              	.L588:
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8823              		.loc 1 4762 0
 8824 002a 14F0100F 		tst	r4, #16
 8825 002e 39D0     		beq	.L589
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8826              		.loc 1 4762 0 is_stmt 0 discriminator 1
 8827 0030 16F0100F 		tst	r6, #16
 8828 0034 36D0     		beq	.L589
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8829              		.loc 1 4768 0 is_stmt 1
 8830 0036 6B8D     		ldrh	r3, [r5, #42]
 8831 0038 9BB2     		uxth	r3, r3
 8832 003a 13BB     		cbnz	r3, .L590
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8833              		.loc 1 4770 0
 8834 003c 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8835 0040 DBB2     		uxtb	r3, r3
 8836 0042 282B     		cmp	r3, #40
 8837 0044 07D1     		bne	.L591
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8838              		.loc 1 4770 0 is_stmt 0 discriminator 1
 8839 0046 B7F1007F 		cmp	r7, #33554432
 8840 004a 04D1     		bne	.L591
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8841              		.loc 1 4773 0 is_stmt 1
 8842 004c 2146     		mov	r1, r4
 8843 004e 2846     		mov	r0, r5
 8844 0050 FFF7FEFF 		bl	I2C_ITListenCplt
 8845              	.LVL782:
 8846 0054 75E0     		b	.L592
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 298


 8847              	.L591:
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8848              		.loc 1 4775 0
 8849 0056 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8850 005a DBB2     		uxtb	r3, r3
 8851 005c 292B     		cmp	r3, #41
 8852 005e 0CD1     		bne	.L593
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8853              		.loc 1 4775 0 is_stmt 0 discriminator 1
 8854 0060 17F5803F 		cmn	r7, #65536
 8855 0064 09D0     		beq	.L593
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8856              		.loc 1 4778 0 is_stmt 1
 8857 0066 2B68     		ldr	r3, [r5]
 8858 0068 1022     		movs	r2, #16
 8859 006a DA61     		str	r2, [r3, #28]
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8860              		.loc 1 4781 0
 8861 006c 2846     		mov	r0, r5
 8862 006e FFF7FEFF 		bl	I2C_Flush_TXDR
 8863              	.LVL783:
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8864              		.loc 1 4785 0
 8865 0072 2846     		mov	r0, r5
 8866 0074 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8867              	.LVL784:
 8868 0078 63E0     		b	.L592
 8869              	.L593:
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8870              		.loc 1 4790 0
 8871 007a 2B68     		ldr	r3, [r5]
 8872 007c 1022     		movs	r2, #16
 8873 007e DA61     		str	r2, [r3, #28]
 8874 0080 5FE0     		b	.L592
 8875              	.L590:
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8876              		.loc 1 4797 0
 8877 0082 2B68     		ldr	r3, [r5]
 8878 0084 1022     		movs	r2, #16
 8879 0086 DA61     		str	r2, [r3, #28]
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8880              		.loc 1 4800 0
 8881 0088 6B6C     		ldr	r3, [r5, #68]
 8882 008a 43F00403 		orr	r3, r3, #4
 8883 008e 6B64     		str	r3, [r5, #68]
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8884              		.loc 1 4802 0
 8885 0090 B7F1807F 		cmp	r7, #16777216
 8886 0094 18BF     		it	ne
 8887 0096 002F     		cmpne	r7, #0
 8888 0098 53D1     		bne	.L592
4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8889              		.loc 1 4805 0
 8890 009a 696C     		ldr	r1, [r5, #68]
 8891 009c 2846     		mov	r0, r5
 8892 009e FFF7FEFF 		bl	I2C_ITError
 8893              	.LVL785:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 299


 8894 00a2 4EE0     		b	.L592
 8895              	.L589:
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8896              		.loc 1 4809 0
 8897 00a4 14F0040F 		tst	r4, #4
 8898 00a8 1FD0     		beq	.L594
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8899              		.loc 1 4809 0 is_stmt 0 discriminator 1
 8900 00aa 16F0040F 		tst	r6, #4
 8901 00ae 1CD0     		beq	.L594
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8902              		.loc 1 4811 0 is_stmt 1
 8903 00b0 6B8D     		ldrh	r3, [r5, #42]
 8904 00b2 9BB2     		uxth	r3, r3
 8905 00b4 73B1     		cbz	r3, .L595
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8906              		.loc 1 4814 0
 8907 00b6 6B6A     		ldr	r3, [r5, #36]
 8908 00b8 2A68     		ldr	r2, [r5]
 8909 00ba 526A     		ldr	r2, [r2, #36]
 8910 00bc 1A70     		strb	r2, [r3]
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8911              		.loc 1 4817 0
 8912 00be 6B6A     		ldr	r3, [r5, #36]
 8913 00c0 0133     		adds	r3, r3, #1
 8914 00c2 6B62     		str	r3, [r5, #36]
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferCount--;
 8915              		.loc 1 4819 0
 8916 00c4 2B8D     		ldrh	r3, [r5, #40]
 8917 00c6 013B     		subs	r3, r3, #1
 8918 00c8 2B85     		strh	r3, [r5, #40]	@ movhi
4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8919              		.loc 1 4820 0
 8920 00ca 6B8D     		ldrh	r3, [r5, #42]
 8921 00cc 9BB2     		uxth	r3, r3
 8922 00ce 013B     		subs	r3, r3, #1
 8923 00d0 9BB2     		uxth	r3, r3
 8924 00d2 6B85     		strh	r3, [r5, #42]	@ movhi
 8925              	.L595:
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8926              		.loc 1 4823 0
 8927 00d4 6B8D     		ldrh	r3, [r5, #42]
 8928 00d6 9BB2     		uxth	r3, r3
 8929 00d8 002B     		cmp	r3, #0
 8930 00da 32D1     		bne	.L592
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8931              		.loc 1 4823 0 is_stmt 0 discriminator 1
 8932 00dc 17F5803F 		cmn	r7, #65536
 8933 00e0 2FD0     		beq	.L592
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8934              		.loc 1 4827 0 is_stmt 1
 8935 00e2 2846     		mov	r0, r5
 8936 00e4 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8937              	.LVL786:
 8938 00e8 2BE0     		b	.L592
 8939              	.L594:
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 300


 8940              		.loc 1 4830 0
 8941 00ea 14F0080F 		tst	r4, #8
 8942 00ee 07D0     		beq	.L596
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8943              		.loc 1 4830 0 is_stmt 0 discriminator 1
 8944 00f0 16F0080F 		tst	r6, #8
 8945 00f4 04D0     		beq	.L596
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 8946              		.loc 1 4832 0 is_stmt 1
 8947 00f6 2146     		mov	r1, r4
 8948 00f8 2846     		mov	r0, r5
 8949 00fa FFF7FEFF 		bl	I2C_ITAddrCplt
 8950              	.LVL787:
 8951 00fe 20E0     		b	.L592
 8952              	.L596:
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8953              		.loc 1 4834 0
 8954 0100 14F0020F 		tst	r4, #2
 8955 0104 1DD0     		beq	.L592
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 8956              		.loc 1 4834 0 is_stmt 0 discriminator 1
 8957 0106 16F0020F 		tst	r6, #2
 8958 010a 1AD0     		beq	.L592
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 8959              		.loc 1 4840 0 is_stmt 1
 8960 010c 6B8D     		ldrh	r3, [r5, #42]
 8961 010e 9BB2     		uxth	r3, r3
 8962 0110 7BB1     		cbz	r3, .L597
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8963              		.loc 1 4843 0
 8964 0112 2B68     		ldr	r3, [r5]
 8965 0114 6A6A     		ldr	r2, [r5, #36]
 8966 0116 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8967 0118 9A62     		str	r2, [r3, #40]
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8968              		.loc 1 4846 0
 8969 011a 6B6A     		ldr	r3, [r5, #36]
 8970 011c 0133     		adds	r3, r3, #1
 8971 011e 6B62     		str	r3, [r5, #36]
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       hi2c->XferSize--;
 8972              		.loc 1 4848 0
 8973 0120 6B8D     		ldrh	r3, [r5, #42]
 8974 0122 9BB2     		uxth	r3, r3
 8975 0124 013B     		subs	r3, r3, #1
 8976 0126 9BB2     		uxth	r3, r3
 8977 0128 6B85     		strh	r3, [r5, #42]	@ movhi
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 8978              		.loc 1 4849 0
 8979 012a 2B8D     		ldrh	r3, [r5, #40]
 8980 012c 013B     		subs	r3, r3, #1
 8981 012e 2B85     		strh	r3, [r5, #40]	@ movhi
 8982 0130 07E0     		b	.L592
 8983              	.L597:
4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 8984              		.loc 1 4853 0
 8985 0132 002F     		cmp	r7, #0
 8986 0134 18BF     		it	ne
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 301


 8987 0136 B7F1807F 		cmpne	r7, #16777216
 8988 013a 02D1     		bne	.L592
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 8989              		.loc 1 4857 0
 8990 013c 2846     		mov	r0, r5
 8991 013e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8992              	.LVL788:
 8993              	.L592:
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 8994              		.loc 1 4867 0
 8995 0142 0020     		movs	r0, #0
 8996 0144 85F84000 		strb	r0, [r5, #64]
4869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 8997              		.loc 1 4869 0
 8998 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8999              	.LVL789:
 9000              	.L598:
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9001              		.loc 1 4753 0
 9002 014a 0220     		movs	r0, #2
 9003              	.LVL790:
4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9004              		.loc 1 4870 0
 9005 014c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9006              		.cfi_endproc
 9007              	.LFE191:
 9009 014e 00BF     		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 9010              		.align	2
 9011              		.thumb
 9012              		.thumb_func
 9014              	I2C_ITMasterCplt:
 9015              	.LFB199:
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
 9016              		.loc 1 5477 0
 9017              		.cfi_startproc
 9018              		@ args = 0, pretend = 0, frame = 8
 9019              		@ frame_needed = 0, uses_anonymous_args = 0
 9020              	.LVL791:
 9021 0000 30B5     		push	{r4, r5, lr}
 9022              	.LCFI103:
 9023              		.cfi_def_cfa_offset 12
 9024              		.cfi_offset 4, -12
 9025              		.cfi_offset 5, -8
 9026              		.cfi_offset 14, -4
 9027 0002 83B0     		sub	sp, sp, #12
 9028              	.LCFI104:
 9029              		.cfi_def_cfa_offset 24
 9030 0004 0446     		mov	r4, r0
 9031 0006 0D46     		mov	r5, r1
 9032              	.LVL792:
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9033              		.loc 1 5483 0
 9034 0008 0368     		ldr	r3, [r0]
 9035 000a 2022     		movs	r2, #32
 9036 000c DA61     		str	r2, [r3, #28]
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9037              		.loc 1 5486 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 302


 9038 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9039 0012 DBB2     		uxtb	r3, r3
 9040 0014 212B     		cmp	r3, #33
 9041 0016 05D1     		bne	.L601
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 9042              		.loc 1 5488 0
 9043 0018 0121     		movs	r1, #1
 9044              	.LVL793:
 9045 001a FFF7FEFF 		bl	I2C_Disable_IRQ
 9046              	.LVL794:
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9047              		.loc 1 5489 0
 9048 001e 1123     		movs	r3, #17
 9049 0020 2363     		str	r3, [r4, #48]
 9050 0022 09E0     		b	.L602
 9051              	.LVL795:
 9052              	.L601:
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9053              		.loc 1 5491 0
 9054 0024 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9055 0028 DBB2     		uxtb	r3, r3
 9056 002a 222B     		cmp	r3, #34
 9057 002c 04D1     		bne	.L602
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 9058              		.loc 1 5493 0
 9059 002e 0221     		movs	r1, #2
 9060              	.LVL796:
 9061 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
 9062              	.LVL797:
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9063              		.loc 1 5494 0
 9064 0034 1223     		movs	r3, #18
 9065 0036 2363     		str	r3, [r4, #48]
 9066              	.L602:
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9067              		.loc 1 5502 0
 9068 0038 2268     		ldr	r2, [r4]
 9069 003a 5368     		ldr	r3, [r2, #4]
 9070 003c 23F0FF73 		bic	r3, r3, #33423360
 9071 0040 23F48B33 		bic	r3, r3, #71168
 9072 0044 23F4FF73 		bic	r3, r3, #510
 9073 0048 23F00103 		bic	r3, r3, #1
 9074 004c 5360     		str	r3, [r2, #4]
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9075              		.loc 1 5505 0
 9076 004e 0023     		movs	r3, #0
 9077 0050 6363     		str	r3, [r4, #52]
5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9078              		.loc 1 5506 0
 9079 0052 A3F58033 		sub	r3, r3, #65536
 9080 0056 E362     		str	r3, [r4, #44]
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9081              		.loc 1 5508 0
 9082 0058 15F0100F 		tst	r5, #16
 9083 005c 06D0     		beq	.L603
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9084              		.loc 1 5511 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 303


 9085 005e 2368     		ldr	r3, [r4]
 9086 0060 1022     		movs	r2, #16
 9087 0062 DA61     		str	r2, [r3, #28]
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9088              		.loc 1 5514 0
 9089 0064 636C     		ldr	r3, [r4, #68]
 9090 0066 43F00403 		orr	r3, r3, #4
 9091 006a 6364     		str	r3, [r4, #68]
 9092              	.L603:
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9093              		.loc 1 5518 0
 9094 006c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9095 0070 DBB2     		uxtb	r3, r3
 9096 0072 602B     		cmp	r3, #96
 9097 0074 07D1     		bne	.L604
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9098              		.loc 1 5518 0 is_stmt 0 discriminator 1
 9099 0076 15F0040F 		tst	r5, #4
 9100 007a 04D0     		beq	.L604
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     UNUSED(tmpreg);
 9101              		.loc 1 5521 0 is_stmt 1
 9102 007c 2368     		ldr	r3, [r4]
 9103 007e 5B6A     		ldr	r3, [r3, #36]
 9104 0080 DBB2     		uxtb	r3, r3
 9105 0082 0193     		str	r3, [sp, #4]
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9106              		.loc 1 5522 0
 9107 0084 019B     		ldr	r3, [sp, #4]
 9108              	.L604:
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9109              		.loc 1 5526 0
 9110 0086 2046     		mov	r0, r4
 9111 0088 FFF7FEFF 		bl	I2C_Flush_TXDR
 9112              	.LVL798:
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9113              		.loc 1 5529 0
 9114 008c 626C     		ldr	r2, [r4, #68]
 9115              	.LVL799:
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9116              		.loc 1 5532 0
 9117 008e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9118 0092 DBB2     		uxtb	r3, r3
 9119 0094 602B     		cmp	r3, #96
 9120 0096 00D0     		beq	.L605
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9121              		.loc 1 5532 0 is_stmt 0 discriminator 1
 9122 0098 22B1     		cbz	r2, .L606
 9123              	.L605:
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9124              		.loc 1 5535 0 is_stmt 1
 9125 009a 616C     		ldr	r1, [r4, #68]
 9126 009c 2046     		mov	r0, r4
 9127 009e FFF7FEFF 		bl	I2C_ITError
 9128              	.LVL800:
 9129 00a2 40E0     		b	.L600
 9130              	.LVL801:
 9131              	.L606:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 304


5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9132              		.loc 1 5538 0
 9133 00a4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9134 00a8 DBB2     		uxtb	r3, r3
 9135 00aa 212B     		cmp	r3, #33
 9136 00ac 1BD1     		bne	.L608
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9137              		.loc 1 5540 0
 9138 00ae 2023     		movs	r3, #32
 9139 00b0 84F84130 		strb	r3, [r4, #65]
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9140              		.loc 1 5541 0
 9141 00b4 0023     		movs	r3, #0
 9142 00b6 2363     		str	r3, [r4, #48]
5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9143              		.loc 1 5543 0
 9144 00b8 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9145 00bc DBB2     		uxtb	r3, r3
 9146 00be 402B     		cmp	r3, #64
 9147 00c0 08D1     		bne	.L609
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9148              		.loc 1 5545 0
 9149 00c2 0023     		movs	r3, #0
 9150 00c4 84F84230 		strb	r3, [r4, #66]
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9151              		.loc 1 5548 0
 9152 00c8 84F84030 		strb	r3, [r4, #64]
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9153              		.loc 1 5554 0
 9154 00cc 2046     		mov	r0, r4
 9155 00ce FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9156              	.LVL802:
 9157 00d2 28E0     		b	.L600
 9158              	.LVL803:
 9159              	.L609:
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9160              		.loc 1 5559 0
 9161 00d4 0023     		movs	r3, #0
 9162 00d6 84F84230 		strb	r3, [r4, #66]
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9163              		.loc 1 5562 0
 9164 00da 84F84030 		strb	r3, [r4, #64]
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9165              		.loc 1 5568 0
 9166 00de 2046     		mov	r0, r4
 9167 00e0 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9168              	.LVL804:
 9169 00e4 1FE0     		b	.L600
 9170              	.LVL805:
 9171              	.L608:
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9172              		.loc 1 5573 0
 9173 00e6 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9174 00ea DBB2     		uxtb	r3, r3
 9175 00ec 222B     		cmp	r3, #34
 9176 00ee 1AD1     		bne	.L600
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 305


 9177              		.loc 1 5575 0
 9178 00f0 2023     		movs	r3, #32
 9179 00f2 84F84130 		strb	r3, [r4, #65]
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9180              		.loc 1 5576 0
 9181 00f6 0023     		movs	r3, #0
 9182 00f8 2363     		str	r3, [r4, #48]
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9183              		.loc 1 5578 0
 9184 00fa 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9185 00fe DBB2     		uxtb	r3, r3
 9186 0100 402B     		cmp	r3, #64
 9187 0102 08D1     		bne	.L610
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9188              		.loc 1 5580 0
 9189 0104 0023     		movs	r3, #0
 9190 0106 84F84230 		strb	r3, [r4, #66]
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9191              		.loc 1 5583 0
 9192 010a 84F84030 		strb	r3, [r4, #64]
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9193              		.loc 1 5589 0
 9194 010e 2046     		mov	r0, r4
 9195 0110 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9196              	.LVL806:
 9197 0114 07E0     		b	.L600
 9198              	.LVL807:
 9199              	.L610:
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9200              		.loc 1 5594 0
 9201 0116 0023     		movs	r3, #0
 9202 0118 84F84230 		strb	r3, [r4, #66]
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9203              		.loc 1 5597 0
 9204 011c 84F84030 		strb	r3, [r4, #64]
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9205              		.loc 1 5603 0
 9206 0120 2046     		mov	r0, r4
 9207 0122 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9208              	.LVL808:
 9209              	.L600:
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9210              		.loc 1 5611 0
 9211 0126 03B0     		add	sp, sp, #12
 9212              	.LCFI105:
 9213              		.cfi_def_cfa_offset 12
 9214              		@ sp needed
 9215 0128 30BD     		pop	{r4, r5, pc}
 9216              		.cfi_endproc
 9217              	.LFE199:
 9219 012a 00BF     		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9220              		.align	2
 9221              		.thumb
 9222              		.thumb_func
 9224              	I2C_Master_ISR_IT:
 9225              	.LFB190:
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 306


 9226              		.loc 1 4611 0
 9227              		.cfi_startproc
 9228              		@ args = 0, pretend = 0, frame = 0
 9229              		@ frame_needed = 0, uses_anonymous_args = 0
 9230              	.LVL809:
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9231              		.loc 1 4616 0
 9232 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9233 0004 012B     		cmp	r3, #1
 9234 0006 00F0B680 		beq	.L626
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 9235              		.loc 1 4611 0 discriminator 2
 9236 000a 70B5     		push	{r4, r5, r6, lr}
 9237              	.LCFI106:
 9238              		.cfi_def_cfa_offset 16
 9239              		.cfi_offset 4, -16
 9240              		.cfi_offset 5, -12
 9241              		.cfi_offset 6, -8
 9242              		.cfi_offset 14, -4
 9243 000c 82B0     		sub	sp, sp, #8
 9244              	.LCFI107:
 9245              		.cfi_def_cfa_offset 24
 9246 000e 0446     		mov	r4, r0
 9247 0010 0D46     		mov	r5, r1
 9248 0012 1646     		mov	r6, r2
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9249              		.loc 1 4616 0 discriminator 2
 9250 0014 0123     		movs	r3, #1
 9251 0016 80F84030 		strb	r3, [r0, #64]
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9252              		.loc 1 4618 0 discriminator 2
 9253 001a 11F0100F 		tst	r1, #16
 9254 001e 0CD0     		beq	.L614
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9255              		.loc 1 4618 0 is_stmt 0 discriminator 1
 9256 0020 12F0100F 		tst	r2, #16
 9257 0024 09D0     		beq	.L614
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9258              		.loc 1 4621 0 is_stmt 1
 9259 0026 0368     		ldr	r3, [r0]
 9260 0028 1022     		movs	r2, #16
 9261              	.LVL810:
 9262 002a DA61     		str	r2, [r3, #28]
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9263              		.loc 1 4626 0
 9264 002c 436C     		ldr	r3, [r0, #68]
 9265 002e 43F00403 		orr	r3, r3, #4
 9266 0032 4364     		str	r3, [r0, #68]
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9267              		.loc 1 4629 0
 9268 0034 FFF7FEFF 		bl	I2C_Flush_TXDR
 9269              	.LVL811:
 9270 0038 8FE0     		b	.L615
 9271              	.LVL812:
 9272              	.L614:
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9273              		.loc 1 4631 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 307


 9274 003a 15F0040F 		tst	r5, #4
 9275 003e 14D0     		beq	.L616
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9276              		.loc 1 4631 0 is_stmt 0 discriminator 1
 9277 0040 16F0040F 		tst	r6, #4
 9278 0044 11D0     		beq	.L616
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9279              		.loc 1 4634 0 is_stmt 1
 9280 0046 25F00405 		bic	r5, r5, #4
 9281              	.LVL813:
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9282              		.loc 1 4637 0
 9283 004a 636A     		ldr	r3, [r4, #36]
 9284 004c 2268     		ldr	r2, [r4]
 9285              	.LVL814:
 9286 004e 526A     		ldr	r2, [r2, #36]
 9287 0050 1A70     		strb	r2, [r3]
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9288              		.loc 1 4640 0
 9289 0052 636A     		ldr	r3, [r4, #36]
 9290 0054 0133     		adds	r3, r3, #1
 9291 0056 6362     		str	r3, [r4, #36]
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
 9292              		.loc 1 4642 0
 9293 0058 238D     		ldrh	r3, [r4, #40]
 9294 005a 013B     		subs	r3, r3, #1
 9295 005c 2385     		strh	r3, [r4, #40]	@ movhi
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9296              		.loc 1 4643 0
 9297 005e 638D     		ldrh	r3, [r4, #42]
 9298 0060 9BB2     		uxth	r3, r3
 9299 0062 013B     		subs	r3, r3, #1
 9300 0064 9BB2     		uxth	r3, r3
 9301 0066 6385     		strh	r3, [r4, #42]	@ movhi
 9302 0068 77E0     		b	.L615
 9303              	.LVL815:
 9304              	.L616:
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9305              		.loc 1 4645 0
 9306 006a 15F0020F 		tst	r5, #2
 9307 006e 12D0     		beq	.L617
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9308              		.loc 1 4645 0 is_stmt 0 discriminator 1
 9309 0070 16F0020F 		tst	r6, #2
 9310 0074 0FD0     		beq	.L617
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9311              		.loc 1 4648 0 is_stmt 1
 9312 0076 2368     		ldr	r3, [r4]
 9313 0078 626A     		ldr	r2, [r4, #36]
 9314              	.LVL816:
 9315 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9316 007c 9A62     		str	r2, [r3, #40]
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9317              		.loc 1 4651 0
 9318 007e 636A     		ldr	r3, [r4, #36]
 9319 0080 0133     		adds	r3, r3, #1
 9320 0082 6362     		str	r3, [r4, #36]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 308


4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     hi2c->XferCount--;
 9321              		.loc 1 4653 0
 9322 0084 238D     		ldrh	r3, [r4, #40]
 9323 0086 013B     		subs	r3, r3, #1
 9324 0088 2385     		strh	r3, [r4, #40]	@ movhi
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9325              		.loc 1 4654 0
 9326 008a 638D     		ldrh	r3, [r4, #42]
 9327 008c 9BB2     		uxth	r3, r3
 9328 008e 013B     		subs	r3, r3, #1
 9329 0090 9BB2     		uxth	r3, r3
 9330 0092 6385     		strh	r3, [r4, #42]	@ movhi
 9331 0094 61E0     		b	.L615
 9332              	.LVL817:
 9333              	.L617:
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9334              		.loc 1 4656 0
 9335 0096 15F0800F 		tst	r5, #128
 9336 009a 3FD0     		beq	.L618
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9337              		.loc 1 4656 0 is_stmt 0 discriminator 1
 9338 009c 16F0400F 		tst	r6, #64
 9339 00a0 3CD0     		beq	.L618
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9340              		.loc 1 4658 0 is_stmt 1
 9341 00a2 638D     		ldrh	r3, [r4, #42]
 9342 00a4 9BB2     		uxth	r3, r3
 9343 00a6 5BB3     		cbz	r3, .L619
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9344              		.loc 1 4658 0 is_stmt 0 discriminator 1
 9345 00a8 238D     		ldrh	r3, [r4, #40]
 9346 00aa 4BBB     		cbnz	r3, .L619
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9347              		.loc 1 4660 0 is_stmt 1
 9348 00ac 2368     		ldr	r3, [r4]
 9349 00ae 5968     		ldr	r1, [r3, #4]
 9350              	.LVL818:
 9351 00b0 C1F30901 		ubfx	r1, r1, #0, #10
 9352              	.LVL819:
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9353              		.loc 1 4662 0
 9354 00b4 638D     		ldrh	r3, [r4, #42]
 9355 00b6 9BB2     		uxth	r3, r3
 9356 00b8 FF2B     		cmp	r3, #255
 9357 00ba 09D9     		bls	.L620
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9358              		.loc 1 4664 0
 9359 00bc FF22     		movs	r2, #255
 9360              	.LVL820:
 9361 00be 2285     		strh	r2, [r4, #40]	@ movhi
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9362              		.loc 1 4665 0
 9363 00c0 0023     		movs	r3, #0
 9364 00c2 0093     		str	r3, [sp]
 9365 00c4 4FF08073 		mov	r3, #16777216
 9366 00c8 2046     		mov	r0, r4
 9367              	.LVL821:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 309


 9368 00ca FFF7FEFF 		bl	I2C_TransferConfig
 9369              	.LVL822:
 9370 00ce 44E0     		b	.L615
 9371              	.LVL823:
 9372              	.L620:
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9373              		.loc 1 4669 0
 9374 00d0 628D     		ldrh	r2, [r4, #42]
 9375              	.LVL824:
 9376 00d2 92B2     		uxth	r2, r2
 9377 00d4 2285     		strh	r2, [r4, #40]	@ movhi
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9378              		.loc 1 4670 0
 9379 00d6 E36A     		ldr	r3, [r4, #44]
 9380 00d8 13F5803F 		cmn	r3, #65536
 9381 00dc 07D0     		beq	.L621
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9382              		.loc 1 4672 0
 9383 00de E36A     		ldr	r3, [r4, #44]
 9384 00e0 0020     		movs	r0, #0
 9385              	.LVL825:
 9386 00e2 0090     		str	r0, [sp]
 9387 00e4 D2B2     		uxtb	r2, r2
 9388 00e6 2046     		mov	r0, r4
 9389 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 9390              	.LVL826:
 9391 00ec 35E0     		b	.L615
 9392              	.LVL827:
 9393              	.L621:
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9394              		.loc 1 4676 0
 9395 00ee 0023     		movs	r3, #0
 9396 00f0 0093     		str	r3, [sp]
 9397 00f2 4FF00073 		mov	r3, #33554432
 9398 00f6 D2B2     		uxtb	r2, r2
 9399 00f8 2046     		mov	r0, r4
 9400              	.LVL828:
 9401 00fa FFF7FEFF 		bl	I2C_TransferConfig
 9402              	.LVL829:
 9403 00fe 2CE0     		b	.L615
 9404              	.LVL830:
 9405              	.L619:
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9406              		.loc 1 4683 0
 9407 0100 2368     		ldr	r3, [r4]
 9408 0102 5B68     		ldr	r3, [r3, #4]
 9409 0104 13F0007F 		tst	r3, #33554432
 9410 0108 03D1     		bne	.L622
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9411              		.loc 1 4686 0
 9412 010a 2046     		mov	r0, r4
 9413              	.LVL831:
 9414 010c FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9415              	.LVL832:
 9416 0110 23E0     		b	.L615
 9417              	.LVL833:
 9418              	.L622:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 310


4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9419              		.loc 1 4692 0
 9420 0112 4021     		movs	r1, #64
 9421              	.LVL834:
 9422 0114 2046     		mov	r0, r4
 9423              	.LVL835:
 9424 0116 FFF7FEFF 		bl	I2C_ITError
 9425              	.LVL836:
 9426 011a 1EE0     		b	.L615
 9427              	.LVL837:
 9428              	.L618:
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9429              		.loc 1 4696 0
 9430 011c 15F0400F 		tst	r5, #64
 9431 0120 1BD0     		beq	.L615
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9432              		.loc 1 4696 0 is_stmt 0 discriminator 1
 9433 0122 16F0400F 		tst	r6, #64
 9434 0126 18D0     		beq	.L615
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9435              		.loc 1 4698 0 is_stmt 1
 9436 0128 638D     		ldrh	r3, [r4, #42]
 9437 012a 9BB2     		uxth	r3, r3
 9438 012c 8BB9     		cbnz	r3, .L623
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9439              		.loc 1 4700 0
 9440 012e 2368     		ldr	r3, [r4]
 9441 0130 5A68     		ldr	r2, [r3, #4]
 9442              	.LVL838:
 9443 0132 12F0007F 		tst	r2, #33554432
 9444 0136 10D1     		bne	.L615
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9445              		.loc 1 4703 0
 9446 0138 E26A     		ldr	r2, [r4, #44]
 9447 013a 12F5803F 		cmn	r2, #65536
 9448 013e 04D1     		bne	.L624
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9449              		.loc 1 4706 0
 9450 0140 5A68     		ldr	r2, [r3, #4]
 9451 0142 42F48042 		orr	r2, r2, #16384
 9452 0146 5A60     		str	r2, [r3, #4]
 9453 0148 07E0     		b	.L615
 9454              	.L624:
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9455              		.loc 1 4711 0
 9456 014a 2046     		mov	r0, r4
 9457              	.LVL839:
 9458 014c FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9459              	.LVL840:
 9460 0150 03E0     		b	.L615
 9461              	.LVL841:
 9462              	.L623:
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9463              		.loc 1 4719 0
 9464 0152 4021     		movs	r1, #64
 9465              	.LVL842:
 9466 0154 2046     		mov	r0, r4
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 311


 9467              	.LVL843:
 9468 0156 FFF7FEFF 		bl	I2C_ITError
 9469              	.LVL844:
 9470              	.L615:
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9471              		.loc 1 4727 0
 9472 015a 15F0200F 		tst	r5, #32
 9473 015e 06D0     		beq	.L625
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9474              		.loc 1 4727 0 is_stmt 0 discriminator 1
 9475 0160 16F0200F 		tst	r6, #32
 9476 0164 03D0     		beq	.L625
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9477              		.loc 1 4730 0 is_stmt 1
 9478 0166 2946     		mov	r1, r5
 9479 0168 2046     		mov	r0, r4
 9480 016a FFF7FEFF 		bl	I2C_ITMasterCplt
 9481              	.LVL845:
 9482              	.L625:
4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9483              		.loc 1 4734 0
 9484 016e 0020     		movs	r0, #0
 9485 0170 84F84000 		strb	r0, [r4, #64]
4736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 9486              		.loc 1 4736 0
 9487 0174 01E0     		b	.L613
 9488              	.LVL846:
 9489              	.L626:
 9490              	.LCFI108:
 9491              		.cfi_def_cfa_offset 0
 9492              		.cfi_restore 4
 9493              		.cfi_restore 5
 9494              		.cfi_restore 6
 9495              		.cfi_restore 14
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9496              		.loc 1 4616 0
 9497 0176 0220     		movs	r0, #2
 9498              	.LVL847:
 9499 0178 7047     		bx	lr
 9500              	.LVL848:
 9501              	.L613:
 9502              	.LCFI109:
 9503              		.cfi_def_cfa_offset 24
 9504              		.cfi_offset 4, -16
 9505              		.cfi_offset 5, -12
 9506              		.cfi_offset 6, -8
 9507              		.cfi_offset 14, -4
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9508              		.loc 1 4737 0
 9509 017a 02B0     		add	sp, sp, #8
 9510              	.LCFI110:
 9511              		.cfi_def_cfa_offset 16
 9512              		@ sp needed
 9513 017c 70BD     		pop	{r4, r5, r6, pc}
 9514              		.cfi_endproc
 9515              	.LFE190:
 9517 017e 00BF     		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 312


 9518              		.align	2
 9519              		.thumb
 9520              		.thumb_func
 9522              	I2C_Slave_ISR_DMA:
 9523              	.LFB193:
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9524              		.loc 1 5016 0
 9525              		.cfi_startproc
 9526              		@ args = 0, pretend = 0, frame = 0
 9527              		@ frame_needed = 0, uses_anonymous_args = 0
 9528              	.LVL849:
 9529 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9530              	.LCFI111:
 9531              		.cfi_def_cfa_offset 24
 9532              		.cfi_offset 3, -24
 9533              		.cfi_offset 4, -20
 9534              		.cfi_offset 5, -16
 9535              		.cfi_offset 6, -12
 9536              		.cfi_offset 7, -8
 9537              		.cfi_offset 14, -4
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9538              		.loc 1 5017 0
 9539 0002 C76A     		ldr	r7, [r0, #44]
 9540              	.LVL850:
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9541              		.loc 1 5022 0
 9542 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9543 0008 012B     		cmp	r3, #1
 9544 000a 00F0FD80 		beq	.L648
 9545 000e 1646     		mov	r6, r2
 9546 0010 0C46     		mov	r4, r1
 9547 0012 0546     		mov	r5, r0
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9548              		.loc 1 5022 0 is_stmt 0 discriminator 2
 9549 0014 0123     		movs	r3, #1
 9550 0016 80F84030 		strb	r3, [r0, #64]
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9551              		.loc 1 5025 0 is_stmt 1 discriminator 2
 9552 001a 11F0200F 		tst	r1, #32
 9553 001e 04D0     		beq	.L631
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9554              		.loc 1 5025 0 is_stmt 0 discriminator 1
 9555 0020 12F0200F 		tst	r2, #32
 9556 0024 01D0     		beq	.L631
5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9557              		.loc 1 5028 0 is_stmt 1
 9558 0026 FFF7FEFF 		bl	I2C_ITSlaveCplt
 9559              	.LVL851:
 9560              	.L631:
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9561              		.loc 1 5031 0
 9562 002a 14F0100F 		tst	r4, #16
 9563 002e 00F0DD80 		beq	.L632
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9564              		.loc 1 5031 0 is_stmt 0 discriminator 1
 9565 0032 16F0100F 		tst	r6, #16
 9566 0036 00F0D980 		beq	.L632
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 313


5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9567              		.loc 1 5037 0 is_stmt 1
 9568 003a 16F4404F 		tst	r6, #49152
 9569 003e 00F0D180 		beq	.L633
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9570              		.loc 1 5041 0
 9571 0042 EB6B     		ldr	r3, [r5, #60]
 9572 0044 002B     		cmp	r3, #0
 9573 0046 40D0     		beq	.L649
5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9574              		.loc 1 5043 0
 9575 0048 16F4004F 		tst	r6, #32768
 9576 004c 3FD0     		beq	.L650
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9577              		.loc 1 5045 0
 9578 004e 1B68     		ldr	r3, [r3]
 9579 0050 6E4A     		ldr	r2, .L654
 9580 0052 6F49     		ldr	r1, .L654+4
 9581 0054 9342     		cmp	r3, r2
 9582 0056 18BF     		it	ne
 9583 0058 8B42     		cmpne	r3, r1
 9584 005a 2AD0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9585              		.loc 1 5045 0 is_stmt 0 discriminator 2
 9586 005c 1832     		adds	r2, r2, #24
 9587 005e 9342     		cmp	r3, r2
 9588 0060 27D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9589              		.loc 1 5045 0 discriminator 4
 9590 0062 1832     		adds	r2, r2, #24
 9591 0064 9342     		cmp	r3, r2
 9592 0066 24D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9593              		.loc 1 5045 0 discriminator 6
 9594 0068 1832     		adds	r2, r2, #24
 9595 006a 9342     		cmp	r3, r2
 9596 006c 21D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9597              		.loc 1 5045 0 discriminator 8
 9598 006e 1832     		adds	r2, r2, #24
 9599 0070 9342     		cmp	r3, r2
 9600 0072 1ED0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9601              		.loc 1 5045 0 discriminator 10
 9602 0074 1832     		adds	r2, r2, #24
 9603 0076 9342     		cmp	r3, r2
 9604 0078 1BD0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9605              		.loc 1 5045 0 discriminator 12
 9606 007a 1832     		adds	r2, r2, #24
 9607 007c 9342     		cmp	r3, r2
 9608 007e 18D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9609              		.loc 1 5045 0 discriminator 14
 9610 0080 02F55672 		add	r2, r2, #856
 9611 0084 9342     		cmp	r3, r2
 9612 0086 14D0     		beq	.L635
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 314


5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9613              		.loc 1 5045 0 discriminator 16
 9614 0088 1832     		adds	r2, r2, #24
 9615 008a 9342     		cmp	r3, r2
 9616 008c 11D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9617              		.loc 1 5045 0 discriminator 18
 9618 008e 1832     		adds	r2, r2, #24
 9619 0090 9342     		cmp	r3, r2
 9620 0092 0ED0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9621              		.loc 1 5045 0 discriminator 20
 9622 0094 1832     		adds	r2, r2, #24
 9623 0096 9342     		cmp	r3, r2
 9624 0098 0BD0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9625              		.loc 1 5045 0 discriminator 22
 9626 009a 1832     		adds	r2, r2, #24
 9627 009c 9342     		cmp	r3, r2
 9628 009e 08D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9629              		.loc 1 5045 0 discriminator 24
 9630 00a0 1832     		adds	r2, r2, #24
 9631 00a2 9342     		cmp	r3, r2
 9632 00a4 05D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9633              		.loc 1 5045 0 discriminator 26
 9634 00a6 1832     		adds	r2, r2, #24
 9635 00a8 9342     		cmp	r3, r2
 9636 00aa 02D0     		beq	.L635
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9637              		.loc 1 5045 0 discriminator 28
 9638 00ac 1832     		adds	r2, r2, #24
 9639 00ae 9342     		cmp	r3, r2
 9640 00b0 04D1     		bne	.L636
 9641              	.L635:
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9642              		.loc 1 5045 0 discriminator 29
 9643 00b2 5B68     		ldr	r3, [r3, #4]
 9644 00b4 B3FA83F3 		clz	r3, r3
 9645 00b8 5B09     		lsrs	r3, r3, #5
 9646 00ba 03E0     		b	.L637
 9647              	.L636:
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9648              		.loc 1 5045 0 discriminator 30
 9649 00bc 5B68     		ldr	r3, [r3, #4]
 9650 00be B3FA83F3 		clz	r3, r3
 9651 00c2 5B09     		lsrs	r3, r3, #5
 9652              	.L637:
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9653              		.loc 1 5045 0 discriminator 32
 9654 00c4 2BB9     		cbnz	r3, .L651
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9655              		.loc 1 5018 0 is_stmt 1
 9656 00c6 0022     		movs	r2, #0
 9657 00c8 04E0     		b	.L634
 9658              	.L649:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 315


 9659 00ca 0022     		movs	r2, #0
 9660 00cc 02E0     		b	.L634
 9661              	.L650:
 9662 00ce 0022     		movs	r2, #0
 9663 00d0 00E0     		b	.L634
 9664              	.L651:
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 9665              		.loc 1 5047 0
 9666 00d2 0122     		movs	r2, #1
 9667              	.L634:
 9668              	.LVL852:
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9669              		.loc 1 5053 0
 9670 00d4 AB6B     		ldr	r3, [r5, #56]
 9671 00d6 002B     		cmp	r3, #0
 9672 00d8 3FD0     		beq	.L638
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9673              		.loc 1 5055 0
 9674 00da 16F4804F 		tst	r6, #16384
 9675 00de 3CD0     		beq	.L638
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9676              		.loc 1 5057 0
 9677 00e0 1B68     		ldr	r3, [r3]
 9678 00e2 4A49     		ldr	r1, .L654
 9679 00e4 4A48     		ldr	r0, .L654+4
 9680 00e6 8B42     		cmp	r3, r1
 9681 00e8 18BF     		it	ne
 9682 00ea 8342     		cmpne	r3, r0
 9683 00ec 2AD0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9684              		.loc 1 5057 0 is_stmt 0 discriminator 2
 9685 00ee 1831     		adds	r1, r1, #24
 9686 00f0 8B42     		cmp	r3, r1
 9687 00f2 27D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9688              		.loc 1 5057 0 discriminator 4
 9689 00f4 1831     		adds	r1, r1, #24
 9690 00f6 8B42     		cmp	r3, r1
 9691 00f8 24D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9692              		.loc 1 5057 0 discriminator 6
 9693 00fa 1831     		adds	r1, r1, #24
 9694 00fc 8B42     		cmp	r3, r1
 9695 00fe 21D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9696              		.loc 1 5057 0 discriminator 8
 9697 0100 1831     		adds	r1, r1, #24
 9698 0102 8B42     		cmp	r3, r1
 9699 0104 1ED0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9700              		.loc 1 5057 0 discriminator 10
 9701 0106 1831     		adds	r1, r1, #24
 9702 0108 8B42     		cmp	r3, r1
 9703 010a 1BD0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9704              		.loc 1 5057 0 discriminator 12
 9705 010c 1831     		adds	r1, r1, #24
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 316


 9706 010e 8B42     		cmp	r3, r1
 9707 0110 18D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9708              		.loc 1 5057 0 discriminator 14
 9709 0112 01F55671 		add	r1, r1, #856
 9710 0116 8B42     		cmp	r3, r1
 9711 0118 14D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9712              		.loc 1 5057 0 discriminator 16
 9713 011a 1831     		adds	r1, r1, #24
 9714 011c 8B42     		cmp	r3, r1
 9715 011e 11D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9716              		.loc 1 5057 0 discriminator 18
 9717 0120 1831     		adds	r1, r1, #24
 9718 0122 8B42     		cmp	r3, r1
 9719 0124 0ED0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9720              		.loc 1 5057 0 discriminator 20
 9721 0126 1831     		adds	r1, r1, #24
 9722 0128 8B42     		cmp	r3, r1
 9723 012a 0BD0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9724              		.loc 1 5057 0 discriminator 22
 9725 012c 1831     		adds	r1, r1, #24
 9726 012e 8B42     		cmp	r3, r1
 9727 0130 08D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9728              		.loc 1 5057 0 discriminator 24
 9729 0132 1831     		adds	r1, r1, #24
 9730 0134 8B42     		cmp	r3, r1
 9731 0136 05D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9732              		.loc 1 5057 0 discriminator 26
 9733 0138 1831     		adds	r1, r1, #24
 9734 013a 8B42     		cmp	r3, r1
 9735 013c 02D0     		beq	.L639
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9736              		.loc 1 5057 0 discriminator 28
 9737 013e 1831     		adds	r1, r1, #24
 9738 0140 8B42     		cmp	r3, r1
 9739 0142 04D1     		bne	.L640
 9740              	.L639:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9741              		.loc 1 5057 0 discriminator 29
 9742 0144 5B68     		ldr	r3, [r3, #4]
 9743 0146 B3FA83F3 		clz	r3, r3
 9744 014a 5B09     		lsrs	r3, r3, #5
 9745 014c 03E0     		b	.L641
 9746              	.L640:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9747              		.loc 1 5057 0 discriminator 30
 9748 014e 5B68     		ldr	r3, [r3, #4]
 9749 0150 B3FA83F3 		clz	r3, r3
 9750 0154 5B09     		lsrs	r3, r3, #5
 9751              	.L641:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 317


 9752              		.loc 1 5057 0 discriminator 32
 9753 0156 03B1     		cbz	r3, .L638
5059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 9754              		.loc 1 5059 0 is_stmt 1
 9755 0158 0122     		movs	r2, #1
 9756              	.LVL853:
 9757              	.L638:
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9758              		.loc 1 5064 0
 9759 015a 12B3     		cbz	r2, .L642
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9760              		.loc 1 5066 0
 9761 015c 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9762 0160 DBB2     		uxtb	r3, r3
 9763 0162 282B     		cmp	r3, #40
 9764 0164 07D1     		bne	.L643
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9765              		.loc 1 5066 0 is_stmt 0 discriminator 1
 9766 0166 B7F1007F 		cmp	r7, #33554432
 9767 016a 04D1     		bne	.L643
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9768              		.loc 1 5069 0 is_stmt 1
 9769 016c 2146     		mov	r1, r4
 9770 016e 2846     		mov	r0, r5
 9771 0170 FFF7FEFF 		bl	I2C_ITListenCplt
 9772              	.LVL854:
 9773 0174 44E0     		b	.L644
 9774              	.LVL855:
 9775              	.L643:
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9776              		.loc 1 5071 0
 9777 0176 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9778 017a DBB2     		uxtb	r3, r3
 9779 017c 292B     		cmp	r3, #41
 9780 017e 0CD1     		bne	.L645
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9781              		.loc 1 5071 0 is_stmt 0 discriminator 1
 9782 0180 17F5803F 		cmn	r7, #65536
 9783 0184 09D0     		beq	.L645
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9784              		.loc 1 5074 0 is_stmt 1
 9785 0186 2B68     		ldr	r3, [r5]
 9786 0188 1022     		movs	r2, #16
 9787              	.LVL856:
 9788 018a DA61     		str	r2, [r3, #28]
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9789              		.loc 1 5077 0
 9790 018c 2846     		mov	r0, r5
 9791 018e FFF7FEFF 		bl	I2C_Flush_TXDR
 9792              	.LVL857:
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9793              		.loc 1 5081 0
 9794 0192 2846     		mov	r0, r5
 9795 0194 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9796              	.LVL858:
 9797 0198 32E0     		b	.L644
 9798              	.LVL859:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 318


 9799              	.L645:
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9800              		.loc 1 5086 0
 9801 019a 2B68     		ldr	r3, [r5]
 9802 019c 1022     		movs	r2, #16
 9803              	.LVL860:
 9804 019e DA61     		str	r2, [r3, #28]
 9805 01a0 2EE0     		b	.L644
 9806              	.LVL861:
 9807              	.L642:
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9808              		.loc 1 5093 0
 9809 01a2 2B68     		ldr	r3, [r5]
 9810 01a4 1022     		movs	r2, #16
 9811              	.LVL862:
 9812 01a6 DA61     		str	r2, [r3, #28]
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9813              		.loc 1 5096 0
 9814 01a8 6B6C     		ldr	r3, [r5, #68]
 9815 01aa 43F00403 		orr	r3, r3, #4
 9816 01ae 6B64     		str	r3, [r5, #68]
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9817              		.loc 1 5099 0
 9818 01b0 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9819 01b4 DBB2     		uxtb	r3, r3
 9820              	.LVL863:
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 9821              		.loc 1 5101 0
 9822 01b6 B7F1807F 		cmp	r7, #16777216
 9823 01ba 18BF     		it	ne
 9824 01bc 002F     		cmpne	r7, #0
 9825 01be 1FD1     		bne	.L644
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9826              		.loc 1 5103 0
 9827 01c0 292B     		cmp	r3, #41
 9828 01c2 18BF     		it	ne
 9829 01c4 212B     		cmpne	r3, #33
 9830 01c6 02D1     		bne	.L646
5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 9831              		.loc 1 5105 0
 9832 01c8 2123     		movs	r3, #33
 9833              	.LVL864:
 9834 01ca 2B63     		str	r3, [r5, #48]
 9835 01cc 05E0     		b	.L647
 9836              	.LVL865:
 9837              	.L646:
5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           {
 9838              		.loc 1 5107 0
 9839 01ce 2A2B     		cmp	r3, #42
 9840 01d0 18BF     		it	ne
 9841 01d2 222B     		cmpne	r3, #34
 9842 01d4 01D1     		bne	.L647
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****           }
 9843              		.loc 1 5109 0
 9844 01d6 2223     		movs	r3, #34
 9845              	.LVL866:
 9846 01d8 2B63     		str	r3, [r5, #48]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 319


 9847              	.L647:
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9848              		.loc 1 5117 0
 9849 01da 696C     		ldr	r1, [r5, #68]
 9850 01dc 2846     		mov	r0, r5
 9851 01de FFF7FEFF 		bl	I2C_ITError
 9852              	.LVL867:
 9853 01e2 0DE0     		b	.L644
 9854              	.LVL868:
 9855              	.L633:
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 9856              		.loc 1 5124 0
 9857 01e4 2B68     		ldr	r3, [r5]
 9858 01e6 1022     		movs	r2, #16
 9859 01e8 DA61     		str	r2, [r3, #28]
 9860 01ea 09E0     		b	.L644
 9861              	.L632:
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9862              		.loc 1 5127 0
 9863 01ec 14F0080F 		tst	r4, #8
 9864 01f0 06D0     		beq	.L644
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9865              		.loc 1 5127 0 is_stmt 0 discriminator 1
 9866 01f2 16F0080F 		tst	r6, #8
 9867 01f6 03D0     		beq	.L644
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 9868              		.loc 1 5129 0 is_stmt 1
 9869 01f8 2146     		mov	r1, r4
 9870 01fa 2846     		mov	r0, r5
 9871 01fc FFF7FEFF 		bl	I2C_ITAddrCplt
 9872              	.LVL869:
 9873              	.L644:
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9874              		.loc 1 5137 0
 9875 0200 0020     		movs	r0, #0
 9876 0202 85F84000 		strb	r0, [r5, #64]
5139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 9877              		.loc 1 5139 0
 9878 0206 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9879              	.LVL870:
 9880              	.L648:
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9881              		.loc 1 5022 0
 9882 0208 0220     		movs	r0, #2
 9883              	.LVL871:
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9884              		.loc 1 5140 0
 9885 020a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9886              	.LVL872:
 9887              	.L655:
 9888              		.align	2
 9889              	.L654:
 9890 020c 28000240 		.word	1073872936
 9891 0210 10000240 		.word	1073872912
 9892              		.cfi_endproc
 9893              	.LFE193:
 9895              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 320


 9896              		.align	2
 9897              		.thumb
 9898              		.thumb_func
 9900              	I2C_Master_ISR_DMA:
 9901              	.LFB192:
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 9902              		.loc 1 4881 0
 9903              		.cfi_startproc
 9904              		@ args = 0, pretend = 0, frame = 0
 9905              		@ frame_needed = 0, uses_anonymous_args = 0
 9906              	.LVL873:
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9907              		.loc 1 4886 0
 9908 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9909 0004 012B     		cmp	r3, #1
 9910 0006 00F09980 		beq	.L669
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint16_t devaddress;
 9911              		.loc 1 4881 0 discriminator 2
 9912 000a 10B5     		push	{r4, lr}
 9913              	.LCFI112:
 9914              		.cfi_def_cfa_offset 8
 9915              		.cfi_offset 4, -8
 9916              		.cfi_offset 14, -4
 9917 000c 82B0     		sub	sp, sp, #8
 9918              	.LCFI113:
 9919              		.cfi_def_cfa_offset 16
 9920 000e 0446     		mov	r4, r0
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9921              		.loc 1 4886 0 discriminator 2
 9922 0010 0123     		movs	r3, #1
 9923 0012 80F84030 		strb	r3, [r0, #64]
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9924              		.loc 1 4888 0 discriminator 2
 9925 0016 11F0100F 		tst	r1, #16
 9926 001a 10D0     		beq	.L658
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9927              		.loc 1 4888 0 is_stmt 0 discriminator 1
 9928 001c 12F0100F 		tst	r2, #16
 9929 0020 0DD0     		beq	.L658
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9930              		.loc 1 4891 0 is_stmt 1
 9931 0022 0368     		ldr	r3, [r0]
 9932 0024 1022     		movs	r2, #16
 9933              	.LVL874:
 9934 0026 DA61     		str	r2, [r3, #28]
4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9935              		.loc 1 4894 0
 9936 0028 436C     		ldr	r3, [r0, #68]
 9937 002a 43F00403 		orr	r3, r3, #4
 9938 002e 4364     		str	r3, [r0, #68]
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9939              		.loc 1 4899 0
 9940 0030 2021     		movs	r1, #32
 9941              	.LVL875:
 9942 0032 FFF7FEFF 		bl	I2C_Enable_IRQ
 9943              	.LVL876:
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 321


 9944              		.loc 1 4902 0
 9945 0036 2046     		mov	r0, r4
 9946 0038 FFF7FEFF 		bl	I2C_Flush_TXDR
 9947              	.LVL877:
 9948 003c 7AE0     		b	.L659
 9949              	.LVL878:
 9950              	.L658:
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9951              		.loc 1 4904 0
 9952 003e 11F0800F 		tst	r1, #128
 9953 0042 4ED0     		beq	.L660
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 9954              		.loc 1 4904 0 is_stmt 0 discriminator 1
 9955 0044 12F0400F 		tst	r2, #64
 9956 0048 4BD0     		beq	.L660
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9957              		.loc 1 4907 0 is_stmt 1
 9958 004a 2268     		ldr	r2, [r4]
 9959              	.LVL879:
 9960 004c 1368     		ldr	r3, [r2]
 9961 004e 23F04003 		bic	r3, r3, #64
 9962 0052 1360     		str	r3, [r2]
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 9963              		.loc 1 4909 0
 9964 0054 638D     		ldrh	r3, [r4, #42]
 9965 0056 9BB2     		uxth	r3, r3
 9966 0058 002B     		cmp	r3, #0
 9967 005a 34D0     		beq	.L661
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 9968              		.loc 1 4912 0
 9969 005c 2368     		ldr	r3, [r4]
 9970 005e 5968     		ldr	r1, [r3, #4]
 9971              	.LVL880:
 9972 0060 C1F30901 		ubfx	r1, r1, #0, #10
 9973              	.LVL881:
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 9974              		.loc 1 4915 0
 9975 0064 638D     		ldrh	r3, [r4, #42]
 9976 0066 9BB2     		uxth	r3, r3
 9977 0068 FF2B     		cmp	r3, #255
 9978 006a 04D9     		bls	.L662
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 9979              		.loc 1 4917 0
 9980 006c FF23     		movs	r3, #255
 9981 006e 2385     		strh	r3, [r4, #40]	@ movhi
 9982              	.LVL882:
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 9983              		.loc 1 4918 0
 9984 0070 4FF08073 		mov	r3, #16777216
 9985 0074 09E0     		b	.L663
 9986              	.LVL883:
 9987              	.L662:
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9988              		.loc 1 4922 0
 9989 0076 638D     		ldrh	r3, [r4, #42]
 9990 0078 2385     		strh	r3, [r4, #40]	@ movhi
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 322


 9991              		.loc 1 4923 0
 9992 007a E36A     		ldr	r3, [r4, #44]
 9993 007c 13F5803F 		cmn	r3, #65536
 9994 0080 01D0     		beq	.L670
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 9995              		.loc 1 4925 0
 9996 0082 E36A     		ldr	r3, [r4, #44]
 9997              	.LVL884:
 9998 0084 01E0     		b	.L663
 9999              	.LVL885:
 10000              	.L670:
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10001              		.loc 1 4929 0
 10002 0086 4FF00073 		mov	r3, #33554432
 10003              	.L663:
 10004              	.LVL886:
4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10005              		.loc 1 4934 0
 10006 008a 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 10007 008e 0020     		movs	r0, #0
 10008              	.LVL887:
 10009 0090 0090     		str	r0, [sp]
 10010 0092 2046     		mov	r0, r4
 10011 0094 FFF7FEFF 		bl	I2C_TransferConfig
 10012              	.LVL888:
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10013              		.loc 1 4937 0
 10014 0098 638D     		ldrh	r3, [r4, #42]
 10015 009a 9BB2     		uxth	r3, r3
 10016 009c 228D     		ldrh	r2, [r4, #40]
 10017 009e 9B1A     		subs	r3, r3, r2
 10018 00a0 9BB2     		uxth	r3, r3
 10019 00a2 6385     		strh	r3, [r4, #42]	@ movhi
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10020              		.loc 1 4940 0
 10021 00a4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 10022 00a8 DBB2     		uxtb	r3, r3
 10023 00aa 222B     		cmp	r3, #34
 10024 00ac 05D1     		bne	.L664
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10025              		.loc 1 4942 0
 10026 00ae 2268     		ldr	r2, [r4]
 10027 00b0 1368     		ldr	r3, [r2]
 10028 00b2 43F40043 		orr	r3, r3, #32768
 10029 00b6 1360     		str	r3, [r2]
 10030 00b8 3CE0     		b	.L659
 10031              	.L664:
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10032              		.loc 1 4946 0
 10033 00ba 2268     		ldr	r2, [r4]
 10034 00bc 1368     		ldr	r3, [r2]
 10035 00be 43F48043 		orr	r3, r3, #16384
 10036 00c2 1360     		str	r3, [r2]
 10037 00c4 36E0     		b	.L659
 10038              	.LVL889:
 10039              	.L661:
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 323


 10040              		.loc 1 4952 0
 10041 00c6 2368     		ldr	r3, [r4]
 10042 00c8 5B68     		ldr	r3, [r3, #4]
 10043 00ca 13F0007F 		tst	r3, #33554432
 10044 00ce 03D1     		bne	.L665
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10045              		.loc 1 4955 0
 10046 00d0 2046     		mov	r0, r4
 10047              	.LVL890:
 10048 00d2 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10049              	.LVL891:
 10050 00d6 2DE0     		b	.L659
 10051              	.LVL892:
 10052              	.L665:
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       }
 10053              		.loc 1 4961 0
 10054 00d8 4021     		movs	r1, #64
 10055              	.LVL893:
 10056 00da 2046     		mov	r0, r4
 10057              	.LVL894:
 10058 00dc FFF7FEFF 		bl	I2C_ITError
 10059              	.LVL895:
 10060 00e0 28E0     		b	.L659
 10061              	.LVL896:
 10062              	.L660:
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10063              		.loc 1 4965 0
 10064 00e2 11F0400F 		tst	r1, #64
 10065 00e6 1CD0     		beq	.L666
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10066              		.loc 1 4965 0 is_stmt 0 discriminator 1
 10067 00e8 12F0400F 		tst	r2, #64
 10068 00ec 19D0     		beq	.L666
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10069              		.loc 1 4967 0 is_stmt 1
 10070 00ee 638D     		ldrh	r3, [r4, #42]
 10071 00f0 9BB2     		uxth	r3, r3
 10072 00f2 8BB9     		cbnz	r3, .L667
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****       {
 10073              		.loc 1 4969 0
 10074 00f4 2368     		ldr	r3, [r4]
 10075 00f6 5A68     		ldr	r2, [r3, #4]
 10076              	.LVL897:
 10077 00f8 12F0007F 		tst	r2, #33554432
 10078 00fc 1AD1     		bne	.L659
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         {
 10079              		.loc 1 4972 0
 10080 00fe E26A     		ldr	r2, [r4, #44]
 10081 0100 12F5803F 		cmn	r2, #65536
 10082 0104 04D1     		bne	.L668
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10083              		.loc 1 4975 0
 10084 0106 5A68     		ldr	r2, [r3, #4]
 10085 0108 42F48042 		orr	r2, r2, #16384
 10086 010c 5A60     		str	r2, [r3, #4]
 10087 010e 11E0     		b	.L659
 10088              	.L668:
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 324


4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****         }
 10089              		.loc 1 4980 0
 10090 0110 2046     		mov	r0, r4
 10091              	.LVL898:
 10092 0112 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10093              	.LVL899:
 10094 0116 0DE0     		b	.L659
 10095              	.LVL900:
 10096              	.L667:
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10097              		.loc 1 4988 0
 10098 0118 4021     		movs	r1, #64
 10099              	.LVL901:
 10100 011a 2046     		mov	r0, r4
 10101              	.LVL902:
 10102 011c FFF7FEFF 		bl	I2C_ITError
 10103              	.LVL903:
 10104 0120 08E0     		b	.L659
 10105              	.LVL904:
 10106              	.L666:
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10107              		.loc 1 4991 0
 10108 0122 11F0200F 		tst	r1, #32
 10109 0126 05D0     		beq	.L659
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10110              		.loc 1 4991 0 is_stmt 0 discriminator 1
 10111 0128 12F0200F 		tst	r2, #32
 10112 012c 02D0     		beq	.L659
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10113              		.loc 1 4994 0 is_stmt 1
 10114 012e 2046     		mov	r0, r4
 10115              	.LVL905:
 10116 0130 FFF7FEFF 		bl	I2C_ITMasterCplt
 10117              	.LVL906:
 10118              	.L659:
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10119              		.loc 1 5002 0
 10120 0134 0020     		movs	r0, #0
 10121 0136 84F84000 		strb	r0, [r4, #64]
5004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 10122              		.loc 1 5004 0
 10123 013a 01E0     		b	.L657
 10124              	.LVL907:
 10125              	.L669:
 10126              	.LCFI114:
 10127              		.cfi_def_cfa_offset 0
 10128              		.cfi_restore 4
 10129              		.cfi_restore 14
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10130              		.loc 1 4886 0
 10131 013c 0220     		movs	r0, #2
 10132              	.LVL908:
 10133 013e 7047     		bx	lr
 10134              	.LVL909:
 10135              	.L657:
 10136              	.LCFI115:
 10137              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 325


 10138              		.cfi_offset 4, -8
 10139              		.cfi_offset 14, -4
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10140              		.loc 1 5005 0
 10141 0140 02B0     		add	sp, sp, #8
 10142              	.LCFI116:
 10143              		.cfi_def_cfa_offset 8
 10144              		@ sp needed
 10145 0142 10BD     		pop	{r4, pc}
 10146              		.cfi_endproc
 10147              	.LFE192:
 10149              		.section	.text.I2C_DMAError,"ax",%progbits
 10150              		.align	2
 10151              		.thumb
 10152              		.thumb_func
 10154              	I2C_DMAError:
 10155              	.LFB209:
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 10156              		.loc 1 6149 0
 10157              		.cfi_startproc
 10158              		@ args = 0, pretend = 0, frame = 0
 10159              		@ frame_needed = 0, uses_anonymous_args = 0
 10160              	.LVL910:
 10161 0000 38B5     		push	{r3, r4, r5, lr}
 10162              	.LCFI117:
 10163              		.cfi_def_cfa_offset 16
 10164              		.cfi_offset 3, -16
 10165              		.cfi_offset 4, -12
 10166              		.cfi_offset 5, -8
 10167              		.cfi_offset 14, -4
 10168              	.LVL911:
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10169              		.loc 1 6151 0
 10170 0002 846B     		ldr	r4, [r0, #56]
 10171              	.LVL912:
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10172              		.loc 1 6153 0
 10173 0004 A36B     		ldr	r3, [r4, #56]
 10174 0006 002B     		cmp	r3, #0
 10175 0008 3DD0     		beq	.L683
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10176              		.loc 1 6155 0
 10177 000a 1B68     		ldr	r3, [r3]
 10178 000c 474A     		ldr	r2, .L687
 10179 000e 4849     		ldr	r1, .L687+4
 10180 0010 9342     		cmp	r3, r2
 10181 0012 18BF     		it	ne
 10182 0014 8B42     		cmpne	r3, r1
 10183 0016 2AD0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10184              		.loc 1 6155 0 is_stmt 0 discriminator 2
 10185 0018 1832     		adds	r2, r2, #24
 10186 001a 9342     		cmp	r3, r2
 10187 001c 27D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10188              		.loc 1 6155 0 discriminator 4
 10189 001e 1832     		adds	r2, r2, #24
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 326


 10190 0020 9342     		cmp	r3, r2
 10191 0022 24D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10192              		.loc 1 6155 0 discriminator 6
 10193 0024 1832     		adds	r2, r2, #24
 10194 0026 9342     		cmp	r3, r2
 10195 0028 21D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10196              		.loc 1 6155 0 discriminator 8
 10197 002a 1832     		adds	r2, r2, #24
 10198 002c 9342     		cmp	r3, r2
 10199 002e 1ED0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10200              		.loc 1 6155 0 discriminator 10
 10201 0030 1832     		adds	r2, r2, #24
 10202 0032 9342     		cmp	r3, r2
 10203 0034 1BD0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10204              		.loc 1 6155 0 discriminator 12
 10205 0036 1832     		adds	r2, r2, #24
 10206 0038 9342     		cmp	r3, r2
 10207 003a 18D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10208              		.loc 1 6155 0 discriminator 14
 10209 003c 02F55672 		add	r2, r2, #856
 10210 0040 9342     		cmp	r3, r2
 10211 0042 14D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10212              		.loc 1 6155 0 discriminator 16
 10213 0044 1832     		adds	r2, r2, #24
 10214 0046 9342     		cmp	r3, r2
 10215 0048 11D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10216              		.loc 1 6155 0 discriminator 18
 10217 004a 1832     		adds	r2, r2, #24
 10218 004c 9342     		cmp	r3, r2
 10219 004e 0ED0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10220              		.loc 1 6155 0 discriminator 20
 10221 0050 1832     		adds	r2, r2, #24
 10222 0052 9342     		cmp	r3, r2
 10223 0054 0BD0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10224              		.loc 1 6155 0 discriminator 22
 10225 0056 1832     		adds	r2, r2, #24
 10226 0058 9342     		cmp	r3, r2
 10227 005a 08D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10228              		.loc 1 6155 0 discriminator 24
 10229 005c 1832     		adds	r2, r2, #24
 10230 005e 9342     		cmp	r3, r2
 10231 0060 05D0     		beq	.L675
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10232              		.loc 1 6155 0 discriminator 26
 10233 0062 1832     		adds	r2, r2, #24
 10234 0064 9342     		cmp	r3, r2
 10235 0066 02D0     		beq	.L675
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 327


6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10236              		.loc 1 6155 0 discriminator 28
 10237 0068 1832     		adds	r2, r2, #24
 10238 006a 9342     		cmp	r3, r2
 10239 006c 04D1     		bne	.L676
 10240              	.L675:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10241              		.loc 1 6155 0 discriminator 29
 10242 006e 5B68     		ldr	r3, [r3, #4]
 10243 0070 B3FA83F3 		clz	r3, r3
 10244 0074 5B09     		lsrs	r3, r3, #5
 10245 0076 03E0     		b	.L677
 10246              	.L676:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10247              		.loc 1 6155 0 discriminator 30
 10248 0078 5B68     		ldr	r3, [r3, #4]
 10249 007a B3FA83F3 		clz	r3, r3
 10250 007e 5B09     		lsrs	r3, r3, #5
 10251              	.L677:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10252              		.loc 1 6155 0 discriminator 32
 10253 0080 1BB9     		cbnz	r3, .L684
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10254              		.loc 1 6150 0 is_stmt 1
 10255 0082 0025     		movs	r5, #0
 10256 0084 02E0     		b	.L674
 10257              	.L683:
 10258 0086 0025     		movs	r5, #0
 10259 0088 00E0     		b	.L674
 10260              	.L684:
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10261              		.loc 1 6157 0
 10262 008a 0125     		movs	r5, #1
 10263              	.L674:
 10264              	.LVL913:
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10265              		.loc 1 6161 0
 10266 008c E36B     		ldr	r3, [r4, #60]
 10267 008e 002B     		cmp	r3, #0
 10268 0090 3CD0     		beq	.L678
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10269              		.loc 1 6163 0
 10270 0092 1B68     		ldr	r3, [r3]
 10271 0094 254A     		ldr	r2, .L687
 10272 0096 2649     		ldr	r1, .L687+4
 10273 0098 9342     		cmp	r3, r2
 10274 009a 18BF     		it	ne
 10275 009c 8B42     		cmpne	r3, r1
 10276 009e 2AD0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10277              		.loc 1 6163 0 is_stmt 0 discriminator 2
 10278 00a0 1832     		adds	r2, r2, #24
 10279 00a2 9342     		cmp	r3, r2
 10280 00a4 27D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10281              		.loc 1 6163 0 discriminator 4
 10282 00a6 1832     		adds	r2, r2, #24
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 328


 10283 00a8 9342     		cmp	r3, r2
 10284 00aa 24D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10285              		.loc 1 6163 0 discriminator 6
 10286 00ac 1832     		adds	r2, r2, #24
 10287 00ae 9342     		cmp	r3, r2
 10288 00b0 21D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10289              		.loc 1 6163 0 discriminator 8
 10290 00b2 1832     		adds	r2, r2, #24
 10291 00b4 9342     		cmp	r3, r2
 10292 00b6 1ED0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10293              		.loc 1 6163 0 discriminator 10
 10294 00b8 1832     		adds	r2, r2, #24
 10295 00ba 9342     		cmp	r3, r2
 10296 00bc 1BD0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10297              		.loc 1 6163 0 discriminator 12
 10298 00be 1832     		adds	r2, r2, #24
 10299 00c0 9342     		cmp	r3, r2
 10300 00c2 18D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10301              		.loc 1 6163 0 discriminator 14
 10302 00c4 02F55672 		add	r2, r2, #856
 10303 00c8 9342     		cmp	r3, r2
 10304 00ca 14D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10305              		.loc 1 6163 0 discriminator 16
 10306 00cc 1832     		adds	r2, r2, #24
 10307 00ce 9342     		cmp	r3, r2
 10308 00d0 11D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10309              		.loc 1 6163 0 discriminator 18
 10310 00d2 1832     		adds	r2, r2, #24
 10311 00d4 9342     		cmp	r3, r2
 10312 00d6 0ED0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10313              		.loc 1 6163 0 discriminator 20
 10314 00d8 1832     		adds	r2, r2, #24
 10315 00da 9342     		cmp	r3, r2
 10316 00dc 0BD0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10317              		.loc 1 6163 0 discriminator 22
 10318 00de 1832     		adds	r2, r2, #24
 10319 00e0 9342     		cmp	r3, r2
 10320 00e2 08D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10321              		.loc 1 6163 0 discriminator 24
 10322 00e4 1832     		adds	r2, r2, #24
 10323 00e6 9342     		cmp	r3, r2
 10324 00e8 05D0     		beq	.L679
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10325              		.loc 1 6163 0 discriminator 26
 10326 00ea 1832     		adds	r2, r2, #24
 10327 00ec 9342     		cmp	r3, r2
 10328 00ee 02D0     		beq	.L679
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 329


6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10329              		.loc 1 6163 0 discriminator 28
 10330 00f0 1832     		adds	r2, r2, #24
 10331 00f2 9342     		cmp	r3, r2
 10332 00f4 04D1     		bne	.L680
 10333              	.L679:
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10334              		.loc 1 6163 0 discriminator 29
 10335 00f6 5B68     		ldr	r3, [r3, #4]
 10336 00f8 B3FA83F3 		clz	r3, r3
 10337 00fc 5B09     		lsrs	r3, r3, #5
 10338 00fe 03E0     		b	.L681
 10339              	.L680:
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10340              		.loc 1 6163 0 discriminator 30
 10341 0100 5B68     		ldr	r3, [r3, #4]
 10342 0102 B3FA83F3 		clz	r3, r3
 10343 0106 5B09     		lsrs	r3, r3, #5
 10344              	.L681:
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10345              		.loc 1 6163 0 discriminator 32
 10346 0108 03B1     		cbz	r3, .L678
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10347              		.loc 1 6165 0 is_stmt 1
 10348 010a 0125     		movs	r5, #1
 10349              	.LVL914:
 10350              	.L678:
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10351              		.loc 1 6170 0
 10352 010c FFF7FEFF 		bl	HAL_DMA_GetError
 10353              	.LVL915:
 10354 0110 0228     		cmp	r0, #2
 10355 0112 09D0     		beq	.L673
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10356              		.loc 1 6170 0 is_stmt 0 discriminator 1
 10357 0114 45B1     		cbz	r5, .L673
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10358              		.loc 1 6173 0 is_stmt 1
 10359 0116 2268     		ldr	r2, [r4]
 10360 0118 5368     		ldr	r3, [r2, #4]
 10361 011a 43F40043 		orr	r3, r3, #32768
 10362 011e 5360     		str	r3, [r2, #4]
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10363              		.loc 1 6176 0
 10364 0120 1021     		movs	r1, #16
 10365 0122 2046     		mov	r0, r4
 10366 0124 FFF7FEFF 		bl	I2C_ITError
 10367              	.LVL916:
 10368              	.L673:
 10369 0128 38BD     		pop	{r3, r4, r5, pc}
 10370              	.LVL917:
 10371              	.L688:
 10372 012a 00BF     		.align	2
 10373              	.L687:
 10374 012c 28000240 		.word	1073872936
 10375 0130 10000240 		.word	1073872912
 10376              		.cfi_endproc
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 330


 10377              	.LFE209:
 10379              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 10380              		.align	2
 10381              		.thumb
 10382              		.thumb_func
 10384              	I2C_DMAMasterTransmitCplt:
 10385              	.LFB205:
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10386              		.loc 1 5999 0
 10387              		.cfi_startproc
 10388              		@ args = 0, pretend = 0, frame = 0
 10389              		@ frame_needed = 0, uses_anonymous_args = 0
 10390              	.LVL918:
 10391 0000 10B5     		push	{r4, lr}
 10392              	.LCFI118:
 10393              		.cfi_def_cfa_offset 8
 10394              		.cfi_offset 4, -8
 10395              		.cfi_offset 14, -4
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10396              		.loc 1 6000 0
 10397 0002 846B     		ldr	r4, [r0, #56]
 10398              	.LVL919:
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10399              		.loc 1 6003 0
 10400 0004 2268     		ldr	r2, [r4]
 10401 0006 1368     		ldr	r3, [r2]
 10402 0008 23F48043 		bic	r3, r3, #16384
 10403 000c 1360     		str	r3, [r2]
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10404              		.loc 1 6006 0
 10405 000e 638D     		ldrh	r3, [r4, #42]
 10406 0010 9BB2     		uxth	r3, r3
 10407 0012 23B9     		cbnz	r3, .L690
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10408              		.loc 1 6009 0
 10409 0014 2021     		movs	r1, #32
 10410 0016 2046     		mov	r0, r4
 10411              	.LVL920:
 10412 0018 FFF7FEFF 		bl	I2C_Enable_IRQ
 10413              	.LVL921:
 10414 001c 10BD     		pop	{r4, pc}
 10415              	.LVL922:
 10416              	.L690:
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10417              		.loc 1 6015 0
 10418 001e 238D     		ldrh	r3, [r4, #40]
 10419 0020 616A     		ldr	r1, [r4, #36]
 10420 0022 1944     		add	r1, r1, r3
 10421 0024 6162     		str	r1, [r4, #36]
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10422              		.loc 1 6018 0
 10423 0026 638D     		ldrh	r3, [r4, #42]
 10424 0028 9BB2     		uxth	r3, r3
 10425 002a FF2B     		cmp	r3, #255
 10426 002c 02D9     		bls	.L692
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10427              		.loc 1 6020 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 331


 10428 002e FF23     		movs	r3, #255
 10429 0030 2385     		strh	r3, [r4, #40]	@ movhi
 10430 0032 01E0     		b	.L693
 10431              	.L692:
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10432              		.loc 1 6024 0
 10433 0034 638D     		ldrh	r3, [r4, #42]
 10434 0036 2385     		strh	r3, [r4, #40]	@ movhi
 10435              	.L693:
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10436              		.loc 1 6028 0
 10437 0038 2268     		ldr	r2, [r4]
 10438 003a 238D     		ldrh	r3, [r4, #40]
 10439 003c 2832     		adds	r2, r2, #40
 10440 003e A06B     		ldr	r0, [r4, #56]
 10441              	.LVL923:
 10442 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10443              	.LVL924:
 10444 0044 20B1     		cbz	r0, .L694
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10445              		.loc 1 6031 0
 10446 0046 1021     		movs	r1, #16
 10447 0048 2046     		mov	r0, r4
 10448 004a FFF7FEFF 		bl	I2C_ITError
 10449              	.LVL925:
 10450 004e 10BD     		pop	{r4, pc}
 10451              	.LVL926:
 10452              	.L694:
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10453              		.loc 1 6036 0
 10454 0050 4021     		movs	r1, #64
 10455 0052 2046     		mov	r0, r4
 10456 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 10457              	.LVL927:
 10458 0058 10BD     		pop	{r4, pc}
 10459              		.cfi_endproc
 10460              	.LFE205:
 10462 005a 00BF     		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10463              		.align	2
 10464              		.thumb
 10465              		.thumb_func
 10467              	I2C_DMAMasterReceiveCplt:
 10468              	.LFB207:
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10469              		.loc 1 6074 0
 10470              		.cfi_startproc
 10471              		@ args = 0, pretend = 0, frame = 0
 10472              		@ frame_needed = 0, uses_anonymous_args = 0
 10473              	.LVL928:
 10474 0000 10B5     		push	{r4, lr}
 10475              	.LCFI119:
 10476              		.cfi_def_cfa_offset 8
 10477              		.cfi_offset 4, -8
 10478              		.cfi_offset 14, -4
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10479              		.loc 1 6075 0
 10480 0002 846B     		ldr	r4, [r0, #56]
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 332


 10481              	.LVL929:
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10482              		.loc 1 6078 0
 10483 0004 2268     		ldr	r2, [r4]
 10484 0006 1368     		ldr	r3, [r2]
 10485 0008 23F40043 		bic	r3, r3, #32768
 10486 000c 1360     		str	r3, [r2]
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10487              		.loc 1 6081 0
 10488 000e 638D     		ldrh	r3, [r4, #42]
 10489 0010 9BB2     		uxth	r3, r3
 10490 0012 23B9     		cbnz	r3, .L697
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10491              		.loc 1 6084 0
 10492 0014 2021     		movs	r1, #32
 10493 0016 2046     		mov	r0, r4
 10494              	.LVL930:
 10495 0018 FFF7FEFF 		bl	I2C_Enable_IRQ
 10496              	.LVL931:
 10497 001c 10BD     		pop	{r4, pc}
 10498              	.LVL932:
 10499              	.L697:
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10500              		.loc 1 6090 0
 10501 001e 238D     		ldrh	r3, [r4, #40]
 10502 0020 626A     		ldr	r2, [r4, #36]
 10503 0022 1A44     		add	r2, r2, r3
 10504 0024 6262     		str	r2, [r4, #36]
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10505              		.loc 1 6093 0
 10506 0026 638D     		ldrh	r3, [r4, #42]
 10507 0028 9BB2     		uxth	r3, r3
 10508 002a FF2B     		cmp	r3, #255
 10509 002c 02D9     		bls	.L699
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10510              		.loc 1 6095 0
 10511 002e FF23     		movs	r3, #255
 10512 0030 2385     		strh	r3, [r4, #40]	@ movhi
 10513 0032 01E0     		b	.L700
 10514              	.L699:
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10515              		.loc 1 6099 0
 10516 0034 638D     		ldrh	r3, [r4, #42]
 10517 0036 2385     		strh	r3, [r4, #40]	@ movhi
 10518              	.L700:
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     {
 10519              		.loc 1 6103 0
 10520 0038 2168     		ldr	r1, [r4]
 10521 003a 238D     		ldrh	r3, [r4, #40]
 10522 003c 2431     		adds	r1, r1, #36
 10523 003e E06B     		ldr	r0, [r4, #60]
 10524              	.LVL933:
 10525 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10526              	.LVL934:
 10527 0044 20B1     		cbz	r0, .L701
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10528              		.loc 1 6106 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 333


 10529 0046 1021     		movs	r1, #16
 10530 0048 2046     		mov	r0, r4
 10531 004a FFF7FEFF 		bl	I2C_ITError
 10532              	.LVL935:
 10533 004e 10BD     		pop	{r4, pc}
 10534              	.LVL936:
 10535              	.L701:
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****     }
 10536              		.loc 1 6111 0
 10537 0050 4021     		movs	r1, #64
 10538 0052 2046     		mov	r0, r4
 10539 0054 FFF7FEFF 		bl	I2C_Enable_IRQ
 10540              	.LVL937:
 10541 0058 10BD     		pop	{r4, pc}
 10542              		.cfi_endproc
 10543              	.LFE207:
 10545 005a 00BF     		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10546              		.align	2
 10547              		.global	HAL_I2C_ER_IRQHandler
 10548              		.thumb
 10549              		.thumb_func
 10551              	HAL_I2C_ER_IRQHandler:
 10552              	.LFB176:
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10553              		.loc 1 4332 0
 10554              		.cfi_startproc
 10555              		@ args = 0, pretend = 0, frame = 0
 10556              		@ frame_needed = 0, uses_anonymous_args = 0
 10557              	.LVL938:
 10558 0000 10B5     		push	{r4, lr}
 10559              	.LCFI120:
 10560              		.cfi_def_cfa_offset 8
 10561              		.cfi_offset 4, -8
 10562              		.cfi_offset 14, -4
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10563              		.loc 1 4333 0
 10564 0002 0268     		ldr	r2, [r0]
 10565 0004 9369     		ldr	r3, [r2, #24]
 10566              	.LVL939:
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   uint32_t tmperror;
 10567              		.loc 1 4334 0
 10568 0006 1168     		ldr	r1, [r2]
 10569              	.LVL940:
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10570              		.loc 1 4338 0
 10571 0008 13F4807F 		tst	r3, #256
 10572 000c 09D0     		beq	.L704
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10573              		.loc 1 4338 0 is_stmt 0 discriminator 1
 10574 000e 11F0800F 		tst	r1, #128
 10575 0012 06D0     		beq	.L704
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10576              		.loc 1 4340 0 is_stmt 1
 10577 0014 446C     		ldr	r4, [r0, #68]
 10578 0016 44F00104 		orr	r4, r4, #1
 10579 001a 4464     		str	r4, [r0, #68]
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 334


 10580              		.loc 1 4343 0
 10581 001c 4FF48074 		mov	r4, #256
 10582 0020 D461     		str	r4, [r2, #28]
 10583              	.L704:
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10584              		.loc 1 4347 0
 10585 0022 13F4806F 		tst	r3, #1024
 10586 0026 0AD0     		beq	.L705
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10587              		.loc 1 4347 0 is_stmt 0 discriminator 1
 10588 0028 11F0800F 		tst	r1, #128
 10589 002c 07D0     		beq	.L705
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10590              		.loc 1 4349 0 is_stmt 1
 10591 002e 426C     		ldr	r2, [r0, #68]
 10592 0030 42F00802 		orr	r2, r2, #8
 10593 0034 4264     		str	r2, [r0, #68]
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10594              		.loc 1 4352 0
 10595 0036 0268     		ldr	r2, [r0]
 10596 0038 4FF48064 		mov	r4, #1024
 10597 003c D461     		str	r4, [r2, #28]
 10598              	.L705:
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10599              		.loc 1 4356 0
 10600 003e 13F4007F 		tst	r3, #512
 10601 0042 0AD0     		beq	.L706
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10602              		.loc 1 4356 0 is_stmt 0 discriminator 1
 10603 0044 11F0800F 		tst	r1, #128
 10604 0048 07D0     		beq	.L706
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10605              		.loc 1 4358 0 is_stmt 1
 10606 004a 436C     		ldr	r3, [r0, #68]
 10607              	.LVL941:
 10608 004c 43F00203 		orr	r3, r3, #2
 10609 0050 4364     		str	r3, [r0, #68]
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10610              		.loc 1 4361 0
 10611 0052 0368     		ldr	r3, [r0]
 10612 0054 4FF40072 		mov	r2, #512
 10613 0058 DA61     		str	r2, [r3, #28]
 10614              	.L706:
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10615              		.loc 1 4365 0
 10616 005a 416C     		ldr	r1, [r0, #68]
 10617              	.LVL942:
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10618              		.loc 1 4368 0
 10619 005c 11F00B0F 		tst	r1, #11
 10620 0060 01D0     		beq	.L703
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10621              		.loc 1 4370 0
 10622 0062 FFF7FEFF 		bl	I2C_ITError
 10623              	.LVL943:
 10624              	.L703:
 10625 0066 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 335


 10626              		.cfi_endproc
 10627              	.LFE176:
 10629              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10630              		.align	2
 10631              		.thumb
 10632              		.thumb_func
 10634              	I2C_DMAAbort:
 10635              	.LFB210:
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10636              		.loc 1 6187 0
 10637              		.cfi_startproc
 10638              		@ args = 0, pretend = 0, frame = 0
 10639              		@ frame_needed = 0, uses_anonymous_args = 0
 10640              	.LVL944:
 10641 0000 08B5     		push	{r3, lr}
 10642              	.LCFI121:
 10643              		.cfi_def_cfa_offset 8
 10644              		.cfi_offset 3, -8
 10645              		.cfi_offset 14, -4
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10646              		.loc 1 6188 0
 10647 0002 806B     		ldr	r0, [r0, #56]
 10648              	.LVL945:
6191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10649              		.loc 1 6191 0
 10650 0004 836B     		ldr	r3, [r0, #56]
 10651 0006 0BB1     		cbz	r3, .L710
6193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10652              		.loc 1 6193 0
 10653 0008 0022     		movs	r2, #0
 10654 000a 1A65     		str	r2, [r3, #80]
 10655              	.L710:
6195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   {
 10656              		.loc 1 6195 0
 10657 000c C36B     		ldr	r3, [r0, #60]
 10658 000e 0BB1     		cbz	r3, .L711
6197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   }
 10659              		.loc 1 6197 0
 10660 0010 0022     		movs	r2, #0
 10661 0012 1A65     		str	r2, [r3, #80]
 10662              	.L711:
6200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 10663              		.loc 1 6200 0
 10664 0014 FFF7FEFF 		bl	I2C_TreatErrorCallback
 10665              	.LVL946:
 10666 0018 08BD     		pop	{r3, pc}
 10667              		.cfi_endproc
 10668              	.LFE210:
 10670 001a 00BF     		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10671              		.align	2
 10672              		.global	HAL_I2C_GetState
 10673              		.thumb
 10674              		.thumb_func
 10676              	HAL_I2C_GetState:
 10677              	.LFB187:
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   /* Return I2C handle state */
 10678              		.loc 1 4563 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 336


 10679              		.cfi_startproc
 10680              		@ args = 0, pretend = 0, frame = 0
 10681              		@ frame_needed = 0, uses_anonymous_args = 0
 10682              		@ link register save eliminated.
 10683              	.LVL947:
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 10684              		.loc 1 4565 0
 10685 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10686              	.LVL948:
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10687              		.loc 1 4566 0
 10688 0004 7047     		bx	lr
 10689              		.cfi_endproc
 10690              	.LFE187:
 10692 0006 00BF     		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10693              		.align	2
 10694              		.global	HAL_I2C_GetMode
 10695              		.thumb
 10696              		.thumb_func
 10698              	HAL_I2C_GetMode:
 10699              	.LFB188:
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->Mode;
 10700              		.loc 1 4575 0
 10701              		.cfi_startproc
 10702              		@ args = 0, pretend = 0, frame = 0
 10703              		@ frame_needed = 0, uses_anonymous_args = 0
 10704              		@ link register save eliminated.
 10705              	.LVL949:
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 10706              		.loc 1 4576 0
 10707 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10708              	.LVL950:
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10709              		.loc 1 4577 0
 10710 0004 7047     		bx	lr
 10711              		.cfi_endproc
 10712              	.LFE188:
 10714 0006 00BF     		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10715              		.align	2
 10716              		.global	HAL_I2C_GetError
 10717              		.thumb
 10718              		.thumb_func
 10720              	HAL_I2C_GetError:
 10721              	.LFB189:
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10722              		.loc 1 4586 0
 10723              		.cfi_startproc
 10724              		@ args = 0, pretend = 0, frame = 0
 10725              		@ frame_needed = 0, uses_anonymous_args = 0
 10726              		@ link register save eliminated.
 10727              	.LVL951:
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** }
 10728              		.loc 1 4587 0
 10729 0000 406C     		ldr	r0, [r0, #68]
 10730              	.LVL952:
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c **** 
 10731              		.loc 1 4588 0
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 337


 10732 0002 7047     		bx	lr
 10733              		.cfi_endproc
 10734              	.LFE189:
 10736              		.text
 10737              	.Letext0:
 10738              		.file 2 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 10739              		.file 3 "d:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 10740              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 10741              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 10742              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 10743              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 10744              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 10745              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 10746              		.file 10 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 338


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_i2c.c
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:21     .text.I2C_Flush_TXDR:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:25     .text.I2C_Flush_TXDR:00000000 I2C_Flush_TXDR
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:58     .text.I2C_TransferConfig:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:62     .text.I2C_TransferConfig:00000000 I2C_TransferConfig
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:110    .text.I2C_Enable_IRQ:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:114    .text.I2C_Enable_IRQ:00000000 I2C_Enable_IRQ
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:210    .text.I2C_Enable_IRQ:00000068 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9900   .text.I2C_Master_ISR_DMA:00000000 I2C_Master_ISR_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9522   .text.I2C_Slave_ISR_DMA:00000000 I2C_Slave_ISR_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:216    .text.I2C_Disable_IRQ:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:220    .text.I2C_Disable_IRQ:00000000 I2C_Disable_IRQ
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:323    .text.I2C_ConvertOtherXferOptions:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:327    .text.I2C_ConvertOtherXferOptions:00000000 I2C_ConvertOtherXferOptions
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:357    .text.I2C_IsAcknowledgeFailed:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:361    .text.I2C_IsAcknowledgeFailed:00000000 I2C_IsAcknowledgeFailed
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:462    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:466    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 I2C_WaitOnTXISFlagUntilTimeout
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:541    .text.I2C_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:545    .text.I2C_WaitOnFlagUntilTimeout:00000000 I2C_WaitOnFlagUntilTimeout
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:616    .text.I2C_RequestMemoryWrite:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:620    .text.I2C_RequestMemoryWrite:00000000 I2C_RequestMemoryWrite
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:714    .text.I2C_RequestMemoryWrite:0000006c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:719    .text.I2C_RequestMemoryRead:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:723    .text.I2C_RequestMemoryRead:00000000 I2C_RequestMemoryRead
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:817    .text.I2C_RequestMemoryRead:0000006c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:822    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:826    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 I2C_WaitOnSTOPFlagUntilTimeout
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:898    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:902    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 I2C_WaitOnRXNEFlagUntilTimeout
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1011   .text.HAL_I2C_MspInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1016   .text.HAL_I2C_MspInit:00000000 HAL_I2C_MspInit
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1029   .text.HAL_I2C_Init:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1034   .text.HAL_I2C_Init:00000000 HAL_I2C_Init
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1161   .text.HAL_I2C_Init:000000b8 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1166   .text.HAL_I2C_MspDeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1171   .text.HAL_I2C_MspDeInit:00000000 HAL_I2C_MspDeInit
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1184   .text.HAL_I2C_DeInit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1189   .text.HAL_I2C_DeInit:00000000 HAL_I2C_DeInit
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1243   .text.HAL_I2C_Master_Transmit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1248   .text.HAL_I2C_Master_Transmit:00000000 HAL_I2C_Master_Transmit
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1499   .text.HAL_I2C_Master_Transmit:00000178 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1504   .text.HAL_I2C_Master_Receive:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1509   .text.HAL_I2C_Master_Receive:00000000 HAL_I2C_Master_Receive
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1759   .text.HAL_I2C_Master_Receive:00000174 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1764   .text.HAL_I2C_Slave_Transmit:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:1769   .text.HAL_I2C_Slave_Transmit:00000000 HAL_I2C_Slave_Transmit
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2035   .text.HAL_I2C_Slave_Receive:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2040   .text.HAL_I2C_Slave_Receive:00000000 HAL_I2C_Slave_Receive
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2295   .text.HAL_I2C_Master_Transmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2300   .text.HAL_I2C_Master_Transmit_IT:00000000 HAL_I2C_Master_Transmit_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2426   .text.HAL_I2C_Master_Transmit_IT:0000008c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9224   .text.I2C_Master_ISR_IT:00000000 I2C_Master_ISR_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2433   .text.HAL_I2C_Master_Receive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2438   .text.HAL_I2C_Master_Receive_IT:00000000 HAL_I2C_Master_Receive_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2564   .text.HAL_I2C_Master_Receive_IT:0000008c $d
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 339


C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2571   .text.HAL_I2C_Slave_Transmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2576   .text.HAL_I2C_Slave_Transmit_IT:00000000 HAL_I2C_Slave_Transmit_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2655   .text.HAL_I2C_Slave_Transmit_IT:0000005c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8784   .text.I2C_Slave_ISR_IT:00000000 I2C_Slave_ISR_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2661   .text.HAL_I2C_Slave_Receive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2666   .text.HAL_I2C_Slave_Receive_IT:00000000 HAL_I2C_Slave_Receive_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2745   .text.HAL_I2C_Slave_Receive_IT:0000005c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2751   .text.HAL_I2C_Master_Transmit_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2756   .text.HAL_I2C_Master_Transmit_DMA:00000000 HAL_I2C_Master_Transmit_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:2997   .text.HAL_I2C_Master_Transmit_DMA:0000013c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10384  .text.I2C_DMAMasterTransmitCplt:00000000 I2C_DMAMasterTransmitCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10154  .text.I2C_DMAError:00000000 I2C_DMAError
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3007   .text.HAL_I2C_Master_Receive_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3012   .text.HAL_I2C_Master_Receive_DMA:00000000 HAL_I2C_Master_Receive_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3251   .text.HAL_I2C_Master_Receive_DMA:0000013c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10467  .text.I2C_DMAMasterReceiveCplt:00000000 I2C_DMAMasterReceiveCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3261   .text.HAL_I2C_Slave_Transmit_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3266   .text.HAL_I2C_Slave_Transmit_DMA:00000000 HAL_I2C_Slave_Transmit_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3435   .text.HAL_I2C_Slave_Transmit_DMA:000000e0 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7658   .text.I2C_DMASlaveTransmitCplt:00000000 I2C_DMASlaveTransmitCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3443   .text.HAL_I2C_Slave_Receive_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3448   .text.HAL_I2C_Slave_Receive_DMA:00000000 HAL_I2C_Slave_Receive_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3620   .text.HAL_I2C_Slave_Receive_DMA:000000e0 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7700   .text.I2C_DMASlaveReceiveCplt:00000000 I2C_DMASlaveReceiveCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3628   .text.HAL_I2C_Mem_Write:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3633   .text.HAL_I2C_Mem_Write:00000000 HAL_I2C_Mem_Write
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3919   .text.HAL_I2C_Mem_Read:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:3924   .text.HAL_I2C_Mem_Read:00000000 HAL_I2C_Mem_Read
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4211   .text.HAL_I2C_Mem_Read:000001ac $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4216   .text.HAL_I2C_Mem_Write_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4221   .text.HAL_I2C_Mem_Write_IT:00000000 HAL_I2C_Mem_Write_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4386   .text.HAL_I2C_Mem_Write_IT:000000e8 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4392   .text.HAL_I2C_Mem_Read_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4397   .text.HAL_I2C_Mem_Read_IT:00000000 HAL_I2C_Mem_Read_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4563   .text.HAL_I2C_Mem_Read_IT:000000ec $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4570   .text.HAL_I2C_Mem_Write_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4575   .text.HAL_I2C_Mem_Write_DMA:00000000 HAL_I2C_Mem_Write_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4817   .text.HAL_I2C_Mem_Write_DMA:00000184 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4825   .text.HAL_I2C_Mem_Read_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:4830   .text.HAL_I2C_Mem_Read_DMA:00000000 HAL_I2C_Mem_Read_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5073   .text.HAL_I2C_Mem_Read_DMA:00000188 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5082   .text.HAL_I2C_IsDeviceReady:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5087   .text.HAL_I2C_IsDeviceReady:00000000 HAL_I2C_IsDeviceReady
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5350   .text.HAL_I2C_IsDeviceReady:00000178 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5355   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5360   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000 HAL_I2C_Master_Seq_Transmit_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5515   .text.HAL_I2C_Master_Seq_Transmit_IT:000000ac $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5521   .text.HAL_I2C_Master_Seq_Transmit_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5526   .text.HAL_I2C_Master_Seq_Transmit_DMA:00000000 HAL_I2C_Master_Seq_Transmit_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5791   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000015c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5800   .text.HAL_I2C_Master_Seq_Receive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5805   .text.HAL_I2C_Master_Seq_Receive_IT:00000000 HAL_I2C_Master_Seq_Receive_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5960   .text.HAL_I2C_Master_Seq_Receive_IT:000000ac $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5966   .text.HAL_I2C_Master_Seq_Receive_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:5971   .text.HAL_I2C_Master_Seq_Receive_DMA:00000000 HAL_I2C_Master_Seq_Receive_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6236   .text.HAL_I2C_Master_Seq_Receive_DMA:0000015c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6245   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000 $t
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 340


C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6250   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000 HAL_I2C_Slave_Seq_Transmit_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6401   .text.HAL_I2C_Slave_Seq_Transmit_IT:000000cc $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10634  .text.I2C_DMAAbort:00000000 I2C_DMAAbort
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6407   .text.HAL_I2C_Slave_Seq_Transmit_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6412   .text.HAL_I2C_Slave_Seq_Transmit_DMA:00000000 HAL_I2C_Slave_Seq_Transmit_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6681   .text.HAL_I2C_Slave_Seq_Transmit_DMA:00000184 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6689   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6694   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000 HAL_I2C_Slave_Seq_Receive_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6845   .text.HAL_I2C_Slave_Seq_Receive_IT:000000cc $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6851   .text.HAL_I2C_Slave_Seq_Receive_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:6856   .text.HAL_I2C_Slave_Seq_Receive_DMA:00000000 HAL_I2C_Slave_Seq_Receive_DMA
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7123   .text.HAL_I2C_Slave_Seq_Receive_DMA:00000184 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7131   .text.HAL_I2C_EnableListen_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7136   .text.HAL_I2C_EnableListen_IT:00000000 HAL_I2C_EnableListen_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7176   .text.HAL_I2C_EnableListen_IT:00000028 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7181   .text.HAL_I2C_DisableListen_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7186   .text.HAL_I2C_DisableListen_IT:00000000 HAL_I2C_DisableListen_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7242   .text.HAL_I2C_Master_Abort_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7247   .text.HAL_I2C_Master_Abort_IT:00000000 HAL_I2C_Master_Abort_IT
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7365   .text.HAL_I2C_Master_Abort_IT:00000080 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7370   .text.HAL_I2C_EV_IRQHandler:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7375   .text.HAL_I2C_EV_IRQHandler:00000000 HAL_I2C_EV_IRQHandler
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7406   .text.HAL_I2C_MasterTxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7411   .text.HAL_I2C_MasterTxCpltCallback:00000000 HAL_I2C_MasterTxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7424   .text.HAL_I2C_MasterRxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7429   .text.HAL_I2C_MasterRxCpltCallback:00000000 HAL_I2C_MasterRxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7442   .text.I2C_ITMasterSeqCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7446   .text.I2C_ITMasterSeqCplt:00000000 I2C_ITMasterSeqCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7516   .text.HAL_I2C_SlaveTxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7521   .text.HAL_I2C_SlaveTxCpltCallback:00000000 HAL_I2C_SlaveTxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7534   .text.HAL_I2C_SlaveRxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7539   .text.HAL_I2C_SlaveRxCpltCallback:00000000 HAL_I2C_SlaveRxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7552   .text.I2C_ITSlaveSeqCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7556   .text.I2C_ITSlaveSeqCplt:00000000 I2C_ITSlaveSeqCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7654   .text.I2C_DMASlaveTransmitCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7696   .text.I2C_DMASlaveReceiveCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7814   .text.I2C_DMASlaveReceiveCplt:00000098 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7820   .text.HAL_I2C_AddrCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7825   .text.HAL_I2C_AddrCallback:00000000 HAL_I2C_AddrCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7838   .text.I2C_ITAddrCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7842   .text.I2C_ITAddrCplt:00000000 I2C_ITAddrCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7967   .text.HAL_I2C_ListenCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7972   .text.HAL_I2C_ListenCpltCallback:00000000 HAL_I2C_ListenCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7985   .text.I2C_ITListenCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:7989   .text.I2C_ITListenCplt:00000000 I2C_ITListenCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8068   .text.I2C_ITListenCplt:00000064 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8073   .text.HAL_I2C_MemTxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8078   .text.HAL_I2C_MemTxCpltCallback:00000000 HAL_I2C_MemTxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8091   .text.HAL_I2C_MemRxCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8096   .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8109   .text.HAL_I2C_ErrorCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8114   .text.HAL_I2C_ErrorCallback:00000000 HAL_I2C_ErrorCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8127   .text.HAL_I2C_AbortCpltCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8132   .text.HAL_I2C_AbortCpltCallback:00000000 HAL_I2C_AbortCpltCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8145   .text.I2C_TreatErrorCallback:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8149   .text.I2C_TreatErrorCallback:00000000 I2C_TreatErrorCallback
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8194   .text.I2C_ITError:00000000 $t
ARM GAS  C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s 			page 341


C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8198   .text.I2C_ITError:00000000 I2C_ITError
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8384   .text.I2C_ITError:000000f8 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8391   .text.I2C_ITSlaveCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8395   .text.I2C_ITSlaveCplt:00000000 I2C_ITSlaveCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8773   .text.I2C_ITSlaveCplt:00000230 $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:8780   .text.I2C_Slave_ISR_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9010   .text.I2C_ITMasterCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9014   .text.I2C_ITMasterCplt:00000000 I2C_ITMasterCplt
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9220   .text.I2C_Master_ISR_IT:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9518   .text.I2C_Slave_ISR_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9890   .text.I2C_Slave_ISR_DMA:0000020c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:9896   .text.I2C_Master_ISR_DMA:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10150  .text.I2C_DMAError:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10374  .text.I2C_DMAError:0000012c $d
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10380  .text.I2C_DMAMasterTransmitCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10463  .text.I2C_DMAMasterReceiveCplt:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10546  .text.HAL_I2C_ER_IRQHandler:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10551  .text.HAL_I2C_ER_IRQHandler:00000000 HAL_I2C_ER_IRQHandler
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10630  .text.I2C_DMAAbort:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10671  .text.HAL_I2C_GetState:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10676  .text.HAL_I2C_GetState:00000000 HAL_I2C_GetState
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10693  .text.HAL_I2C_GetMode:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10698  .text.HAL_I2C_GetMode:00000000 HAL_I2C_GetMode
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10715  .text.HAL_I2C_GetError:00000000 $t
C:\Users\xiaofei\AppData\Local\Temp\ccAkVWhS.s:10720  .text.HAL_I2C_GetError:00000000 HAL_I2C_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetState
HAL_DMA_GetError
